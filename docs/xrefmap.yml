### YamlMime:XRefMap
sorted: true
references:
- uid: Tournaments.Api
  name: Tournaments.Api
  href: Tournaments.Api.html
  commentId: N:Tournaments.Api
  fullName: Tournaments.Api
  nameWithType: Tournaments.Api
- uid: Tournaments.Api.Controllers
  name: Tournaments.Api.Controllers
  href: Tournaments.Api.Controllers.html
  commentId: N:Tournaments.Api.Controllers
  fullName: Tournaments.Api.Controllers
  nameWithType: Tournaments.Api.Controllers
- uid: Tournaments.Api.Controllers.HomeController
  name: HomeController
  href: Tournaments.Api.Controllers.HomeController.html
  commentId: T:Tournaments.Api.Controllers.HomeController
  fullName: Tournaments.Api.Controllers.HomeController
  nameWithType: HomeController
- uid: Tournaments.Api.Controllers.HomeController.GetApiRoot
  name: GetApiRoot()
  href: Tournaments.Api.Controllers.HomeController.html#Tournaments_Api_Controllers_HomeController_GetApiRoot
  commentId: M:Tournaments.Api.Controllers.HomeController.GetApiRoot
  fullName: Tournaments.Api.Controllers.HomeController.GetApiRoot()
  nameWithType: HomeController.GetApiRoot()
- uid: Tournaments.Api.Controllers.HomeController.GetApiRoot*
  name: GetApiRoot
  href: Tournaments.Api.Controllers.HomeController.html#Tournaments_Api_Controllers_HomeController_GetApiRoot_
  commentId: Overload:Tournaments.Api.Controllers.HomeController.GetApiRoot
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.HomeController.GetApiRoot
  nameWithType: HomeController.GetApiRoot
- uid: Tournaments.Api.Controllers.HomeController.RedirectToApiRoot
  name: RedirectToApiRoot()
  href: Tournaments.Api.Controllers.HomeController.html#Tournaments_Api_Controllers_HomeController_RedirectToApiRoot
  commentId: M:Tournaments.Api.Controllers.HomeController.RedirectToApiRoot
  fullName: Tournaments.Api.Controllers.HomeController.RedirectToApiRoot()
  nameWithType: HomeController.RedirectToApiRoot()
- uid: Tournaments.Api.Controllers.HomeController.RedirectToApiRoot*
  name: RedirectToApiRoot
  href: Tournaments.Api.Controllers.HomeController.html#Tournaments_Api_Controllers_HomeController_RedirectToApiRoot_
  commentId: Overload:Tournaments.Api.Controllers.HomeController.RedirectToApiRoot
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.HomeController.RedirectToApiRoot
  nameWithType: HomeController.RedirectToApiRoot
- uid: Tournaments.Api.Controllers.PlayersController
  name: PlayersController
  href: Tournaments.Api.Controllers.PlayersController.html
  commentId: T:Tournaments.Api.Controllers.PlayersController
  fullName: Tournaments.Api.Controllers.PlayersController
  nameWithType: PlayersController
- uid: Tournaments.Api.Controllers.PlayersController.#ctor(Tournaments.Api.Data.TournamentsApiContext,Microsoft.Extensions.Logging.ILogger{Tournaments.Api.Controllers.PlayersController})
  name: PlayersController(TournamentsApiContext, ILogger<PlayersController>)
  href: Tournaments.Api.Controllers.PlayersController.html#Tournaments_Api_Controllers_PlayersController__ctor_Tournaments_Api_Data_TournamentsApiContext_Microsoft_Extensions_Logging_ILogger_Tournaments_Api_Controllers_PlayersController__
  commentId: M:Tournaments.Api.Controllers.PlayersController.#ctor(Tournaments.Api.Data.TournamentsApiContext,Microsoft.Extensions.Logging.ILogger{Tournaments.Api.Controllers.PlayersController})
  name.vb: New(TournamentsApiContext, ILogger(Of PlayersController))
  fullName: Tournaments.Api.Controllers.PlayersController.PlayersController(Tournaments.Api.Data.TournamentsApiContext, Microsoft.Extensions.Logging.ILogger<Tournaments.Api.Controllers.PlayersController>)
  fullName.vb: Tournaments.Api.Controllers.PlayersController.New(Tournaments.Api.Data.TournamentsApiContext, Microsoft.Extensions.Logging.ILogger(Of Tournaments.Api.Controllers.PlayersController))
  nameWithType: PlayersController.PlayersController(TournamentsApiContext, ILogger<PlayersController>)
  nameWithType.vb: PlayersController.New(TournamentsApiContext, ILogger(Of PlayersController))
- uid: Tournaments.Api.Controllers.PlayersController.#ctor*
  name: PlayersController
  href: Tournaments.Api.Controllers.PlayersController.html#Tournaments_Api_Controllers_PlayersController__ctor_
  commentId: Overload:Tournaments.Api.Controllers.PlayersController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Tournaments.Api.Controllers.PlayersController.PlayersController
  fullName.vb: Tournaments.Api.Controllers.PlayersController.New
  nameWithType: PlayersController.PlayersController
  nameWithType.vb: PlayersController.New
- uid: Tournaments.Api.Controllers.PlayersController.DeletePlayer(System.String)
  name: DeletePlayer(string)
  href: Tournaments.Api.Controllers.PlayersController.html#Tournaments_Api_Controllers_PlayersController_DeletePlayer_System_String_
  commentId: M:Tournaments.Api.Controllers.PlayersController.DeletePlayer(System.String)
  name.vb: DeletePlayer(String)
  fullName: Tournaments.Api.Controllers.PlayersController.DeletePlayer(string)
  fullName.vb: Tournaments.Api.Controllers.PlayersController.DeletePlayer(String)
  nameWithType: PlayersController.DeletePlayer(string)
  nameWithType.vb: PlayersController.DeletePlayer(String)
- uid: Tournaments.Api.Controllers.PlayersController.DeletePlayer*
  name: DeletePlayer
  href: Tournaments.Api.Controllers.PlayersController.html#Tournaments_Api_Controllers_PlayersController_DeletePlayer_
  commentId: Overload:Tournaments.Api.Controllers.PlayersController.DeletePlayer
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.PlayersController.DeletePlayer
  nameWithType: PlayersController.DeletePlayer
- uid: Tournaments.Api.Controllers.PlayersController.GetPlayer(System.String)
  name: GetPlayer(string)
  href: Tournaments.Api.Controllers.PlayersController.html#Tournaments_Api_Controllers_PlayersController_GetPlayer_System_String_
  commentId: M:Tournaments.Api.Controllers.PlayersController.GetPlayer(System.String)
  name.vb: GetPlayer(String)
  fullName: Tournaments.Api.Controllers.PlayersController.GetPlayer(string)
  fullName.vb: Tournaments.Api.Controllers.PlayersController.GetPlayer(String)
  nameWithType: PlayersController.GetPlayer(string)
  nameWithType.vb: PlayersController.GetPlayer(String)
- uid: Tournaments.Api.Controllers.PlayersController.GetPlayer*
  name: GetPlayer
  href: Tournaments.Api.Controllers.PlayersController.html#Tournaments_Api_Controllers_PlayersController_GetPlayer_
  commentId: Overload:Tournaments.Api.Controllers.PlayersController.GetPlayer
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.PlayersController.GetPlayer
  nameWithType: PlayersController.GetPlayer
- uid: Tournaments.Api.Controllers.PlayersController.GetPlayers
  name: GetPlayers()
  href: Tournaments.Api.Controllers.PlayersController.html#Tournaments_Api_Controllers_PlayersController_GetPlayers
  commentId: M:Tournaments.Api.Controllers.PlayersController.GetPlayers
  fullName: Tournaments.Api.Controllers.PlayersController.GetPlayers()
  nameWithType: PlayersController.GetPlayers()
- uid: Tournaments.Api.Controllers.PlayersController.GetPlayers*
  name: GetPlayers
  href: Tournaments.Api.Controllers.PlayersController.html#Tournaments_Api_Controllers_PlayersController_GetPlayers_
  commentId: Overload:Tournaments.Api.Controllers.PlayersController.GetPlayers
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.PlayersController.GetPlayers
  nameWithType: PlayersController.GetPlayers
- uid: Tournaments.Api.Controllers.PlayersController.GetTournamentsForPlayer(System.String)
  name: GetTournamentsForPlayer(string)
  href: Tournaments.Api.Controllers.PlayersController.html#Tournaments_Api_Controllers_PlayersController_GetTournamentsForPlayer_System_String_
  commentId: M:Tournaments.Api.Controllers.PlayersController.GetTournamentsForPlayer(System.String)
  name.vb: GetTournamentsForPlayer(String)
  fullName: Tournaments.Api.Controllers.PlayersController.GetTournamentsForPlayer(string)
  fullName.vb: Tournaments.Api.Controllers.PlayersController.GetTournamentsForPlayer(String)
  nameWithType: PlayersController.GetTournamentsForPlayer(string)
  nameWithType.vb: PlayersController.GetTournamentsForPlayer(String)
- uid: Tournaments.Api.Controllers.PlayersController.GetTournamentsForPlayer*
  name: GetTournamentsForPlayer
  href: Tournaments.Api.Controllers.PlayersController.html#Tournaments_Api_Controllers_PlayersController_GetTournamentsForPlayer_
  commentId: Overload:Tournaments.Api.Controllers.PlayersController.GetTournamentsForPlayer
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.PlayersController.GetTournamentsForPlayer
  nameWithType: PlayersController.GetTournamentsForPlayer
- uid: Tournaments.Api.Controllers.PlayersController.PostPlayer(Tournaments.Shared.Models.Player)
  name: PostPlayer(Player)
  href: Tournaments.Api.Controllers.PlayersController.html#Tournaments_Api_Controllers_PlayersController_PostPlayer_Tournaments_Shared_Models_Player_
  commentId: M:Tournaments.Api.Controllers.PlayersController.PostPlayer(Tournaments.Shared.Models.Player)
  fullName: Tournaments.Api.Controllers.PlayersController.PostPlayer(Tournaments.Shared.Models.Player)
  nameWithType: PlayersController.PostPlayer(Player)
- uid: Tournaments.Api.Controllers.PlayersController.PostPlayer*
  name: PostPlayer
  href: Tournaments.Api.Controllers.PlayersController.html#Tournaments_Api_Controllers_PlayersController_PostPlayer_
  commentId: Overload:Tournaments.Api.Controllers.PlayersController.PostPlayer
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.PlayersController.PostPlayer
  nameWithType: PlayersController.PostPlayer
- uid: Tournaments.Api.Controllers.PlayersController.PutPlayer(System.String,Tournaments.Shared.Models.Player)
  name: PutPlayer(string, Player)
  href: Tournaments.Api.Controllers.PlayersController.html#Tournaments_Api_Controllers_PlayersController_PutPlayer_System_String_Tournaments_Shared_Models_Player_
  commentId: M:Tournaments.Api.Controllers.PlayersController.PutPlayer(System.String,Tournaments.Shared.Models.Player)
  name.vb: PutPlayer(String, Player)
  fullName: Tournaments.Api.Controllers.PlayersController.PutPlayer(string, Tournaments.Shared.Models.Player)
  fullName.vb: Tournaments.Api.Controllers.PlayersController.PutPlayer(String, Tournaments.Shared.Models.Player)
  nameWithType: PlayersController.PutPlayer(string, Player)
  nameWithType.vb: PlayersController.PutPlayer(String, Player)
- uid: Tournaments.Api.Controllers.PlayersController.PutPlayer*
  name: PutPlayer
  href: Tournaments.Api.Controllers.PlayersController.html#Tournaments_Api_Controllers_PlayersController_PutPlayer_
  commentId: Overload:Tournaments.Api.Controllers.PlayersController.PutPlayer
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.PlayersController.PutPlayer
  nameWithType: PlayersController.PutPlayer
- uid: Tournaments.Api.Controllers.RegistrationsController
  name: RegistrationsController
  href: Tournaments.Api.Controllers.RegistrationsController.html
  commentId: T:Tournaments.Api.Controllers.RegistrationsController
  fullName: Tournaments.Api.Controllers.RegistrationsController
  nameWithType: RegistrationsController
- uid: Tournaments.Api.Controllers.RegistrationsController.#ctor(Tournaments.Api.Data.TournamentsApiContext)
  name: RegistrationsController(TournamentsApiContext)
  href: Tournaments.Api.Controllers.RegistrationsController.html#Tournaments_Api_Controllers_RegistrationsController__ctor_Tournaments_Api_Data_TournamentsApiContext_
  commentId: M:Tournaments.Api.Controllers.RegistrationsController.#ctor(Tournaments.Api.Data.TournamentsApiContext)
  name.vb: New(TournamentsApiContext)
  fullName: Tournaments.Api.Controllers.RegistrationsController.RegistrationsController(Tournaments.Api.Data.TournamentsApiContext)
  fullName.vb: Tournaments.Api.Controllers.RegistrationsController.New(Tournaments.Api.Data.TournamentsApiContext)
  nameWithType: RegistrationsController.RegistrationsController(TournamentsApiContext)
  nameWithType.vb: RegistrationsController.New(TournamentsApiContext)
- uid: Tournaments.Api.Controllers.RegistrationsController.#ctor*
  name: RegistrationsController
  href: Tournaments.Api.Controllers.RegistrationsController.html#Tournaments_Api_Controllers_RegistrationsController__ctor_
  commentId: Overload:Tournaments.Api.Controllers.RegistrationsController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Tournaments.Api.Controllers.RegistrationsController.RegistrationsController
  fullName.vb: Tournaments.Api.Controllers.RegistrationsController.New
  nameWithType: RegistrationsController.RegistrationsController
  nameWithType.vb: RegistrationsController.New
- uid: Tournaments.Api.Controllers.RegistrationsController.DeleteRegistration(System.Int32)
  name: DeleteRegistration(int)
  href: Tournaments.Api.Controllers.RegistrationsController.html#Tournaments_Api_Controllers_RegistrationsController_DeleteRegistration_System_Int32_
  commentId: M:Tournaments.Api.Controllers.RegistrationsController.DeleteRegistration(System.Int32)
  name.vb: DeleteRegistration(Integer)
  fullName: Tournaments.Api.Controllers.RegistrationsController.DeleteRegistration(int)
  fullName.vb: Tournaments.Api.Controllers.RegistrationsController.DeleteRegistration(Integer)
  nameWithType: RegistrationsController.DeleteRegistration(int)
  nameWithType.vb: RegistrationsController.DeleteRegistration(Integer)
- uid: Tournaments.Api.Controllers.RegistrationsController.DeleteRegistration*
  name: DeleteRegistration
  href: Tournaments.Api.Controllers.RegistrationsController.html#Tournaments_Api_Controllers_RegistrationsController_DeleteRegistration_
  commentId: Overload:Tournaments.Api.Controllers.RegistrationsController.DeleteRegistration
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.RegistrationsController.DeleteRegistration
  nameWithType: RegistrationsController.DeleteRegistration
- uid: Tournaments.Api.Controllers.RegistrationsController.DeleteRegistrationByTournamentAndPlayer(System.String,System.String)
  name: DeleteRegistrationByTournamentAndPlayer(string, string)
  href: Tournaments.Api.Controllers.RegistrationsController.html#Tournaments_Api_Controllers_RegistrationsController_DeleteRegistrationByTournamentAndPlayer_System_String_System_String_
  commentId: M:Tournaments.Api.Controllers.RegistrationsController.DeleteRegistrationByTournamentAndPlayer(System.String,System.String)
  name.vb: DeleteRegistrationByTournamentAndPlayer(String, String)
  fullName: Tournaments.Api.Controllers.RegistrationsController.DeleteRegistrationByTournamentAndPlayer(string, string)
  fullName.vb: Tournaments.Api.Controllers.RegistrationsController.DeleteRegistrationByTournamentAndPlayer(String, String)
  nameWithType: RegistrationsController.DeleteRegistrationByTournamentAndPlayer(string, string)
  nameWithType.vb: RegistrationsController.DeleteRegistrationByTournamentAndPlayer(String, String)
- uid: Tournaments.Api.Controllers.RegistrationsController.DeleteRegistrationByTournamentAndPlayer*
  name: DeleteRegistrationByTournamentAndPlayer
  href: Tournaments.Api.Controllers.RegistrationsController.html#Tournaments_Api_Controllers_RegistrationsController_DeleteRegistrationByTournamentAndPlayer_
  commentId: Overload:Tournaments.Api.Controllers.RegistrationsController.DeleteRegistrationByTournamentAndPlayer
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.RegistrationsController.DeleteRegistrationByTournamentAndPlayer
  nameWithType: RegistrationsController.DeleteRegistrationByTournamentAndPlayer
- uid: Tournaments.Api.Controllers.RegistrationsController.GetPlayersInTournament(System.String)
  name: GetPlayersInTournament(string)
  href: Tournaments.Api.Controllers.RegistrationsController.html#Tournaments_Api_Controllers_RegistrationsController_GetPlayersInTournament_System_String_
  commentId: M:Tournaments.Api.Controllers.RegistrationsController.GetPlayersInTournament(System.String)
  name.vb: GetPlayersInTournament(String)
  fullName: Tournaments.Api.Controllers.RegistrationsController.GetPlayersInTournament(string)
  fullName.vb: Tournaments.Api.Controllers.RegistrationsController.GetPlayersInTournament(String)
  nameWithType: RegistrationsController.GetPlayersInTournament(string)
  nameWithType.vb: RegistrationsController.GetPlayersInTournament(String)
- uid: Tournaments.Api.Controllers.RegistrationsController.GetPlayersInTournament*
  name: GetPlayersInTournament
  href: Tournaments.Api.Controllers.RegistrationsController.html#Tournaments_Api_Controllers_RegistrationsController_GetPlayersInTournament_
  commentId: Overload:Tournaments.Api.Controllers.RegistrationsController.GetPlayersInTournament
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.RegistrationsController.GetPlayersInTournament
  nameWithType: RegistrationsController.GetPlayersInTournament
- uid: Tournaments.Api.Controllers.RegistrationsController.GetRegistration(System.Int32)
  name: GetRegistration(int)
  href: Tournaments.Api.Controllers.RegistrationsController.html#Tournaments_Api_Controllers_RegistrationsController_GetRegistration_System_Int32_
  commentId: M:Tournaments.Api.Controllers.RegistrationsController.GetRegistration(System.Int32)
  name.vb: GetRegistration(Integer)
  fullName: Tournaments.Api.Controllers.RegistrationsController.GetRegistration(int)
  fullName.vb: Tournaments.Api.Controllers.RegistrationsController.GetRegistration(Integer)
  nameWithType: RegistrationsController.GetRegistration(int)
  nameWithType.vb: RegistrationsController.GetRegistration(Integer)
- uid: Tournaments.Api.Controllers.RegistrationsController.GetRegistration*
  name: GetRegistration
  href: Tournaments.Api.Controllers.RegistrationsController.html#Tournaments_Api_Controllers_RegistrationsController_GetRegistration_
  commentId: Overload:Tournaments.Api.Controllers.RegistrationsController.GetRegistration
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.RegistrationsController.GetRegistration
  nameWithType: RegistrationsController.GetRegistration
- uid: Tournaments.Api.Controllers.RegistrationsController.GetRegistrationByTournamentAndPlayer(System.String,System.String)
  name: GetRegistrationByTournamentAndPlayer(string, string)
  href: Tournaments.Api.Controllers.RegistrationsController.html#Tournaments_Api_Controllers_RegistrationsController_GetRegistrationByTournamentAndPlayer_System_String_System_String_
  commentId: M:Tournaments.Api.Controllers.RegistrationsController.GetRegistrationByTournamentAndPlayer(System.String,System.String)
  name.vb: GetRegistrationByTournamentAndPlayer(String, String)
  fullName: Tournaments.Api.Controllers.RegistrationsController.GetRegistrationByTournamentAndPlayer(string, string)
  fullName.vb: Tournaments.Api.Controllers.RegistrationsController.GetRegistrationByTournamentAndPlayer(String, String)
  nameWithType: RegistrationsController.GetRegistrationByTournamentAndPlayer(string, string)
  nameWithType.vb: RegistrationsController.GetRegistrationByTournamentAndPlayer(String, String)
- uid: Tournaments.Api.Controllers.RegistrationsController.GetRegistrationByTournamentAndPlayer*
  name: GetRegistrationByTournamentAndPlayer
  href: Tournaments.Api.Controllers.RegistrationsController.html#Tournaments_Api_Controllers_RegistrationsController_GetRegistrationByTournamentAndPlayer_
  commentId: Overload:Tournaments.Api.Controllers.RegistrationsController.GetRegistrationByTournamentAndPlayer
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.RegistrationsController.GetRegistrationByTournamentAndPlayer
  nameWithType: RegistrationsController.GetRegistrationByTournamentAndPlayer
- uid: Tournaments.Api.Controllers.RegistrationsController.GetRegistrations
  name: GetRegistrations()
  href: Tournaments.Api.Controllers.RegistrationsController.html#Tournaments_Api_Controllers_RegistrationsController_GetRegistrations
  commentId: M:Tournaments.Api.Controllers.RegistrationsController.GetRegistrations
  fullName: Tournaments.Api.Controllers.RegistrationsController.GetRegistrations()
  nameWithType: RegistrationsController.GetRegistrations()
- uid: Tournaments.Api.Controllers.RegistrationsController.GetRegistrations*
  name: GetRegistrations
  href: Tournaments.Api.Controllers.RegistrationsController.html#Tournaments_Api_Controllers_RegistrationsController_GetRegistrations_
  commentId: Overload:Tournaments.Api.Controllers.RegistrationsController.GetRegistrations
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.RegistrationsController.GetRegistrations
  nameWithType: RegistrationsController.GetRegistrations
- uid: Tournaments.Api.Controllers.RegistrationsController.PostRegistration(System.String,System.String)
  name: PostRegistration(string, string)
  href: Tournaments.Api.Controllers.RegistrationsController.html#Tournaments_Api_Controllers_RegistrationsController_PostRegistration_System_String_System_String_
  commentId: M:Tournaments.Api.Controllers.RegistrationsController.PostRegistration(System.String,System.String)
  name.vb: PostRegistration(String, String)
  fullName: Tournaments.Api.Controllers.RegistrationsController.PostRegistration(string, string)
  fullName.vb: Tournaments.Api.Controllers.RegistrationsController.PostRegistration(String, String)
  nameWithType: RegistrationsController.PostRegistration(string, string)
  nameWithType.vb: RegistrationsController.PostRegistration(String, String)
- uid: Tournaments.Api.Controllers.RegistrationsController.PostRegistration*
  name: PostRegistration
  href: Tournaments.Api.Controllers.RegistrationsController.html#Tournaments_Api_Controllers_RegistrationsController_PostRegistration_
  commentId: Overload:Tournaments.Api.Controllers.RegistrationsController.PostRegistration
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.RegistrationsController.PostRegistration
  nameWithType: RegistrationsController.PostRegistration
- uid: Tournaments.Api.Controllers.RegistrationsController.PutRegistration(System.Int32,Tournaments.Shared.Models.Registration)
  name: PutRegistration(int, Registration)
  href: Tournaments.Api.Controllers.RegistrationsController.html#Tournaments_Api_Controllers_RegistrationsController_PutRegistration_System_Int32_Tournaments_Shared_Models_Registration_
  commentId: M:Tournaments.Api.Controllers.RegistrationsController.PutRegistration(System.Int32,Tournaments.Shared.Models.Registration)
  name.vb: PutRegistration(Integer, Registration)
  fullName: Tournaments.Api.Controllers.RegistrationsController.PutRegistration(int, Tournaments.Shared.Models.Registration)
  fullName.vb: Tournaments.Api.Controllers.RegistrationsController.PutRegistration(Integer, Tournaments.Shared.Models.Registration)
  nameWithType: RegistrationsController.PutRegistration(int, Registration)
  nameWithType.vb: RegistrationsController.PutRegistration(Integer, Registration)
- uid: Tournaments.Api.Controllers.RegistrationsController.PutRegistration*
  name: PutRegistration
  href: Tournaments.Api.Controllers.RegistrationsController.html#Tournaments_Api_Controllers_RegistrationsController_PutRegistration_
  commentId: Overload:Tournaments.Api.Controllers.RegistrationsController.PutRegistration
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.RegistrationsController.PutRegistration
  nameWithType: RegistrationsController.PutRegistration
- uid: Tournaments.Api.Controllers.TestUtilityController
  name: TestUtilityController
  href: Tournaments.Api.Controllers.TestUtilityController.html
  commentId: T:Tournaments.Api.Controllers.TestUtilityController
  fullName: Tournaments.Api.Controllers.TestUtilityController
  nameWithType: TestUtilityController
- uid: Tournaments.Api.Controllers.TestUtilityController.#ctor(Tournaments.Api.Data.TournamentsApiContext,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  name: TestUtilityController(TournamentsApiContext, IWebHostEnvironment)
  href: Tournaments.Api.Controllers.TestUtilityController.html#Tournaments_Api_Controllers_TestUtilityController__ctor_Tournaments_Api_Data_TournamentsApiContext_Microsoft_AspNetCore_Hosting_IWebHostEnvironment_
  commentId: M:Tournaments.Api.Controllers.TestUtilityController.#ctor(Tournaments.Api.Data.TournamentsApiContext,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  name.vb: New(TournamentsApiContext, IWebHostEnvironment)
  fullName: Tournaments.Api.Controllers.TestUtilityController.TestUtilityController(Tournaments.Api.Data.TournamentsApiContext, Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  fullName.vb: Tournaments.Api.Controllers.TestUtilityController.New(Tournaments.Api.Data.TournamentsApiContext, Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  nameWithType: TestUtilityController.TestUtilityController(TournamentsApiContext, IWebHostEnvironment)
  nameWithType.vb: TestUtilityController.New(TournamentsApiContext, IWebHostEnvironment)
- uid: Tournaments.Api.Controllers.TestUtilityController.#ctor*
  name: TestUtilityController
  href: Tournaments.Api.Controllers.TestUtilityController.html#Tournaments_Api_Controllers_TestUtilityController__ctor_
  commentId: Overload:Tournaments.Api.Controllers.TestUtilityController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Tournaments.Api.Controllers.TestUtilityController.TestUtilityController
  fullName.vb: Tournaments.Api.Controllers.TestUtilityController.New
  nameWithType: TestUtilityController.TestUtilityController
  nameWithType.vb: TestUtilityController.New
- uid: Tournaments.Api.Controllers.TestUtilityController.GetApiStatus
  name: GetApiStatus()
  href: Tournaments.Api.Controllers.TestUtilityController.html#Tournaments_Api_Controllers_TestUtilityController_GetApiStatus
  commentId: M:Tournaments.Api.Controllers.TestUtilityController.GetApiStatus
  fullName: Tournaments.Api.Controllers.TestUtilityController.GetApiStatus()
  nameWithType: TestUtilityController.GetApiStatus()
- uid: Tournaments.Api.Controllers.TestUtilityController.GetApiStatus*
  name: GetApiStatus
  href: Tournaments.Api.Controllers.TestUtilityController.html#Tournaments_Api_Controllers_TestUtilityController_GetApiStatus_
  commentId: Overload:Tournaments.Api.Controllers.TestUtilityController.GetApiStatus
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.TestUtilityController.GetApiStatus
  nameWithType: TestUtilityController.GetApiStatus
- uid: Tournaments.Api.Controllers.TestUtilityController.GetDatabaseStatus
  name: GetDatabaseStatus()
  href: Tournaments.Api.Controllers.TestUtilityController.html#Tournaments_Api_Controllers_TestUtilityController_GetDatabaseStatus
  commentId: M:Tournaments.Api.Controllers.TestUtilityController.GetDatabaseStatus
  fullName: Tournaments.Api.Controllers.TestUtilityController.GetDatabaseStatus()
  nameWithType: TestUtilityController.GetDatabaseStatus()
- uid: Tournaments.Api.Controllers.TestUtilityController.GetDatabaseStatus*
  name: GetDatabaseStatus
  href: Tournaments.Api.Controllers.TestUtilityController.html#Tournaments_Api_Controllers_TestUtilityController_GetDatabaseStatus_
  commentId: Overload:Tournaments.Api.Controllers.TestUtilityController.GetDatabaseStatus
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.TestUtilityController.GetDatabaseStatus
  nameWithType: TestUtilityController.GetDatabaseStatus
- uid: Tournaments.Api.Controllers.TestUtilityController.ResetDatabase
  name: ResetDatabase()
  href: Tournaments.Api.Controllers.TestUtilityController.html#Tournaments_Api_Controllers_TestUtilityController_ResetDatabase
  commentId: M:Tournaments.Api.Controllers.TestUtilityController.ResetDatabase
  fullName: Tournaments.Api.Controllers.TestUtilityController.ResetDatabase()
  nameWithType: TestUtilityController.ResetDatabase()
- uid: Tournaments.Api.Controllers.TestUtilityController.ResetDatabase*
  name: ResetDatabase
  href: Tournaments.Api.Controllers.TestUtilityController.html#Tournaments_Api_Controllers_TestUtilityController_ResetDatabase_
  commentId: Overload:Tournaments.Api.Controllers.TestUtilityController.ResetDatabase
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.TestUtilityController.ResetDatabase
  nameWithType: TestUtilityController.ResetDatabase
- uid: Tournaments.Api.Controllers.TournamentsController
  name: TournamentsController
  href: Tournaments.Api.Controllers.TournamentsController.html
  commentId: T:Tournaments.Api.Controllers.TournamentsController
  fullName: Tournaments.Api.Controllers.TournamentsController
  nameWithType: TournamentsController
- uid: Tournaments.Api.Controllers.TournamentsController.#ctor(Tournaments.Api.Data.TournamentsApiContext)
  name: TournamentsController(TournamentsApiContext)
  href: Tournaments.Api.Controllers.TournamentsController.html#Tournaments_Api_Controllers_TournamentsController__ctor_Tournaments_Api_Data_TournamentsApiContext_
  commentId: M:Tournaments.Api.Controllers.TournamentsController.#ctor(Tournaments.Api.Data.TournamentsApiContext)
  name.vb: New(TournamentsApiContext)
  fullName: Tournaments.Api.Controllers.TournamentsController.TournamentsController(Tournaments.Api.Data.TournamentsApiContext)
  fullName.vb: Tournaments.Api.Controllers.TournamentsController.New(Tournaments.Api.Data.TournamentsApiContext)
  nameWithType: TournamentsController.TournamentsController(TournamentsApiContext)
  nameWithType.vb: TournamentsController.New(TournamentsApiContext)
- uid: Tournaments.Api.Controllers.TournamentsController.#ctor*
  name: TournamentsController
  href: Tournaments.Api.Controllers.TournamentsController.html#Tournaments_Api_Controllers_TournamentsController__ctor_
  commentId: Overload:Tournaments.Api.Controllers.TournamentsController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Tournaments.Api.Controllers.TournamentsController.TournamentsController
  fullName.vb: Tournaments.Api.Controllers.TournamentsController.New
  nameWithType: TournamentsController.TournamentsController
  nameWithType.vb: TournamentsController.New
- uid: Tournaments.Api.Controllers.TournamentsController.DeleteTournament(System.String)
  name: DeleteTournament(string)
  href: Tournaments.Api.Controllers.TournamentsController.html#Tournaments_Api_Controllers_TournamentsController_DeleteTournament_System_String_
  commentId: M:Tournaments.Api.Controllers.TournamentsController.DeleteTournament(System.String)
  name.vb: DeleteTournament(String)
  fullName: Tournaments.Api.Controllers.TournamentsController.DeleteTournament(string)
  fullName.vb: Tournaments.Api.Controllers.TournamentsController.DeleteTournament(String)
  nameWithType: TournamentsController.DeleteTournament(string)
  nameWithType.vb: TournamentsController.DeleteTournament(String)
- uid: Tournaments.Api.Controllers.TournamentsController.DeleteTournament*
  name: DeleteTournament
  href: Tournaments.Api.Controllers.TournamentsController.html#Tournaments_Api_Controllers_TournamentsController_DeleteTournament_
  commentId: Overload:Tournaments.Api.Controllers.TournamentsController.DeleteTournament
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.TournamentsController.DeleteTournament
  nameWithType: TournamentsController.DeleteTournament
- uid: Tournaments.Api.Controllers.TournamentsController.GetTournament(System.String,System.String)
  name: GetTournament(string, string?)
  href: Tournaments.Api.Controllers.TournamentsController.html#Tournaments_Api_Controllers_TournamentsController_GetTournament_System_String_System_String_
  commentId: M:Tournaments.Api.Controllers.TournamentsController.GetTournament(System.String,System.String)
  name.vb: GetTournament(String, String)
  fullName: Tournaments.Api.Controllers.TournamentsController.GetTournament(string, string?)
  fullName.vb: Tournaments.Api.Controllers.TournamentsController.GetTournament(String, String)
  nameWithType: TournamentsController.GetTournament(string, string?)
  nameWithType.vb: TournamentsController.GetTournament(String, String)
- uid: Tournaments.Api.Controllers.TournamentsController.GetTournament*
  name: GetTournament
  href: Tournaments.Api.Controllers.TournamentsController.html#Tournaments_Api_Controllers_TournamentsController_GetTournament_
  commentId: Overload:Tournaments.Api.Controllers.TournamentsController.GetTournament
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.TournamentsController.GetTournament
  nameWithType: TournamentsController.GetTournament
- uid: Tournaments.Api.Controllers.TournamentsController.GetTournaments
  name: GetTournaments()
  href: Tournaments.Api.Controllers.TournamentsController.html#Tournaments_Api_Controllers_TournamentsController_GetTournaments
  commentId: M:Tournaments.Api.Controllers.TournamentsController.GetTournaments
  fullName: Tournaments.Api.Controllers.TournamentsController.GetTournaments()
  nameWithType: TournamentsController.GetTournaments()
- uid: Tournaments.Api.Controllers.TournamentsController.GetTournaments*
  name: GetTournaments
  href: Tournaments.Api.Controllers.TournamentsController.html#Tournaments_Api_Controllers_TournamentsController_GetTournaments_
  commentId: Overload:Tournaments.Api.Controllers.TournamentsController.GetTournaments
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.TournamentsController.GetTournaments
  nameWithType: TournamentsController.GetTournaments
- uid: Tournaments.Api.Controllers.TournamentsController.PostTournament(Tournaments.Shared.Models.Tournament)
  name: PostTournament(Tournament)
  href: Tournaments.Api.Controllers.TournamentsController.html#Tournaments_Api_Controllers_TournamentsController_PostTournament_Tournaments_Shared_Models_Tournament_
  commentId: M:Tournaments.Api.Controllers.TournamentsController.PostTournament(Tournaments.Shared.Models.Tournament)
  fullName: Tournaments.Api.Controllers.TournamentsController.PostTournament(Tournaments.Shared.Models.Tournament)
  nameWithType: TournamentsController.PostTournament(Tournament)
- uid: Tournaments.Api.Controllers.TournamentsController.PostTournament*
  name: PostTournament
  href: Tournaments.Api.Controllers.TournamentsController.html#Tournaments_Api_Controllers_TournamentsController_PostTournament_
  commentId: Overload:Tournaments.Api.Controllers.TournamentsController.PostTournament
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.TournamentsController.PostTournament
  nameWithType: TournamentsController.PostTournament
- uid: Tournaments.Api.Controllers.TournamentsController.PutTournament(System.String,Tournaments.Shared.Models.Tournament)
  name: PutTournament(string, Tournament)
  href: Tournaments.Api.Controllers.TournamentsController.html#Tournaments_Api_Controllers_TournamentsController_PutTournament_System_String_Tournaments_Shared_Models_Tournament_
  commentId: M:Tournaments.Api.Controllers.TournamentsController.PutTournament(System.String,Tournaments.Shared.Models.Tournament)
  name.vb: PutTournament(String, Tournament)
  fullName: Tournaments.Api.Controllers.TournamentsController.PutTournament(string, Tournaments.Shared.Models.Tournament)
  fullName.vb: Tournaments.Api.Controllers.TournamentsController.PutTournament(String, Tournaments.Shared.Models.Tournament)
  nameWithType: TournamentsController.PutTournament(string, Tournament)
  nameWithType.vb: TournamentsController.PutTournament(String, Tournament)
- uid: Tournaments.Api.Controllers.TournamentsController.PutTournament*
  name: PutTournament
  href: Tournaments.Api.Controllers.TournamentsController.html#Tournaments_Api_Controllers_TournamentsController_PutTournament_
  commentId: Overload:Tournaments.Api.Controllers.TournamentsController.PutTournament
  isSpec: "True"
  fullName: Tournaments.Api.Controllers.TournamentsController.PutTournament
  nameWithType: TournamentsController.PutTournament
- uid: Tournaments.Api.Data
  name: Tournaments.Api.Data
  href: Tournaments.Api.Data.html
  commentId: N:Tournaments.Api.Data
  fullName: Tournaments.Api.Data
  nameWithType: Tournaments.Api.Data
- uid: Tournaments.Api.Data.DesignTimeDbContextFactory
  name: DesignTimeDbContextFactory
  href: Tournaments.Api.Data.DesignTimeDbContextFactory.html
  commentId: T:Tournaments.Api.Data.DesignTimeDbContextFactory
  fullName: Tournaments.Api.Data.DesignTimeDbContextFactory
  nameWithType: DesignTimeDbContextFactory
- uid: Tournaments.Api.Data.DesignTimeDbContextFactory.CreateDbContext(System.String[])
  name: CreateDbContext(string[])
  href: Tournaments.Api.Data.DesignTimeDbContextFactory.html#Tournaments_Api_Data_DesignTimeDbContextFactory_CreateDbContext_System_String___
  commentId: M:Tournaments.Api.Data.DesignTimeDbContextFactory.CreateDbContext(System.String[])
  name.vb: CreateDbContext(String())
  fullName: Tournaments.Api.Data.DesignTimeDbContextFactory.CreateDbContext(string[])
  fullName.vb: Tournaments.Api.Data.DesignTimeDbContextFactory.CreateDbContext(String())
  nameWithType: DesignTimeDbContextFactory.CreateDbContext(string[])
  nameWithType.vb: DesignTimeDbContextFactory.CreateDbContext(String())
- uid: Tournaments.Api.Data.DesignTimeDbContextFactory.CreateDbContext*
  name: CreateDbContext
  href: Tournaments.Api.Data.DesignTimeDbContextFactory.html#Tournaments_Api_Data_DesignTimeDbContextFactory_CreateDbContext_
  commentId: Overload:Tournaments.Api.Data.DesignTimeDbContextFactory.CreateDbContext
  isSpec: "True"
  fullName: Tournaments.Api.Data.DesignTimeDbContextFactory.CreateDbContext
  nameWithType: DesignTimeDbContextFactory.CreateDbContext
- uid: Tournaments.Api.Data.TournamentsApiContext
  name: TournamentsApiContext
  href: Tournaments.Api.Data.TournamentsApiContext.html
  commentId: T:Tournaments.Api.Data.TournamentsApiContext
  fullName: Tournaments.Api.Data.TournamentsApiContext
  nameWithType: TournamentsApiContext
- uid: Tournaments.Api.Data.TournamentsApiContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Tournaments.Api.Data.TournamentsApiContext})
  name: TournamentsApiContext(DbContextOptions<TournamentsApiContext>)
  href: Tournaments.Api.Data.TournamentsApiContext.html#Tournaments_Api_Data_TournamentsApiContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_Tournaments_Api_Data_TournamentsApiContext__
  commentId: M:Tournaments.Api.Data.TournamentsApiContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Tournaments.Api.Data.TournamentsApiContext})
  name.vb: New(DbContextOptions(Of TournamentsApiContext))
  fullName: Tournaments.Api.Data.TournamentsApiContext.TournamentsApiContext(Microsoft.EntityFrameworkCore.DbContextOptions<Tournaments.Api.Data.TournamentsApiContext>)
  fullName.vb: Tournaments.Api.Data.TournamentsApiContext.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of Tournaments.Api.Data.TournamentsApiContext))
  nameWithType: TournamentsApiContext.TournamentsApiContext(DbContextOptions<TournamentsApiContext>)
  nameWithType.vb: TournamentsApiContext.New(DbContextOptions(Of TournamentsApiContext))
- uid: Tournaments.Api.Data.TournamentsApiContext.#ctor*
  name: TournamentsApiContext
  href: Tournaments.Api.Data.TournamentsApiContext.html#Tournaments_Api_Data_TournamentsApiContext__ctor_
  commentId: Overload:Tournaments.Api.Data.TournamentsApiContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Tournaments.Api.Data.TournamentsApiContext.TournamentsApiContext
  fullName.vb: Tournaments.Api.Data.TournamentsApiContext.New
  nameWithType: TournamentsApiContext.TournamentsApiContext
  nameWithType.vb: TournamentsApiContext.New
- uid: Tournaments.Api.Data.TournamentsApiContext.Player
  name: Player
  href: Tournaments.Api.Data.TournamentsApiContext.html#Tournaments_Api_Data_TournamentsApiContext_Player
  commentId: P:Tournaments.Api.Data.TournamentsApiContext.Player
  fullName: Tournaments.Api.Data.TournamentsApiContext.Player
  nameWithType: TournamentsApiContext.Player
- uid: Tournaments.Api.Data.TournamentsApiContext.Player*
  name: Player
  href: Tournaments.Api.Data.TournamentsApiContext.html#Tournaments_Api_Data_TournamentsApiContext_Player_
  commentId: Overload:Tournaments.Api.Data.TournamentsApiContext.Player
  isSpec: "True"
  fullName: Tournaments.Api.Data.TournamentsApiContext.Player
  nameWithType: TournamentsApiContext.Player
- uid: Tournaments.Api.Data.TournamentsApiContext.Registration
  name: Registration
  href: Tournaments.Api.Data.TournamentsApiContext.html#Tournaments_Api_Data_TournamentsApiContext_Registration
  commentId: P:Tournaments.Api.Data.TournamentsApiContext.Registration
  fullName: Tournaments.Api.Data.TournamentsApiContext.Registration
  nameWithType: TournamentsApiContext.Registration
- uid: Tournaments.Api.Data.TournamentsApiContext.Registration*
  name: Registration
  href: Tournaments.Api.Data.TournamentsApiContext.html#Tournaments_Api_Data_TournamentsApiContext_Registration_
  commentId: Overload:Tournaments.Api.Data.TournamentsApiContext.Registration
  isSpec: "True"
  fullName: Tournaments.Api.Data.TournamentsApiContext.Registration
  nameWithType: TournamentsApiContext.Registration
- uid: Tournaments.Api.Data.TournamentsApiContext.Tournament
  name: Tournament
  href: Tournaments.Api.Data.TournamentsApiContext.html#Tournaments_Api_Data_TournamentsApiContext_Tournament
  commentId: P:Tournaments.Api.Data.TournamentsApiContext.Tournament
  fullName: Tournaments.Api.Data.TournamentsApiContext.Tournament
  nameWithType: TournamentsApiContext.Tournament
- uid: Tournaments.Api.Data.TournamentsApiContext.Tournament*
  name: Tournament
  href: Tournaments.Api.Data.TournamentsApiContext.html#Tournaments_Api_Data_TournamentsApiContext_Tournament_
  commentId: Overload:Tournaments.Api.Data.TournamentsApiContext.Tournament
  isSpec: "True"
  fullName: Tournaments.Api.Data.TournamentsApiContext.Tournament
  nameWithType: TournamentsApiContext.Tournament
- uid: Tournaments.Api.Migrations
  name: Tournaments.Api.Migrations
  href: Tournaments.Api.Migrations.html
  commentId: N:Tournaments.Api.Migrations
  fullName: Tournaments.Api.Migrations
  nameWithType: Tournaments.Api.Migrations
- uid: Tournaments.Api.Migrations.InitialCreate
  name: InitialCreate
  href: Tournaments.Api.Migrations.InitialCreate.html
  commentId: T:Tournaments.Api.Migrations.InitialCreate
  fullName: Tournaments.Api.Migrations.InitialCreate
  nameWithType: InitialCreate
- uid: Tournaments.Api.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: Tournaments.Api.Migrations.InitialCreate.html#Tournaments_Api_Migrations_InitialCreate_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:Tournaments.Api.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: Tournaments.Api.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: InitialCreate.BuildTargetModel(ModelBuilder)
- uid: Tournaments.Api.Migrations.InitialCreate.BuildTargetModel*
  name: BuildTargetModel
  href: Tournaments.Api.Migrations.InitialCreate.html#Tournaments_Api_Migrations_InitialCreate_BuildTargetModel_
  commentId: Overload:Tournaments.Api.Migrations.InitialCreate.BuildTargetModel
  isSpec: "True"
  fullName: Tournaments.Api.Migrations.InitialCreate.BuildTargetModel
  nameWithType: InitialCreate.BuildTargetModel
- uid: Tournaments.Api.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: Tournaments.Api.Migrations.InitialCreate.html#Tournaments_Api_Migrations_InitialCreate_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:Tournaments.Api.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: Tournaments.Api.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: InitialCreate.Down(MigrationBuilder)
- uid: Tournaments.Api.Migrations.InitialCreate.Down*
  name: Down
  href: Tournaments.Api.Migrations.InitialCreate.html#Tournaments_Api_Migrations_InitialCreate_Down_
  commentId: Overload:Tournaments.Api.Migrations.InitialCreate.Down
  isSpec: "True"
  fullName: Tournaments.Api.Migrations.InitialCreate.Down
  nameWithType: InitialCreate.Down
- uid: Tournaments.Api.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: Tournaments.Api.Migrations.InitialCreate.html#Tournaments_Api_Migrations_InitialCreate_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:Tournaments.Api.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: Tournaments.Api.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: InitialCreate.Up(MigrationBuilder)
- uid: Tournaments.Api.Migrations.InitialCreate.Up*
  name: Up
  href: Tournaments.Api.Migrations.InitialCreate.html#Tournaments_Api_Migrations_InitialCreate_Up_
  commentId: Overload:Tournaments.Api.Migrations.InitialCreate.Up
  isSpec: "True"
  fullName: Tournaments.Api.Migrations.InitialCreate.Up
  nameWithType: InitialCreate.Up
- uid: Tournaments.Api.Program
  name: Program
  href: Tournaments.Api.Program.html
  commentId: T:Tournaments.Api.Program
  fullName: Tournaments.Api.Program
  nameWithType: Program
- uid: Tournaments.Api.Program.Main(System.String[])
  name: Main(string[])
  href: Tournaments.Api.Program.html#Tournaments_Api_Program_Main_System_String___
  commentId: M:Tournaments.Api.Program.Main(System.String[])
  name.vb: Main(String())
  fullName: Tournaments.Api.Program.Main(string[])
  fullName.vb: Tournaments.Api.Program.Main(String())
  nameWithType: Program.Main(string[])
  nameWithType.vb: Program.Main(String())
- uid: Tournaments.Api.Program.Main*
  name: Main
  href: Tournaments.Api.Program.html#Tournaments_Api_Program_Main_
  commentId: Overload:Tournaments.Api.Program.Main
  isSpec: "True"
  fullName: Tournaments.Api.Program.Main
  nameWithType: Program.Main
- uid: Tournaments.Api.Tests
  name: Tournaments.Api.Tests
  href: Tournaments.Api.Tests.html
  commentId: N:Tournaments.Api.Tests
  fullName: Tournaments.Api.Tests
  nameWithType: Tournaments.Api.Tests
- uid: Tournaments.Api.Tests.DatabaseTests
  name: DatabaseTests
  href: Tournaments.Api.Tests.DatabaseTests.html
  commentId: T:Tournaments.Api.Tests.DatabaseTests
  fullName: Tournaments.Api.Tests.DatabaseTests
  nameWithType: DatabaseTests
- uid: Tournaments.Api.Tests.DatabaseTests.CheckInitialDatabaseStatus_ShouldBeEmpty
  name: CheckInitialDatabaseStatus_ShouldBeEmpty()
  href: Tournaments.Api.Tests.DatabaseTests.html#Tournaments_Api_Tests_DatabaseTests_CheckInitialDatabaseStatus_ShouldBeEmpty
  commentId: M:Tournaments.Api.Tests.DatabaseTests.CheckInitialDatabaseStatus_ShouldBeEmpty
  fullName: Tournaments.Api.Tests.DatabaseTests.CheckInitialDatabaseStatus_ShouldBeEmpty()
  nameWithType: DatabaseTests.CheckInitialDatabaseStatus_ShouldBeEmpty()
- uid: Tournaments.Api.Tests.DatabaseTests.CheckInitialDatabaseStatus_ShouldBeEmpty*
  name: CheckInitialDatabaseStatus_ShouldBeEmpty
  href: Tournaments.Api.Tests.DatabaseTests.html#Tournaments_Api_Tests_DatabaseTests_CheckInitialDatabaseStatus_ShouldBeEmpty_
  commentId: Overload:Tournaments.Api.Tests.DatabaseTests.CheckInitialDatabaseStatus_ShouldBeEmpty
  isSpec: "True"
  fullName: Tournaments.Api.Tests.DatabaseTests.CheckInitialDatabaseStatus_ShouldBeEmpty
  nameWithType: DatabaseTests.CheckInitialDatabaseStatus_ShouldBeEmpty
- uid: Tournaments.Api.Tests.DatabaseTests.Init(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  name: Init(TestContext)
  href: Tournaments.Api.Tests.DatabaseTests.html#Tournaments_Api_Tests_DatabaseTests_Init_Microsoft_VisualStudio_TestTools_UnitTesting_TestContext_
  commentId: M:Tournaments.Api.Tests.DatabaseTests.Init(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  fullName: Tournaments.Api.Tests.DatabaseTests.Init(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  nameWithType: DatabaseTests.Init(TestContext)
- uid: Tournaments.Api.Tests.DatabaseTests.Init*
  name: Init
  href: Tournaments.Api.Tests.DatabaseTests.html#Tournaments_Api_Tests_DatabaseTests_Init_
  commentId: Overload:Tournaments.Api.Tests.DatabaseTests.Init
  isSpec: "True"
  fullName: Tournaments.Api.Tests.DatabaseTests.Init
  nameWithType: DatabaseTests.Init
- uid: Tournaments.Api.Tests.DatabaseTests.ResetDatabase_ShouldClearAllData
  name: ResetDatabase_ShouldClearAllData()
  href: Tournaments.Api.Tests.DatabaseTests.html#Tournaments_Api_Tests_DatabaseTests_ResetDatabase_ShouldClearAllData
  commentId: M:Tournaments.Api.Tests.DatabaseTests.ResetDatabase_ShouldClearAllData
  fullName: Tournaments.Api.Tests.DatabaseTests.ResetDatabase_ShouldClearAllData()
  nameWithType: DatabaseTests.ResetDatabase_ShouldClearAllData()
- uid: Tournaments.Api.Tests.DatabaseTests.ResetDatabase_ShouldClearAllData*
  name: ResetDatabase_ShouldClearAllData
  href: Tournaments.Api.Tests.DatabaseTests.html#Tournaments_Api_Tests_DatabaseTests_ResetDatabase_ShouldClearAllData_
  commentId: Overload:Tournaments.Api.Tests.DatabaseTests.ResetDatabase_ShouldClearAllData
  isSpec: "True"
  fullName: Tournaments.Api.Tests.DatabaseTests.ResetDatabase_ShouldClearAllData
  nameWithType: DatabaseTests.ResetDatabase_ShouldClearAllData
- uid: Tournaments.Api.Tests.DatabaseTests.TestSetup
  name: TestSetup()
  href: Tournaments.Api.Tests.DatabaseTests.html#Tournaments_Api_Tests_DatabaseTests_TestSetup
  commentId: M:Tournaments.Api.Tests.DatabaseTests.TestSetup
  fullName: Tournaments.Api.Tests.DatabaseTests.TestSetup()
  nameWithType: DatabaseTests.TestSetup()
- uid: Tournaments.Api.Tests.DatabaseTests.TestSetup*
  name: TestSetup
  href: Tournaments.Api.Tests.DatabaseTests.html#Tournaments_Api_Tests_DatabaseTests_TestSetup_
  commentId: Overload:Tournaments.Api.Tests.DatabaseTests.TestSetup
  isSpec: "True"
  fullName: Tournaments.Api.Tests.DatabaseTests.TestSetup
  nameWithType: DatabaseTests.TestSetup
- uid: Tournaments.Api.Tests.DatabaseTests.VerifyDatabaseEmptyAfterReset
  name: VerifyDatabaseEmptyAfterReset()
  href: Tournaments.Api.Tests.DatabaseTests.html#Tournaments_Api_Tests_DatabaseTests_VerifyDatabaseEmptyAfterReset
  commentId: M:Tournaments.Api.Tests.DatabaseTests.VerifyDatabaseEmptyAfterReset
  fullName: Tournaments.Api.Tests.DatabaseTests.VerifyDatabaseEmptyAfterReset()
  nameWithType: DatabaseTests.VerifyDatabaseEmptyAfterReset()
- uid: Tournaments.Api.Tests.DatabaseTests.VerifyDatabaseEmptyAfterReset*
  name: VerifyDatabaseEmptyAfterReset
  href: Tournaments.Api.Tests.DatabaseTests.html#Tournaments_Api_Tests_DatabaseTests_VerifyDatabaseEmptyAfterReset_
  commentId: Overload:Tournaments.Api.Tests.DatabaseTests.VerifyDatabaseEmptyAfterReset
  isSpec: "True"
  fullName: Tournaments.Api.Tests.DatabaseTests.VerifyDatabaseEmptyAfterReset
  nameWithType: DatabaseTests.VerifyDatabaseEmptyAfterReset
- uid: Tournaments.Api.Tests.HomeControllerTests
  name: HomeControllerTests
  href: Tournaments.Api.Tests.HomeControllerTests.html
  commentId: T:Tournaments.Api.Tests.HomeControllerTests
  fullName: Tournaments.Api.Tests.HomeControllerTests
  nameWithType: HomeControllerTests
- uid: Tournaments.Api.Tests.HomeControllerTests.GetApiRoot_IsHateoasCompliant
  name: GetApiRoot_IsHateoasCompliant()
  href: Tournaments.Api.Tests.HomeControllerTests.html#Tournaments_Api_Tests_HomeControllerTests_GetApiRoot_IsHateoasCompliant
  commentId: M:Tournaments.Api.Tests.HomeControllerTests.GetApiRoot_IsHateoasCompliant
  fullName: Tournaments.Api.Tests.HomeControllerTests.GetApiRoot_IsHateoasCompliant()
  nameWithType: HomeControllerTests.GetApiRoot_IsHateoasCompliant()
- uid: Tournaments.Api.Tests.HomeControllerTests.GetApiRoot_IsHateoasCompliant*
  name: GetApiRoot_IsHateoasCompliant
  href: Tournaments.Api.Tests.HomeControllerTests.html#Tournaments_Api_Tests_HomeControllerTests_GetApiRoot_IsHateoasCompliant_
  commentId: Overload:Tournaments.Api.Tests.HomeControllerTests.GetApiRoot_IsHateoasCompliant
  isSpec: "True"
  fullName: Tournaments.Api.Tests.HomeControllerTests.GetApiRoot_IsHateoasCompliant
  nameWithType: HomeControllerTests.GetApiRoot_IsHateoasCompliant
- uid: Tournaments.Api.Tests.HomeControllerTests.GetApiRoot_LinksHaveCorrectFormat
  name: GetApiRoot_LinksHaveCorrectFormat()
  href: Tournaments.Api.Tests.HomeControllerTests.html#Tournaments_Api_Tests_HomeControllerTests_GetApiRoot_LinksHaveCorrectFormat
  commentId: M:Tournaments.Api.Tests.HomeControllerTests.GetApiRoot_LinksHaveCorrectFormat
  fullName: Tournaments.Api.Tests.HomeControllerTests.GetApiRoot_LinksHaveCorrectFormat()
  nameWithType: HomeControllerTests.GetApiRoot_LinksHaveCorrectFormat()
- uid: Tournaments.Api.Tests.HomeControllerTests.GetApiRoot_LinksHaveCorrectFormat*
  name: GetApiRoot_LinksHaveCorrectFormat
  href: Tournaments.Api.Tests.HomeControllerTests.html#Tournaments_Api_Tests_HomeControllerTests_GetApiRoot_LinksHaveCorrectFormat_
  commentId: Overload:Tournaments.Api.Tests.HomeControllerTests.GetApiRoot_LinksHaveCorrectFormat
  isSpec: "True"
  fullName: Tournaments.Api.Tests.HomeControllerTests.GetApiRoot_LinksHaveCorrectFormat
  nameWithType: HomeControllerTests.GetApiRoot_LinksHaveCorrectFormat
- uid: Tournaments.Api.Tests.HomeControllerTests.GetApiRoot_ShouldReturnSuccessWithLinks
  name: GetApiRoot_ShouldReturnSuccessWithLinks()
  href: Tournaments.Api.Tests.HomeControllerTests.html#Tournaments_Api_Tests_HomeControllerTests_GetApiRoot_ShouldReturnSuccessWithLinks
  commentId: M:Tournaments.Api.Tests.HomeControllerTests.GetApiRoot_ShouldReturnSuccessWithLinks
  fullName: Tournaments.Api.Tests.HomeControllerTests.GetApiRoot_ShouldReturnSuccessWithLinks()
  nameWithType: HomeControllerTests.GetApiRoot_ShouldReturnSuccessWithLinks()
- uid: Tournaments.Api.Tests.HomeControllerTests.GetApiRoot_ShouldReturnSuccessWithLinks*
  name: GetApiRoot_ShouldReturnSuccessWithLinks
  href: Tournaments.Api.Tests.HomeControllerTests.html#Tournaments_Api_Tests_HomeControllerTests_GetApiRoot_ShouldReturnSuccessWithLinks_
  commentId: Overload:Tournaments.Api.Tests.HomeControllerTests.GetApiRoot_ShouldReturnSuccessWithLinks
  isSpec: "True"
  fullName: Tournaments.Api.Tests.HomeControllerTests.GetApiRoot_ShouldReturnSuccessWithLinks
  nameWithType: HomeControllerTests.GetApiRoot_ShouldReturnSuccessWithLinks
- uid: Tournaments.Api.Tests.HomeControllerTests.GetRoot_ShouldRedirectToApiRoot
  name: GetRoot_ShouldRedirectToApiRoot()
  href: Tournaments.Api.Tests.HomeControllerTests.html#Tournaments_Api_Tests_HomeControllerTests_GetRoot_ShouldRedirectToApiRoot
  commentId: M:Tournaments.Api.Tests.HomeControllerTests.GetRoot_ShouldRedirectToApiRoot
  fullName: Tournaments.Api.Tests.HomeControllerTests.GetRoot_ShouldRedirectToApiRoot()
  nameWithType: HomeControllerTests.GetRoot_ShouldRedirectToApiRoot()
- uid: Tournaments.Api.Tests.HomeControllerTests.GetRoot_ShouldRedirectToApiRoot*
  name: GetRoot_ShouldRedirectToApiRoot
  href: Tournaments.Api.Tests.HomeControllerTests.html#Tournaments_Api_Tests_HomeControllerTests_GetRoot_ShouldRedirectToApiRoot_
  commentId: Overload:Tournaments.Api.Tests.HomeControllerTests.GetRoot_ShouldRedirectToApiRoot
  isSpec: "True"
  fullName: Tournaments.Api.Tests.HomeControllerTests.GetRoot_ShouldRedirectToApiRoot
  nameWithType: HomeControllerTests.GetRoot_ShouldRedirectToApiRoot
- uid: Tournaments.Api.Tests.HomeControllerTests.Init(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  name: Init(TestContext)
  href: Tournaments.Api.Tests.HomeControllerTests.html#Tournaments_Api_Tests_HomeControllerTests_Init_Microsoft_VisualStudio_TestTools_UnitTesting_TestContext_
  commentId: M:Tournaments.Api.Tests.HomeControllerTests.Init(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  fullName: Tournaments.Api.Tests.HomeControllerTests.Init(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  nameWithType: HomeControllerTests.Init(TestContext)
- uid: Tournaments.Api.Tests.HomeControllerTests.Init*
  name: Init
  href: Tournaments.Api.Tests.HomeControllerTests.html#Tournaments_Api_Tests_HomeControllerTests_Init_
  commentId: Overload:Tournaments.Api.Tests.HomeControllerTests.Init
  isSpec: "True"
  fullName: Tournaments.Api.Tests.HomeControllerTests.Init
  nameWithType: HomeControllerTests.Init
- uid: Tournaments.Api.Tests.PlayerTests
  name: PlayerTests
  href: Tournaments.Api.Tests.PlayerTests.html
  commentId: T:Tournaments.Api.Tests.PlayerTests
  fullName: Tournaments.Api.Tests.PlayerTests
  nameWithType: PlayerTests
- uid: Tournaments.Api.Tests.PlayerTests.CreateDuplicatePlayer_ShouldReturn409Conflict
  name: CreateDuplicatePlayer_ShouldReturn409Conflict()
  href: Tournaments.Api.Tests.PlayerTests.html#Tournaments_Api_Tests_PlayerTests_CreateDuplicatePlayer_ShouldReturn409Conflict
  commentId: M:Tournaments.Api.Tests.PlayerTests.CreateDuplicatePlayer_ShouldReturn409Conflict
  fullName: Tournaments.Api.Tests.PlayerTests.CreateDuplicatePlayer_ShouldReturn409Conflict()
  nameWithType: PlayerTests.CreateDuplicatePlayer_ShouldReturn409Conflict()
- uid: Tournaments.Api.Tests.PlayerTests.CreateDuplicatePlayer_ShouldReturn409Conflict*
  name: CreateDuplicatePlayer_ShouldReturn409Conflict
  href: Tournaments.Api.Tests.PlayerTests.html#Tournaments_Api_Tests_PlayerTests_CreateDuplicatePlayer_ShouldReturn409Conflict_
  commentId: Overload:Tournaments.Api.Tests.PlayerTests.CreateDuplicatePlayer_ShouldReturn409Conflict
  isSpec: "True"
  fullName: Tournaments.Api.Tests.PlayerTests.CreateDuplicatePlayer_ShouldReturn409Conflict
  nameWithType: PlayerTests.CreateDuplicatePlayer_ShouldReturn409Conflict
- uid: Tournaments.Api.Tests.PlayerTests.CreatePlayer_ShouldReturn201
  name: CreatePlayer_ShouldReturn201()
  href: Tournaments.Api.Tests.PlayerTests.html#Tournaments_Api_Tests_PlayerTests_CreatePlayer_ShouldReturn201
  commentId: M:Tournaments.Api.Tests.PlayerTests.CreatePlayer_ShouldReturn201
  fullName: Tournaments.Api.Tests.PlayerTests.CreatePlayer_ShouldReturn201()
  nameWithType: PlayerTests.CreatePlayer_ShouldReturn201()
- uid: Tournaments.Api.Tests.PlayerTests.CreatePlayer_ShouldReturn201*
  name: CreatePlayer_ShouldReturn201
  href: Tournaments.Api.Tests.PlayerTests.html#Tournaments_Api_Tests_PlayerTests_CreatePlayer_ShouldReturn201_
  commentId: Overload:Tournaments.Api.Tests.PlayerTests.CreatePlayer_ShouldReturn201
  isSpec: "True"
  fullName: Tournaments.Api.Tests.PlayerTests.CreatePlayer_ShouldReturn201
  nameWithType: PlayerTests.CreatePlayer_ShouldReturn201
- uid: Tournaments.Api.Tests.PlayerTests.DeletePlayer_ShouldRemovePlayer
  name: DeletePlayer_ShouldRemovePlayer()
  href: Tournaments.Api.Tests.PlayerTests.html#Tournaments_Api_Tests_PlayerTests_DeletePlayer_ShouldRemovePlayer
  commentId: M:Tournaments.Api.Tests.PlayerTests.DeletePlayer_ShouldRemovePlayer
  fullName: Tournaments.Api.Tests.PlayerTests.DeletePlayer_ShouldRemovePlayer()
  nameWithType: PlayerTests.DeletePlayer_ShouldRemovePlayer()
- uid: Tournaments.Api.Tests.PlayerTests.DeletePlayer_ShouldRemovePlayer*
  name: DeletePlayer_ShouldRemovePlayer
  href: Tournaments.Api.Tests.PlayerTests.html#Tournaments_Api_Tests_PlayerTests_DeletePlayer_ShouldRemovePlayer_
  commentId: Overload:Tournaments.Api.Tests.PlayerTests.DeletePlayer_ShouldRemovePlayer
  isSpec: "True"
  fullName: Tournaments.Api.Tests.PlayerTests.DeletePlayer_ShouldRemovePlayer
  nameWithType: PlayerTests.DeletePlayer_ShouldRemovePlayer
- uid: Tournaments.Api.Tests.PlayerTests.GetPlayer_ShouldReturnPlayer
  name: GetPlayer_ShouldReturnPlayer()
  href: Tournaments.Api.Tests.PlayerTests.html#Tournaments_Api_Tests_PlayerTests_GetPlayer_ShouldReturnPlayer
  commentId: M:Tournaments.Api.Tests.PlayerTests.GetPlayer_ShouldReturnPlayer
  fullName: Tournaments.Api.Tests.PlayerTests.GetPlayer_ShouldReturnPlayer()
  nameWithType: PlayerTests.GetPlayer_ShouldReturnPlayer()
- uid: Tournaments.Api.Tests.PlayerTests.GetPlayer_ShouldReturnPlayer*
  name: GetPlayer_ShouldReturnPlayer
  href: Tournaments.Api.Tests.PlayerTests.html#Tournaments_Api_Tests_PlayerTests_GetPlayer_ShouldReturnPlayer_
  commentId: Overload:Tournaments.Api.Tests.PlayerTests.GetPlayer_ShouldReturnPlayer
  isSpec: "True"
  fullName: Tournaments.Api.Tests.PlayerTests.GetPlayer_ShouldReturnPlayer
  nameWithType: PlayerTests.GetPlayer_ShouldReturnPlayer
- uid: Tournaments.Api.Tests.PlayerTests.Init(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  name: Init(TestContext)
  href: Tournaments.Api.Tests.PlayerTests.html#Tournaments_Api_Tests_PlayerTests_Init_Microsoft_VisualStudio_TestTools_UnitTesting_TestContext_
  commentId: M:Tournaments.Api.Tests.PlayerTests.Init(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  fullName: Tournaments.Api.Tests.PlayerTests.Init(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  nameWithType: PlayerTests.Init(TestContext)
- uid: Tournaments.Api.Tests.PlayerTests.Init*
  name: Init
  href: Tournaments.Api.Tests.PlayerTests.html#Tournaments_Api_Tests_PlayerTests_Init_
  commentId: Overload:Tournaments.Api.Tests.PlayerTests.Init
  isSpec: "True"
  fullName: Tournaments.Api.Tests.PlayerTests.Init
  nameWithType: PlayerTests.Init
- uid: Tournaments.Api.Tests.PlayerTests.SetUp
  name: SetUp()
  href: Tournaments.Api.Tests.PlayerTests.html#Tournaments_Api_Tests_PlayerTests_SetUp
  commentId: M:Tournaments.Api.Tests.PlayerTests.SetUp
  fullName: Tournaments.Api.Tests.PlayerTests.SetUp()
  nameWithType: PlayerTests.SetUp()
- uid: Tournaments.Api.Tests.PlayerTests.SetUp*
  name: SetUp
  href: Tournaments.Api.Tests.PlayerTests.html#Tournaments_Api_Tests_PlayerTests_SetUp_
  commentId: Overload:Tournaments.Api.Tests.PlayerTests.SetUp
  isSpec: "True"
  fullName: Tournaments.Api.Tests.PlayerTests.SetUp
  nameWithType: PlayerTests.SetUp
- uid: Tournaments.Api.Tests.PlayerTests.UpdatePlayer_ShouldModifyPlayer
  name: UpdatePlayer_ShouldModifyPlayer()
  href: Tournaments.Api.Tests.PlayerTests.html#Tournaments_Api_Tests_PlayerTests_UpdatePlayer_ShouldModifyPlayer
  commentId: M:Tournaments.Api.Tests.PlayerTests.UpdatePlayer_ShouldModifyPlayer
  fullName: Tournaments.Api.Tests.PlayerTests.UpdatePlayer_ShouldModifyPlayer()
  nameWithType: PlayerTests.UpdatePlayer_ShouldModifyPlayer()
- uid: Tournaments.Api.Tests.PlayerTests.UpdatePlayer_ShouldModifyPlayer*
  name: UpdatePlayer_ShouldModifyPlayer
  href: Tournaments.Api.Tests.PlayerTests.html#Tournaments_Api_Tests_PlayerTests_UpdatePlayer_ShouldModifyPlayer_
  commentId: Overload:Tournaments.Api.Tests.PlayerTests.UpdatePlayer_ShouldModifyPlayer
  isSpec: "True"
  fullName: Tournaments.Api.Tests.PlayerTests.UpdatePlayer_ShouldModifyPlayer
  nameWithType: PlayerTests.UpdatePlayer_ShouldModifyPlayer
- uid: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests
  name: RegistrationPlayersInTournamentTests
  href: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.html
  commentId: T:Tournaments.Api.Tests.RegistrationPlayersInTournamentTests
  fullName: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests
  nameWithType: RegistrationPlayersInTournamentTests
- uid: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_ShouldHaveCorrectLinks
  name: GetPlayersInTournament_ShouldHaveCorrectLinks()
  href: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.html#Tournaments_Api_Tests_RegistrationPlayersInTournamentTests_GetPlayersInTournament_ShouldHaveCorrectLinks
  commentId: M:Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_ShouldHaveCorrectLinks
  fullName: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_ShouldHaveCorrectLinks()
  nameWithType: RegistrationPlayersInTournamentTests.GetPlayersInTournament_ShouldHaveCorrectLinks()
- uid: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_ShouldHaveCorrectLinks*
  name: GetPlayersInTournament_ShouldHaveCorrectLinks
  href: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.html#Tournaments_Api_Tests_RegistrationPlayersInTournamentTests_GetPlayersInTournament_ShouldHaveCorrectLinks_
  commentId: Overload:Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_ShouldHaveCorrectLinks
  isSpec: "True"
  fullName: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_ShouldHaveCorrectLinks
  nameWithType: RegistrationPlayersInTournamentTests.GetPlayersInTournament_ShouldHaveCorrectLinks
- uid: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_ShouldReturnAllPlayers
  name: GetPlayersInTournament_ShouldReturnAllPlayers()
  href: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.html#Tournaments_Api_Tests_RegistrationPlayersInTournamentTests_GetPlayersInTournament_ShouldReturnAllPlayers
  commentId: M:Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_ShouldReturnAllPlayers
  fullName: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_ShouldReturnAllPlayers()
  nameWithType: RegistrationPlayersInTournamentTests.GetPlayersInTournament_ShouldReturnAllPlayers()
- uid: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_ShouldReturnAllPlayers*
  name: GetPlayersInTournament_ShouldReturnAllPlayers
  href: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.html#Tournaments_Api_Tests_RegistrationPlayersInTournamentTests_GetPlayersInTournament_ShouldReturnAllPlayers_
  commentId: Overload:Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_ShouldReturnAllPlayers
  isSpec: "True"
  fullName: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_ShouldReturnAllPlayers
  nameWithType: RegistrationPlayersInTournamentTests.GetPlayersInTournament_ShouldReturnAllPlayers
- uid: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithEmptyTournament_ShouldReturnEmptyCollection
  name: GetPlayersInTournament_WithEmptyTournament_ShouldReturnEmptyCollection()
  href: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.html#Tournaments_Api_Tests_RegistrationPlayersInTournamentTests_GetPlayersInTournament_WithEmptyTournament_ShouldReturnEmptyCollection
  commentId: M:Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithEmptyTournament_ShouldReturnEmptyCollection
  fullName: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithEmptyTournament_ShouldReturnEmptyCollection()
  nameWithType: RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithEmptyTournament_ShouldReturnEmptyCollection()
- uid: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithEmptyTournament_ShouldReturnEmptyCollection*
  name: GetPlayersInTournament_WithEmptyTournament_ShouldReturnEmptyCollection
  href: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.html#Tournaments_Api_Tests_RegistrationPlayersInTournamentTests_GetPlayersInTournament_WithEmptyTournament_ShouldReturnEmptyCollection_
  commentId: Overload:Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithEmptyTournament_ShouldReturnEmptyCollection
  isSpec: "True"
  fullName: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithEmptyTournament_ShouldReturnEmptyCollection
  nameWithType: RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithEmptyTournament_ShouldReturnEmptyCollection
- uid: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithNonexistentTournament_ShouldReturn404
  name: GetPlayersInTournament_WithNonexistentTournament_ShouldReturn404()
  href: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.html#Tournaments_Api_Tests_RegistrationPlayersInTournamentTests_GetPlayersInTournament_WithNonexistentTournament_ShouldReturn404
  commentId: M:Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithNonexistentTournament_ShouldReturn404
  fullName: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithNonexistentTournament_ShouldReturn404()
  nameWithType: RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithNonexistentTournament_ShouldReturn404()
- uid: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithNonexistentTournament_ShouldReturn404*
  name: GetPlayersInTournament_WithNonexistentTournament_ShouldReturn404
  href: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.html#Tournaments_Api_Tests_RegistrationPlayersInTournamentTests_GetPlayersInTournament_WithNonexistentTournament_ShouldReturn404_
  commentId: Overload:Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithNonexistentTournament_ShouldReturn404
  isSpec: "True"
  fullName: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithNonexistentTournament_ShouldReturn404
  nameWithType: RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithNonexistentTournament_ShouldReturn404
- uid: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithParentChildTournaments_ShouldReturnCorrectPlayers
  name: GetPlayersInTournament_WithParentChildTournaments_ShouldReturnCorrectPlayers()
  href: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.html#Tournaments_Api_Tests_RegistrationPlayersInTournamentTests_GetPlayersInTournament_WithParentChildTournaments_ShouldReturnCorrectPlayers
  commentId: M:Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithParentChildTournaments_ShouldReturnCorrectPlayers
  fullName: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithParentChildTournaments_ShouldReturnCorrectPlayers()
  nameWithType: RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithParentChildTournaments_ShouldReturnCorrectPlayers()
- uid: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithParentChildTournaments_ShouldReturnCorrectPlayers*
  name: GetPlayersInTournament_WithParentChildTournaments_ShouldReturnCorrectPlayers
  href: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.html#Tournaments_Api_Tests_RegistrationPlayersInTournamentTests_GetPlayersInTournament_WithParentChildTournaments_ShouldReturnCorrectPlayers_
  commentId: Overload:Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithParentChildTournaments_ShouldReturnCorrectPlayers
  isSpec: "True"
  fullName: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithParentChildTournaments_ShouldReturnCorrectPlayers
  nameWithType: RegistrationPlayersInTournamentTests.GetPlayersInTournament_WithParentChildTournaments_ShouldReturnCorrectPlayers
- uid: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.Init(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  name: Init(TestContext)
  href: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.html#Tournaments_Api_Tests_RegistrationPlayersInTournamentTests_Init_Microsoft_VisualStudio_TestTools_UnitTesting_TestContext_
  commentId: M:Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.Init(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  fullName: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.Init(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  nameWithType: RegistrationPlayersInTournamentTests.Init(TestContext)
- uid: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.Init*
  name: Init
  href: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.html#Tournaments_Api_Tests_RegistrationPlayersInTournamentTests_Init_
  commentId: Overload:Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.Init
  isSpec: "True"
  fullName: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.Init
  nameWithType: RegistrationPlayersInTournamentTests.Init
- uid: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.SetUp
  name: SetUp()
  href: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.html#Tournaments_Api_Tests_RegistrationPlayersInTournamentTests_SetUp
  commentId: M:Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.SetUp
  fullName: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.SetUp()
  nameWithType: RegistrationPlayersInTournamentTests.SetUp()
- uid: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.SetUp*
  name: SetUp
  href: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.html#Tournaments_Api_Tests_RegistrationPlayersInTournamentTests_SetUp_
  commentId: Overload:Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.SetUp
  isSpec: "True"
  fullName: Tournaments.Api.Tests.RegistrationPlayersInTournamentTests.SetUp
  nameWithType: RegistrationPlayersInTournamentTests.SetUp
- uid: Tournaments.Api.Tests.RegistrationTests
  name: RegistrationTests
  href: Tournaments.Api.Tests.RegistrationTests.html
  commentId: T:Tournaments.Api.Tests.RegistrationTests
  fullName: Tournaments.Api.Tests.RegistrationTests
  nameWithType: RegistrationTests
- uid: Tournaments.Api.Tests.RegistrationTests.GetRegistrationDetails_ShouldReturnRegistration
  name: GetRegistrationDetails_ShouldReturnRegistration()
  href: Tournaments.Api.Tests.RegistrationTests.html#Tournaments_Api_Tests_RegistrationTests_GetRegistrationDetails_ShouldReturnRegistration
  commentId: M:Tournaments.Api.Tests.RegistrationTests.GetRegistrationDetails_ShouldReturnRegistration
  fullName: Tournaments.Api.Tests.RegistrationTests.GetRegistrationDetails_ShouldReturnRegistration()
  nameWithType: RegistrationTests.GetRegistrationDetails_ShouldReturnRegistration()
- uid: Tournaments.Api.Tests.RegistrationTests.GetRegistrationDetails_ShouldReturnRegistration*
  name: GetRegistrationDetails_ShouldReturnRegistration
  href: Tournaments.Api.Tests.RegistrationTests.html#Tournaments_Api_Tests_RegistrationTests_GetRegistrationDetails_ShouldReturnRegistration_
  commentId: Overload:Tournaments.Api.Tests.RegistrationTests.GetRegistrationDetails_ShouldReturnRegistration
  isSpec: "True"
  fullName: Tournaments.Api.Tests.RegistrationTests.GetRegistrationDetails_ShouldReturnRegistration
  nameWithType: RegistrationTests.GetRegistrationDetails_ShouldReturnRegistration
- uid: Tournaments.Api.Tests.RegistrationTests.GetRegistrationForNonExistentPlayer_ShouldReturn404NotFound
  name: GetRegistrationForNonExistentPlayer_ShouldReturn404NotFound()
  href: Tournaments.Api.Tests.RegistrationTests.html#Tournaments_Api_Tests_RegistrationTests_GetRegistrationForNonExistentPlayer_ShouldReturn404NotFound
  commentId: M:Tournaments.Api.Tests.RegistrationTests.GetRegistrationForNonExistentPlayer_ShouldReturn404NotFound
  fullName: Tournaments.Api.Tests.RegistrationTests.GetRegistrationForNonExistentPlayer_ShouldReturn404NotFound()
  nameWithType: RegistrationTests.GetRegistrationForNonExistentPlayer_ShouldReturn404NotFound()
- uid: Tournaments.Api.Tests.RegistrationTests.GetRegistrationForNonExistentPlayer_ShouldReturn404NotFound*
  name: GetRegistrationForNonExistentPlayer_ShouldReturn404NotFound
  href: Tournaments.Api.Tests.RegistrationTests.html#Tournaments_Api_Tests_RegistrationTests_GetRegistrationForNonExistentPlayer_ShouldReturn404NotFound_
  commentId: Overload:Tournaments.Api.Tests.RegistrationTests.GetRegistrationForNonExistentPlayer_ShouldReturn404NotFound
  isSpec: "True"
  fullName: Tournaments.Api.Tests.RegistrationTests.GetRegistrationForNonExistentPlayer_ShouldReturn404NotFound
  nameWithType: RegistrationTests.GetRegistrationForNonExistentPlayer_ShouldReturn404NotFound
- uid: Tournaments.Api.Tests.RegistrationTests.GetRegistrationForNonExistentTournament_ShouldReturn404NotFound
  name: GetRegistrationForNonExistentTournament_ShouldReturn404NotFound()
  href: Tournaments.Api.Tests.RegistrationTests.html#Tournaments_Api_Tests_RegistrationTests_GetRegistrationForNonExistentTournament_ShouldReturn404NotFound
  commentId: M:Tournaments.Api.Tests.RegistrationTests.GetRegistrationForNonExistentTournament_ShouldReturn404NotFound
  fullName: Tournaments.Api.Tests.RegistrationTests.GetRegistrationForNonExistentTournament_ShouldReturn404NotFound()
  nameWithType: RegistrationTests.GetRegistrationForNonExistentTournament_ShouldReturn404NotFound()
- uid: Tournaments.Api.Tests.RegistrationTests.GetRegistrationForNonExistentTournament_ShouldReturn404NotFound*
  name: GetRegistrationForNonExistentTournament_ShouldReturn404NotFound
  href: Tournaments.Api.Tests.RegistrationTests.html#Tournaments_Api_Tests_RegistrationTests_GetRegistrationForNonExistentTournament_ShouldReturn404NotFound_
  commentId: Overload:Tournaments.Api.Tests.RegistrationTests.GetRegistrationForNonExistentTournament_ShouldReturn404NotFound
  isSpec: "True"
  fullName: Tournaments.Api.Tests.RegistrationTests.GetRegistrationForNonExistentTournament_ShouldReturn404NotFound
  nameWithType: RegistrationTests.GetRegistrationForNonExistentTournament_ShouldReturn404NotFound
- uid: Tournaments.Api.Tests.RegistrationTests.Init(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  name: Init(TestContext)
  href: Tournaments.Api.Tests.RegistrationTests.html#Tournaments_Api_Tests_RegistrationTests_Init_Microsoft_VisualStudio_TestTools_UnitTesting_TestContext_
  commentId: M:Tournaments.Api.Tests.RegistrationTests.Init(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  fullName: Tournaments.Api.Tests.RegistrationTests.Init(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  nameWithType: RegistrationTests.Init(TestContext)
- uid: Tournaments.Api.Tests.RegistrationTests.Init*
  name: Init
  href: Tournaments.Api.Tests.RegistrationTests.html#Tournaments_Api_Tests_RegistrationTests_Init_
  commentId: Overload:Tournaments.Api.Tests.RegistrationTests.Init
  isSpec: "True"
  fullName: Tournaments.Api.Tests.RegistrationTests.Init
  nameWithType: RegistrationTests.Init
- uid: Tournaments.Api.Tests.RegistrationTests.RegisterDuplicatePlayerInTournament_ShouldReturn409Conflict
  name: RegisterDuplicatePlayerInTournament_ShouldReturn409Conflict()
  href: Tournaments.Api.Tests.RegistrationTests.html#Tournaments_Api_Tests_RegistrationTests_RegisterDuplicatePlayerInTournament_ShouldReturn409Conflict
  commentId: M:Tournaments.Api.Tests.RegistrationTests.RegisterDuplicatePlayerInTournament_ShouldReturn409Conflict
  fullName: Tournaments.Api.Tests.RegistrationTests.RegisterDuplicatePlayerInTournament_ShouldReturn409Conflict()
  nameWithType: RegistrationTests.RegisterDuplicatePlayerInTournament_ShouldReturn409Conflict()
- uid: Tournaments.Api.Tests.RegistrationTests.RegisterDuplicatePlayerInTournament_ShouldReturn409Conflict*
  name: RegisterDuplicatePlayerInTournament_ShouldReturn409Conflict
  href: Tournaments.Api.Tests.RegistrationTests.html#Tournaments_Api_Tests_RegistrationTests_RegisterDuplicatePlayerInTournament_ShouldReturn409Conflict_
  commentId: Overload:Tournaments.Api.Tests.RegistrationTests.RegisterDuplicatePlayerInTournament_ShouldReturn409Conflict
  isSpec: "True"
  fullName: Tournaments.Api.Tests.RegistrationTests.RegisterDuplicatePlayerInTournament_ShouldReturn409Conflict
  nameWithType: RegistrationTests.RegisterDuplicatePlayerInTournament_ShouldReturn409Conflict
- uid: Tournaments.Api.Tests.RegistrationTests.RegisterPlayerInSubTournament_ShouldRequireParentRegistration
  name: RegisterPlayerInSubTournament_ShouldRequireParentRegistration()
  href: Tournaments.Api.Tests.RegistrationTests.html#Tournaments_Api_Tests_RegistrationTests_RegisterPlayerInSubTournament_ShouldRequireParentRegistration
  commentId: M:Tournaments.Api.Tests.RegistrationTests.RegisterPlayerInSubTournament_ShouldRequireParentRegistration
  fullName: Tournaments.Api.Tests.RegistrationTests.RegisterPlayerInSubTournament_ShouldRequireParentRegistration()
  nameWithType: RegistrationTests.RegisterPlayerInSubTournament_ShouldRequireParentRegistration()
- uid: Tournaments.Api.Tests.RegistrationTests.RegisterPlayerInSubTournament_ShouldRequireParentRegistration*
  name: RegisterPlayerInSubTournament_ShouldRequireParentRegistration
  href: Tournaments.Api.Tests.RegistrationTests.html#Tournaments_Api_Tests_RegistrationTests_RegisterPlayerInSubTournament_ShouldRequireParentRegistration_
  commentId: Overload:Tournaments.Api.Tests.RegistrationTests.RegisterPlayerInSubTournament_ShouldRequireParentRegistration
  isSpec: "True"
  fullName: Tournaments.Api.Tests.RegistrationTests.RegisterPlayerInSubTournament_ShouldRequireParentRegistration
  nameWithType: RegistrationTests.RegisterPlayerInSubTournament_ShouldRequireParentRegistration
- uid: Tournaments.Api.Tests.RegistrationTests.RegisterPlayerInTournament_ShouldReturn201
  name: RegisterPlayerInTournament_ShouldReturn201()
  href: Tournaments.Api.Tests.RegistrationTests.html#Tournaments_Api_Tests_RegistrationTests_RegisterPlayerInTournament_ShouldReturn201
  commentId: M:Tournaments.Api.Tests.RegistrationTests.RegisterPlayerInTournament_ShouldReturn201
  fullName: Tournaments.Api.Tests.RegistrationTests.RegisterPlayerInTournament_ShouldReturn201()
  nameWithType: RegistrationTests.RegisterPlayerInTournament_ShouldReturn201()
- uid: Tournaments.Api.Tests.RegistrationTests.RegisterPlayerInTournament_ShouldReturn201*
  name: RegisterPlayerInTournament_ShouldReturn201
  href: Tournaments.Api.Tests.RegistrationTests.html#Tournaments_Api_Tests_RegistrationTests_RegisterPlayerInTournament_ShouldReturn201_
  commentId: Overload:Tournaments.Api.Tests.RegistrationTests.RegisterPlayerInTournament_ShouldReturn201
  isSpec: "True"
  fullName: Tournaments.Api.Tests.RegistrationTests.RegisterPlayerInTournament_ShouldReturn201
  nameWithType: RegistrationTests.RegisterPlayerInTournament_ShouldReturn201
- uid: Tournaments.Api.Tests.RegistrationTests.RemovePlayerFromTournament_ShouldCascadeToSubTournaments
  name: RemovePlayerFromTournament_ShouldCascadeToSubTournaments()
  href: Tournaments.Api.Tests.RegistrationTests.html#Tournaments_Api_Tests_RegistrationTests_RemovePlayerFromTournament_ShouldCascadeToSubTournaments
  commentId: M:Tournaments.Api.Tests.RegistrationTests.RemovePlayerFromTournament_ShouldCascadeToSubTournaments
  fullName: Tournaments.Api.Tests.RegistrationTests.RemovePlayerFromTournament_ShouldCascadeToSubTournaments()
  nameWithType: RegistrationTests.RemovePlayerFromTournament_ShouldCascadeToSubTournaments()
- uid: Tournaments.Api.Tests.RegistrationTests.RemovePlayerFromTournament_ShouldCascadeToSubTournaments*
  name: RemovePlayerFromTournament_ShouldCascadeToSubTournaments
  href: Tournaments.Api.Tests.RegistrationTests.html#Tournaments_Api_Tests_RegistrationTests_RemovePlayerFromTournament_ShouldCascadeToSubTournaments_
  commentId: Overload:Tournaments.Api.Tests.RegistrationTests.RemovePlayerFromTournament_ShouldCascadeToSubTournaments
  isSpec: "True"
  fullName: Tournaments.Api.Tests.RegistrationTests.RemovePlayerFromTournament_ShouldCascadeToSubTournaments
  nameWithType: RegistrationTests.RemovePlayerFromTournament_ShouldCascadeToSubTournaments
- uid: Tournaments.Api.Tests.RegistrationTests.RemovePlayerFromTournament_ShouldReturn204NoContent
  name: RemovePlayerFromTournament_ShouldReturn204NoContent()
  href: Tournaments.Api.Tests.RegistrationTests.html#Tournaments_Api_Tests_RegistrationTests_RemovePlayerFromTournament_ShouldReturn204NoContent
  commentId: M:Tournaments.Api.Tests.RegistrationTests.RemovePlayerFromTournament_ShouldReturn204NoContent
  fullName: Tournaments.Api.Tests.RegistrationTests.RemovePlayerFromTournament_ShouldReturn204NoContent()
  nameWithType: RegistrationTests.RemovePlayerFromTournament_ShouldReturn204NoContent()
- uid: Tournaments.Api.Tests.RegistrationTests.RemovePlayerFromTournament_ShouldReturn204NoContent*
  name: RemovePlayerFromTournament_ShouldReturn204NoContent
  href: Tournaments.Api.Tests.RegistrationTests.html#Tournaments_Api_Tests_RegistrationTests_RemovePlayerFromTournament_ShouldReturn204NoContent_
  commentId: Overload:Tournaments.Api.Tests.RegistrationTests.RemovePlayerFromTournament_ShouldReturn204NoContent
  isSpec: "True"
  fullName: Tournaments.Api.Tests.RegistrationTests.RemovePlayerFromTournament_ShouldReturn204NoContent
  nameWithType: RegistrationTests.RemovePlayerFromTournament_ShouldReturn204NoContent
- uid: Tournaments.Api.Tests.RegistrationTests.SetUp
  name: SetUp()
  href: Tournaments.Api.Tests.RegistrationTests.html#Tournaments_Api_Tests_RegistrationTests_SetUp
  commentId: M:Tournaments.Api.Tests.RegistrationTests.SetUp
  fullName: Tournaments.Api.Tests.RegistrationTests.SetUp()
  nameWithType: RegistrationTests.SetUp()
- uid: Tournaments.Api.Tests.RegistrationTests.SetUp*
  name: SetUp
  href: Tournaments.Api.Tests.RegistrationTests.html#Tournaments_Api_Tests_RegistrationTests_SetUp_
  commentId: Overload:Tournaments.Api.Tests.RegistrationTests.SetUp
  isSpec: "True"
  fullName: Tournaments.Api.Tests.RegistrationTests.SetUp
  nameWithType: RegistrationTests.SetUp
- uid: Tournaments.Api.Tests.ResourceHelper
  name: ResourceHelper
  href: Tournaments.Api.Tests.ResourceHelper.html
  commentId: T:Tournaments.Api.Tests.ResourceHelper
  fullName: Tournaments.Api.Tests.ResourceHelper
  nameWithType: ResourceHelper
- uid: Tournaments.Api.Tests.ResourceHelper.AssertHasLink(System.Collections.Generic.List{Tournaments.Shared.Hateoas.Link},System.String,System.String,System.String)
  name: AssertHasLink(List<Link>, string, string, string)
  href: Tournaments.Api.Tests.ResourceHelper.html#Tournaments_Api_Tests_ResourceHelper_AssertHasLink_System_Collections_Generic_List_Tournaments_Shared_Hateoas_Link__System_String_System_String_System_String_
  commentId: M:Tournaments.Api.Tests.ResourceHelper.AssertHasLink(System.Collections.Generic.List{Tournaments.Shared.Hateoas.Link},System.String,System.String,System.String)
  name.vb: AssertHasLink(List(Of Link), String, String, String)
  fullName: Tournaments.Api.Tests.ResourceHelper.AssertHasLink(System.Collections.Generic.List<Tournaments.Shared.Hateoas.Link>, string, string, string)
  fullName.vb: Tournaments.Api.Tests.ResourceHelper.AssertHasLink(System.Collections.Generic.List(Of Tournaments.Shared.Hateoas.Link), String, String, String)
  nameWithType: ResourceHelper.AssertHasLink(List<Link>, string, string, string)
  nameWithType.vb: ResourceHelper.AssertHasLink(List(Of Link), String, String, String)
- uid: Tournaments.Api.Tests.ResourceHelper.AssertHasLink*
  name: AssertHasLink
  href: Tournaments.Api.Tests.ResourceHelper.html#Tournaments_Api_Tests_ResourceHelper_AssertHasLink_
  commentId: Overload:Tournaments.Api.Tests.ResourceHelper.AssertHasLink
  isSpec: "True"
  fullName: Tournaments.Api.Tests.ResourceHelper.AssertHasLink
  nameWithType: ResourceHelper.AssertHasLink
- uid: Tournaments.Api.Tests.ResourceHelper.AssertJsonElementHasLink(System.Text.Json.JsonElement,System.String,System.String,System.String)
  name: AssertJsonElementHasLink(JsonElement, string, string, string)
  href: Tournaments.Api.Tests.ResourceHelper.html#Tournaments_Api_Tests_ResourceHelper_AssertJsonElementHasLink_System_Text_Json_JsonElement_System_String_System_String_System_String_
  commentId: M:Tournaments.Api.Tests.ResourceHelper.AssertJsonElementHasLink(System.Text.Json.JsonElement,System.String,System.String,System.String)
  name.vb: AssertJsonElementHasLink(JsonElement, String, String, String)
  fullName: Tournaments.Api.Tests.ResourceHelper.AssertJsonElementHasLink(System.Text.Json.JsonElement, string, string, string)
  fullName.vb: Tournaments.Api.Tests.ResourceHelper.AssertJsonElementHasLink(System.Text.Json.JsonElement, String, String, String)
  nameWithType: ResourceHelper.AssertJsonElementHasLink(JsonElement, string, string, string)
  nameWithType.vb: ResourceHelper.AssertJsonElementHasLink(JsonElement, String, String, String)
- uid: Tournaments.Api.Tests.ResourceHelper.AssertJsonElementHasLink*
  name: AssertJsonElementHasLink
  href: Tournaments.Api.Tests.ResourceHelper.html#Tournaments_Api_Tests_ResourceHelper_AssertJsonElementHasLink_
  commentId: Overload:Tournaments.Api.Tests.ResourceHelper.AssertJsonElementHasLink
  isSpec: "True"
  fullName: Tournaments.Api.Tests.ResourceHelper.AssertJsonElementHasLink
  nameWithType: ResourceHelper.AssertJsonElementHasLink
- uid: Tournaments.Api.Tests.ResourceHelper.AssertPlayerLinks(Tournaments.Shared.Hateoas.ResourcePlayer,System.String)
  name: AssertPlayerLinks(ResourcePlayer, string)
  href: Tournaments.Api.Tests.ResourceHelper.html#Tournaments_Api_Tests_ResourceHelper_AssertPlayerLinks_Tournaments_Shared_Hateoas_ResourcePlayer_System_String_
  commentId: M:Tournaments.Api.Tests.ResourceHelper.AssertPlayerLinks(Tournaments.Shared.Hateoas.ResourcePlayer,System.String)
  name.vb: AssertPlayerLinks(ResourcePlayer, String)
  fullName: Tournaments.Api.Tests.ResourceHelper.AssertPlayerLinks(Tournaments.Shared.Hateoas.ResourcePlayer, string)
  fullName.vb: Tournaments.Api.Tests.ResourceHelper.AssertPlayerLinks(Tournaments.Shared.Hateoas.ResourcePlayer, String)
  nameWithType: ResourceHelper.AssertPlayerLinks(ResourcePlayer, string)
  nameWithType.vb: ResourceHelper.AssertPlayerLinks(ResourcePlayer, String)
- uid: Tournaments.Api.Tests.ResourceHelper.AssertPlayerLinks*
  name: AssertPlayerLinks
  href: Tournaments.Api.Tests.ResourceHelper.html#Tournaments_Api_Tests_ResourceHelper_AssertPlayerLinks_
  commentId: Overload:Tournaments.Api.Tests.ResourceHelper.AssertPlayerLinks
  isSpec: "True"
  fullName: Tournaments.Api.Tests.ResourceHelper.AssertPlayerLinks
  nameWithType: ResourceHelper.AssertPlayerLinks
- uid: Tournaments.Api.Tests.ResourceHelper.AssertRegistrationLinks(Tournaments.Shared.Hateoas.ResourceRegistration,System.String,System.String)
  name: AssertRegistrationLinks(ResourceRegistration, string, string)
  href: Tournaments.Api.Tests.ResourceHelper.html#Tournaments_Api_Tests_ResourceHelper_AssertRegistrationLinks_Tournaments_Shared_Hateoas_ResourceRegistration_System_String_System_String_
  commentId: M:Tournaments.Api.Tests.ResourceHelper.AssertRegistrationLinks(Tournaments.Shared.Hateoas.ResourceRegistration,System.String,System.String)
  name.vb: AssertRegistrationLinks(ResourceRegistration, String, String)
  fullName: Tournaments.Api.Tests.ResourceHelper.AssertRegistrationLinks(Tournaments.Shared.Hateoas.ResourceRegistration, string, string)
  fullName.vb: Tournaments.Api.Tests.ResourceHelper.AssertRegistrationLinks(Tournaments.Shared.Hateoas.ResourceRegistration, String, String)
  nameWithType: ResourceHelper.AssertRegistrationLinks(ResourceRegistration, string, string)
  nameWithType.vb: ResourceHelper.AssertRegistrationLinks(ResourceRegistration, String, String)
- uid: Tournaments.Api.Tests.ResourceHelper.AssertRegistrationLinks*
  name: AssertRegistrationLinks
  href: Tournaments.Api.Tests.ResourceHelper.html#Tournaments_Api_Tests_ResourceHelper_AssertRegistrationLinks_
  commentId: Overload:Tournaments.Api.Tests.ResourceHelper.AssertRegistrationLinks
  isSpec: "True"
  fullName: Tournaments.Api.Tests.ResourceHelper.AssertRegistrationLinks
  nameWithType: ResourceHelper.AssertRegistrationLinks
- uid: Tournaments.Api.Tests.ResourceHelper.AssertTournamentLinks(Tournaments.Shared.Hateoas.ResourceTournament,System.String)
  name: AssertTournamentLinks(ResourceTournament, string)
  href: Tournaments.Api.Tests.ResourceHelper.html#Tournaments_Api_Tests_ResourceHelper_AssertTournamentLinks_Tournaments_Shared_Hateoas_ResourceTournament_System_String_
  commentId: M:Tournaments.Api.Tests.ResourceHelper.AssertTournamentLinks(Tournaments.Shared.Hateoas.ResourceTournament,System.String)
  name.vb: AssertTournamentLinks(ResourceTournament, String)
  fullName: Tournaments.Api.Tests.ResourceHelper.AssertTournamentLinks(Tournaments.Shared.Hateoas.ResourceTournament, string)
  fullName.vb: Tournaments.Api.Tests.ResourceHelper.AssertTournamentLinks(Tournaments.Shared.Hateoas.ResourceTournament, String)
  nameWithType: ResourceHelper.AssertTournamentLinks(ResourceTournament, string)
  nameWithType.vb: ResourceHelper.AssertTournamentLinks(ResourceTournament, String)
- uid: Tournaments.Api.Tests.ResourceHelper.AssertTournamentLinks*
  name: AssertTournamentLinks
  href: Tournaments.Api.Tests.ResourceHelper.html#Tournaments_Api_Tests_ResourceHelper_AssertTournamentLinks_
  commentId: Overload:Tournaments.Api.Tests.ResourceHelper.AssertTournamentLinks
  isSpec: "True"
  fullName: Tournaments.Api.Tests.ResourceHelper.AssertTournamentLinks
  nameWithType: ResourceHelper.AssertTournamentLinks
- uid: Tournaments.Api.Tests.TournamentTests
  name: TournamentTests
  href: Tournaments.Api.Tests.TournamentTests.html
  commentId: T:Tournaments.Api.Tests.TournamentTests
  fullName: Tournaments.Api.Tests.TournamentTests
  nameWithType: TournamentTests
- uid: Tournaments.Api.Tests.TournamentTests.CreateDuplicateTournament_ShouldReturn409Conflict
  name: CreateDuplicateTournament_ShouldReturn409Conflict()
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_CreateDuplicateTournament_ShouldReturn409Conflict
  commentId: M:Tournaments.Api.Tests.TournamentTests.CreateDuplicateTournament_ShouldReturn409Conflict
  fullName: Tournaments.Api.Tests.TournamentTests.CreateDuplicateTournament_ShouldReturn409Conflict()
  nameWithType: TournamentTests.CreateDuplicateTournament_ShouldReturn409Conflict()
- uid: Tournaments.Api.Tests.TournamentTests.CreateDuplicateTournament_ShouldReturn409Conflict*
  name: CreateDuplicateTournament_ShouldReturn409Conflict
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_CreateDuplicateTournament_ShouldReturn409Conflict_
  commentId: Overload:Tournaments.Api.Tests.TournamentTests.CreateDuplicateTournament_ShouldReturn409Conflict
  isSpec: "True"
  fullName: Tournaments.Api.Tests.TournamentTests.CreateDuplicateTournament_ShouldReturn409Conflict
  nameWithType: TournamentTests.CreateDuplicateTournament_ShouldReturn409Conflict
- uid: Tournaments.Api.Tests.TournamentTests.CreateNestedSubTournament_ShouldReturn201
  name: CreateNestedSubTournament_ShouldReturn201()
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_CreateNestedSubTournament_ShouldReturn201
  commentId: M:Tournaments.Api.Tests.TournamentTests.CreateNestedSubTournament_ShouldReturn201
  fullName: Tournaments.Api.Tests.TournamentTests.CreateNestedSubTournament_ShouldReturn201()
  nameWithType: TournamentTests.CreateNestedSubTournament_ShouldReturn201()
- uid: Tournaments.Api.Tests.TournamentTests.CreateNestedSubTournament_ShouldReturn201*
  name: CreateNestedSubTournament_ShouldReturn201
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_CreateNestedSubTournament_ShouldReturn201_
  commentId: Overload:Tournaments.Api.Tests.TournamentTests.CreateNestedSubTournament_ShouldReturn201
  isSpec: "True"
  fullName: Tournaments.Api.Tests.TournamentTests.CreateNestedSubTournament_ShouldReturn201
  nameWithType: TournamentTests.CreateNestedSubTournament_ShouldReturn201
- uid: Tournaments.Api.Tests.TournamentTests.CreateSubTournament_ShouldReturn201
  name: CreateSubTournament_ShouldReturn201()
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_CreateSubTournament_ShouldReturn201
  commentId: M:Tournaments.Api.Tests.TournamentTests.CreateSubTournament_ShouldReturn201
  fullName: Tournaments.Api.Tests.TournamentTests.CreateSubTournament_ShouldReturn201()
  nameWithType: TournamentTests.CreateSubTournament_ShouldReturn201()
- uid: Tournaments.Api.Tests.TournamentTests.CreateSubTournament_ShouldReturn201*
  name: CreateSubTournament_ShouldReturn201
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_CreateSubTournament_ShouldReturn201_
  commentId: Overload:Tournaments.Api.Tests.TournamentTests.CreateSubTournament_ShouldReturn201
  isSpec: "True"
  fullName: Tournaments.Api.Tests.TournamentTests.CreateSubTournament_ShouldReturn201
  nameWithType: TournamentTests.CreateSubTournament_ShouldReturn201
- uid: Tournaments.Api.Tests.TournamentTests.CreateTournamentExceedingNestingLimit_ShouldReturn400BadRequest
  name: CreateTournamentExceedingNestingLimit_ShouldReturn400BadRequest()
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_CreateTournamentExceedingNestingLimit_ShouldReturn400BadRequest
  commentId: M:Tournaments.Api.Tests.TournamentTests.CreateTournamentExceedingNestingLimit_ShouldReturn400BadRequest
  fullName: Tournaments.Api.Tests.TournamentTests.CreateTournamentExceedingNestingLimit_ShouldReturn400BadRequest()
  nameWithType: TournamentTests.CreateTournamentExceedingNestingLimit_ShouldReturn400BadRequest()
- uid: Tournaments.Api.Tests.TournamentTests.CreateTournamentExceedingNestingLimit_ShouldReturn400BadRequest*
  name: CreateTournamentExceedingNestingLimit_ShouldReturn400BadRequest
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_CreateTournamentExceedingNestingLimit_ShouldReturn400BadRequest_
  commentId: Overload:Tournaments.Api.Tests.TournamentTests.CreateTournamentExceedingNestingLimit_ShouldReturn400BadRequest
  isSpec: "True"
  fullName: Tournaments.Api.Tests.TournamentTests.CreateTournamentExceedingNestingLimit_ShouldReturn400BadRequest
  nameWithType: TournamentTests.CreateTournamentExceedingNestingLimit_ShouldReturn400BadRequest
- uid: Tournaments.Api.Tests.TournamentTests.CreateTournament_ShouldReturn201
  name: CreateTournament_ShouldReturn201()
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_CreateTournament_ShouldReturn201
  commentId: M:Tournaments.Api.Tests.TournamentTests.CreateTournament_ShouldReturn201
  fullName: Tournaments.Api.Tests.TournamentTests.CreateTournament_ShouldReturn201()
  nameWithType: TournamentTests.CreateTournament_ShouldReturn201()
- uid: Tournaments.Api.Tests.TournamentTests.CreateTournament_ShouldReturn201*
  name: CreateTournament_ShouldReturn201
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_CreateTournament_ShouldReturn201_
  commentId: Overload:Tournaments.Api.Tests.TournamentTests.CreateTournament_ShouldReturn201
  isSpec: "True"
  fullName: Tournaments.Api.Tests.TournamentTests.CreateTournament_ShouldReturn201
  nameWithType: TournamentTests.CreateTournament_ShouldReturn201
- uid: Tournaments.Api.Tests.TournamentTests.DeleteTournament_ShouldRemoveTournament
  name: DeleteTournament_ShouldRemoveTournament()
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_DeleteTournament_ShouldRemoveTournament
  commentId: M:Tournaments.Api.Tests.TournamentTests.DeleteTournament_ShouldRemoveTournament
  fullName: Tournaments.Api.Tests.TournamentTests.DeleteTournament_ShouldRemoveTournament()
  nameWithType: TournamentTests.DeleteTournament_ShouldRemoveTournament()
- uid: Tournaments.Api.Tests.TournamentTests.DeleteTournament_ShouldRemoveTournament*
  name: DeleteTournament_ShouldRemoveTournament
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_DeleteTournament_ShouldRemoveTournament_
  commentId: Overload:Tournaments.Api.Tests.TournamentTests.DeleteTournament_ShouldRemoveTournament
  isSpec: "True"
  fullName: Tournaments.Api.Tests.TournamentTests.DeleteTournament_ShouldRemoveTournament
  nameWithType: TournamentTests.DeleteTournament_ShouldRemoveTournament
- uid: Tournaments.Api.Tests.TournamentTests.DeleteTournament_ShouldRemoveTournamentAndSubTournaments
  name: DeleteTournament_ShouldRemoveTournamentAndSubTournaments()
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_DeleteTournament_ShouldRemoveTournamentAndSubTournaments
  commentId: M:Tournaments.Api.Tests.TournamentTests.DeleteTournament_ShouldRemoveTournamentAndSubTournaments
  fullName: Tournaments.Api.Tests.TournamentTests.DeleteTournament_ShouldRemoveTournamentAndSubTournaments()
  nameWithType: TournamentTests.DeleteTournament_ShouldRemoveTournamentAndSubTournaments()
- uid: Tournaments.Api.Tests.TournamentTests.DeleteTournament_ShouldRemoveTournamentAndSubTournaments*
  name: DeleteTournament_ShouldRemoveTournamentAndSubTournaments
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_DeleteTournament_ShouldRemoveTournamentAndSubTournaments_
  commentId: Overload:Tournaments.Api.Tests.TournamentTests.DeleteTournament_ShouldRemoveTournamentAndSubTournaments
  isSpec: "True"
  fullName: Tournaments.Api.Tests.TournamentTests.DeleteTournament_ShouldRemoveTournamentAndSubTournaments
  nameWithType: TournamentTests.DeleteTournament_ShouldRemoveTournamentAndSubTournaments
- uid: Tournaments.Api.Tests.TournamentTests.GetTournamentWithSubTournaments_ShouldIncludeSubTournaments
  name: GetTournamentWithSubTournaments_ShouldIncludeSubTournaments()
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_GetTournamentWithSubTournaments_ShouldIncludeSubTournaments
  commentId: M:Tournaments.Api.Tests.TournamentTests.GetTournamentWithSubTournaments_ShouldIncludeSubTournaments
  fullName: Tournaments.Api.Tests.TournamentTests.GetTournamentWithSubTournaments_ShouldIncludeSubTournaments()
  nameWithType: TournamentTests.GetTournamentWithSubTournaments_ShouldIncludeSubTournaments()
- uid: Tournaments.Api.Tests.TournamentTests.GetTournamentWithSubTournaments_ShouldIncludeSubTournaments*
  name: GetTournamentWithSubTournaments_ShouldIncludeSubTournaments
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_GetTournamentWithSubTournaments_ShouldIncludeSubTournaments_
  commentId: Overload:Tournaments.Api.Tests.TournamentTests.GetTournamentWithSubTournaments_ShouldIncludeSubTournaments
  isSpec: "True"
  fullName: Tournaments.Api.Tests.TournamentTests.GetTournamentWithSubTournaments_ShouldIncludeSubTournaments
  nameWithType: TournamentTests.GetTournamentWithSubTournaments_ShouldIncludeSubTournaments
- uid: Tournaments.Api.Tests.TournamentTests.GetTournament_ShouldReturnTournament
  name: GetTournament_ShouldReturnTournament()
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_GetTournament_ShouldReturnTournament
  commentId: M:Tournaments.Api.Tests.TournamentTests.GetTournament_ShouldReturnTournament
  fullName: Tournaments.Api.Tests.TournamentTests.GetTournament_ShouldReturnTournament()
  nameWithType: TournamentTests.GetTournament_ShouldReturnTournament()
- uid: Tournaments.Api.Tests.TournamentTests.GetTournament_ShouldReturnTournament*
  name: GetTournament_ShouldReturnTournament
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_GetTournament_ShouldReturnTournament_
  commentId: Overload:Tournaments.Api.Tests.TournamentTests.GetTournament_ShouldReturnTournament
  isSpec: "True"
  fullName: Tournaments.Api.Tests.TournamentTests.GetTournament_ShouldReturnTournament
  nameWithType: TournamentTests.GetTournament_ShouldReturnTournament
- uid: Tournaments.Api.Tests.TournamentTests.Init(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  name: Init(TestContext)
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_Init_Microsoft_VisualStudio_TestTools_UnitTesting_TestContext_
  commentId: M:Tournaments.Api.Tests.TournamentTests.Init(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  fullName: Tournaments.Api.Tests.TournamentTests.Init(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  nameWithType: TournamentTests.Init(TestContext)
- uid: Tournaments.Api.Tests.TournamentTests.Init*
  name: Init
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_Init_
  commentId: Overload:Tournaments.Api.Tests.TournamentTests.Init
  isSpec: "True"
  fullName: Tournaments.Api.Tests.TournamentTests.Init
  nameWithType: TournamentTests.Init
- uid: Tournaments.Api.Tests.TournamentTests.SetUp
  name: SetUp()
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_SetUp
  commentId: M:Tournaments.Api.Tests.TournamentTests.SetUp
  fullName: Tournaments.Api.Tests.TournamentTests.SetUp()
  nameWithType: TournamentTests.SetUp()
- uid: Tournaments.Api.Tests.TournamentTests.SetUp*
  name: SetUp
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_SetUp_
  commentId: Overload:Tournaments.Api.Tests.TournamentTests.SetUp
  isSpec: "True"
  fullName: Tournaments.Api.Tests.TournamentTests.SetUp
  nameWithType: TournamentTests.SetUp
- uid: Tournaments.Api.Tests.TournamentTests.UpdateTournament_ShouldModifyTournament
  name: UpdateTournament_ShouldModifyTournament()
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_UpdateTournament_ShouldModifyTournament
  commentId: M:Tournaments.Api.Tests.TournamentTests.UpdateTournament_ShouldModifyTournament
  fullName: Tournaments.Api.Tests.TournamentTests.UpdateTournament_ShouldModifyTournament()
  nameWithType: TournamentTests.UpdateTournament_ShouldModifyTournament()
- uid: Tournaments.Api.Tests.TournamentTests.UpdateTournament_ShouldModifyTournament*
  name: UpdateTournament_ShouldModifyTournament
  href: Tournaments.Api.Tests.TournamentTests.html#Tournaments_Api_Tests_TournamentTests_UpdateTournament_ShouldModifyTournament_
  commentId: Overload:Tournaments.Api.Tests.TournamentTests.UpdateTournament_ShouldModifyTournament
  isSpec: "True"
  fullName: Tournaments.Api.Tests.TournamentTests.UpdateTournament_ShouldModifyTournament
  nameWithType: TournamentTests.UpdateTournament_ShouldModifyTournament
- uid: Tournaments.Api.Tests.TournamentsApiTestFixture
  name: TournamentsApiTestFixture
  href: Tournaments.Api.Tests.TournamentsApiTestFixture.html
  commentId: T:Tournaments.Api.Tests.TournamentsApiTestFixture
  fullName: Tournaments.Api.Tests.TournamentsApiTestFixture
  nameWithType: TournamentsApiTestFixture
- uid: Tournaments.Api.Tests.TournamentsApiTestFixture.#ctor
  name: TournamentsApiTestFixture()
  href: Tournaments.Api.Tests.TournamentsApiTestFixture.html#Tournaments_Api_Tests_TournamentsApiTestFixture__ctor
  commentId: M:Tournaments.Api.Tests.TournamentsApiTestFixture.#ctor
  name.vb: New()
  fullName: Tournaments.Api.Tests.TournamentsApiTestFixture.TournamentsApiTestFixture()
  fullName.vb: Tournaments.Api.Tests.TournamentsApiTestFixture.New()
  nameWithType: TournamentsApiTestFixture.TournamentsApiTestFixture()
  nameWithType.vb: TournamentsApiTestFixture.New()
- uid: Tournaments.Api.Tests.TournamentsApiTestFixture.#ctor*
  name: TournamentsApiTestFixture
  href: Tournaments.Api.Tests.TournamentsApiTestFixture.html#Tournaments_Api_Tests_TournamentsApiTestFixture__ctor_
  commentId: Overload:Tournaments.Api.Tests.TournamentsApiTestFixture.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Tournaments.Api.Tests.TournamentsApiTestFixture.TournamentsApiTestFixture
  fullName.vb: Tournaments.Api.Tests.TournamentsApiTestFixture.New
  nameWithType: TournamentsApiTestFixture.TournamentsApiTestFixture
  nameWithType.vb: TournamentsApiTestFixture.New
- uid: Tournaments.Api.Tests.TournamentsApiTestFixture.Client
  name: Client
  href: Tournaments.Api.Tests.TournamentsApiTestFixture.html#Tournaments_Api_Tests_TournamentsApiTestFixture_Client
  commentId: P:Tournaments.Api.Tests.TournamentsApiTestFixture.Client
  fullName: Tournaments.Api.Tests.TournamentsApiTestFixture.Client
  nameWithType: TournamentsApiTestFixture.Client
- uid: Tournaments.Api.Tests.TournamentsApiTestFixture.Client*
  name: Client
  href: Tournaments.Api.Tests.TournamentsApiTestFixture.html#Tournaments_Api_Tests_TournamentsApiTestFixture_Client_
  commentId: Overload:Tournaments.Api.Tests.TournamentsApiTestFixture.Client
  isSpec: "True"
  fullName: Tournaments.Api.Tests.TournamentsApiTestFixture.Client
  nameWithType: TournamentsApiTestFixture.Client
- uid: Tournaments.Api.Tests.TournamentsApiTestFixture.ConfigureWebHost(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  name: ConfigureWebHost(IWebHostBuilder)
  href: Tournaments.Api.Tests.TournamentsApiTestFixture.html#Tournaments_Api_Tests_TournamentsApiTestFixture_ConfigureWebHost_Microsoft_AspNetCore_Hosting_IWebHostBuilder_
  commentId: M:Tournaments.Api.Tests.TournamentsApiTestFixture.ConfigureWebHost(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  fullName: Tournaments.Api.Tests.TournamentsApiTestFixture.ConfigureWebHost(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  nameWithType: TournamentsApiTestFixture.ConfigureWebHost(IWebHostBuilder)
- uid: Tournaments.Api.Tests.TournamentsApiTestFixture.ConfigureWebHost*
  name: ConfigureWebHost
  href: Tournaments.Api.Tests.TournamentsApiTestFixture.html#Tournaments_Api_Tests_TournamentsApiTestFixture_ConfigureWebHost_
  commentId: Overload:Tournaments.Api.Tests.TournamentsApiTestFixture.ConfigureWebHost
  isSpec: "True"
  fullName: Tournaments.Api.Tests.TournamentsApiTestFixture.ConfigureWebHost
  nameWithType: TournamentsApiTestFixture.ConfigureWebHost
- uid: Tournaments.Api.Tests.TournamentsApiTestFixture.ResetDatabase
  name: ResetDatabase()
  href: Tournaments.Api.Tests.TournamentsApiTestFixture.html#Tournaments_Api_Tests_TournamentsApiTestFixture_ResetDatabase
  commentId: M:Tournaments.Api.Tests.TournamentsApiTestFixture.ResetDatabase
  fullName: Tournaments.Api.Tests.TournamentsApiTestFixture.ResetDatabase()
  nameWithType: TournamentsApiTestFixture.ResetDatabase()
- uid: Tournaments.Api.Tests.TournamentsApiTestFixture.ResetDatabase*
  name: ResetDatabase
  href: Tournaments.Api.Tests.TournamentsApiTestFixture.html#Tournaments_Api_Tests_TournamentsApiTestFixture_ResetDatabase_
  commentId: Overload:Tournaments.Api.Tests.TournamentsApiTestFixture.ResetDatabase
  isSpec: "True"
  fullName: Tournaments.Api.Tests.TournamentsApiTestFixture.ResetDatabase
  nameWithType: TournamentsApiTestFixture.ResetDatabase
- uid: Tournaments.Shared.Hateoas
  name: Tournaments.Shared.Hateoas
  href: Tournaments.Shared.Hateoas.html
  commentId: N:Tournaments.Shared.Hateoas
  fullName: Tournaments.Shared.Hateoas
  nameWithType: Tournaments.Shared.Hateoas
- uid: Tournaments.Shared.Hateoas.Link
  name: Link
  href: Tournaments.Shared.Hateoas.Link.html
  commentId: T:Tournaments.Shared.Hateoas.Link
  fullName: Tournaments.Shared.Hateoas.Link
  nameWithType: Link
- uid: Tournaments.Shared.Hateoas.Link.#ctor(System.String,System.String,System.String)
  name: Link(string, string, string)
  href: Tournaments.Shared.Hateoas.Link.html#Tournaments_Shared_Hateoas_Link__ctor_System_String_System_String_System_String_
  commentId: M:Tournaments.Shared.Hateoas.Link.#ctor(System.String,System.String,System.String)
  name.vb: New(String, String, String)
  fullName: Tournaments.Shared.Hateoas.Link.Link(string, string, string)
  fullName.vb: Tournaments.Shared.Hateoas.Link.New(String, String, String)
  nameWithType: Link.Link(string, string, string)
  nameWithType.vb: Link.New(String, String, String)
- uid: Tournaments.Shared.Hateoas.Link.#ctor*
  name: Link
  href: Tournaments.Shared.Hateoas.Link.html#Tournaments_Shared_Hateoas_Link__ctor_
  commentId: Overload:Tournaments.Shared.Hateoas.Link.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Tournaments.Shared.Hateoas.Link.Link
  fullName.vb: Tournaments.Shared.Hateoas.Link.New
  nameWithType: Link.Link
  nameWithType.vb: Link.New
- uid: Tournaments.Shared.Hateoas.Link.Href
  name: Href
  href: Tournaments.Shared.Hateoas.Link.html#Tournaments_Shared_Hateoas_Link_Href
  commentId: P:Tournaments.Shared.Hateoas.Link.Href
  fullName: Tournaments.Shared.Hateoas.Link.Href
  nameWithType: Link.Href
- uid: Tournaments.Shared.Hateoas.Link.Href*
  name: Href
  href: Tournaments.Shared.Hateoas.Link.html#Tournaments_Shared_Hateoas_Link_Href_
  commentId: Overload:Tournaments.Shared.Hateoas.Link.Href
  isSpec: "True"
  fullName: Tournaments.Shared.Hateoas.Link.Href
  nameWithType: Link.Href
- uid: Tournaments.Shared.Hateoas.Link.Method
  name: Method
  href: Tournaments.Shared.Hateoas.Link.html#Tournaments_Shared_Hateoas_Link_Method
  commentId: P:Tournaments.Shared.Hateoas.Link.Method
  fullName: Tournaments.Shared.Hateoas.Link.Method
  nameWithType: Link.Method
- uid: Tournaments.Shared.Hateoas.Link.Method*
  name: Method
  href: Tournaments.Shared.Hateoas.Link.html#Tournaments_Shared_Hateoas_Link_Method_
  commentId: Overload:Tournaments.Shared.Hateoas.Link.Method
  isSpec: "True"
  fullName: Tournaments.Shared.Hateoas.Link.Method
  nameWithType: Link.Method
- uid: Tournaments.Shared.Hateoas.Link.Rel
  name: Rel
  href: Tournaments.Shared.Hateoas.Link.html#Tournaments_Shared_Hateoas_Link_Rel
  commentId: P:Tournaments.Shared.Hateoas.Link.Rel
  fullName: Tournaments.Shared.Hateoas.Link.Rel
  nameWithType: Link.Rel
- uid: Tournaments.Shared.Hateoas.Link.Rel*
  name: Rel
  href: Tournaments.Shared.Hateoas.Link.html#Tournaments_Shared_Hateoas_Link_Rel_
  commentId: Overload:Tournaments.Shared.Hateoas.Link.Rel
  isSpec: "True"
  fullName: Tournaments.Shared.Hateoas.Link.Rel
  nameWithType: Link.Rel
- uid: Tournaments.Shared.Hateoas.ResourcePlayer
  name: ResourcePlayer
  href: Tournaments.Shared.Hateoas.ResourcePlayer.html
  commentId: T:Tournaments.Shared.Hateoas.ResourcePlayer
  fullName: Tournaments.Shared.Hateoas.ResourcePlayer
  nameWithType: ResourcePlayer
- uid: Tournaments.Shared.Hateoas.ResourcePlayer.#ctor
  name: ResourcePlayer()
  href: Tournaments.Shared.Hateoas.ResourcePlayer.html#Tournaments_Shared_Hateoas_ResourcePlayer__ctor
  commentId: M:Tournaments.Shared.Hateoas.ResourcePlayer.#ctor
  name.vb: New()
  fullName: Tournaments.Shared.Hateoas.ResourcePlayer.ResourcePlayer()
  fullName.vb: Tournaments.Shared.Hateoas.ResourcePlayer.New()
  nameWithType: ResourcePlayer.ResourcePlayer()
  nameWithType.vb: ResourcePlayer.New()
- uid: Tournaments.Shared.Hateoas.ResourcePlayer.#ctor(Tournaments.Shared.Models.Player)
  name: ResourcePlayer(Player)
  href: Tournaments.Shared.Hateoas.ResourcePlayer.html#Tournaments_Shared_Hateoas_ResourcePlayer__ctor_Tournaments_Shared_Models_Player_
  commentId: M:Tournaments.Shared.Hateoas.ResourcePlayer.#ctor(Tournaments.Shared.Models.Player)
  name.vb: New(Player)
  fullName: Tournaments.Shared.Hateoas.ResourcePlayer.ResourcePlayer(Tournaments.Shared.Models.Player)
  fullName.vb: Tournaments.Shared.Hateoas.ResourcePlayer.New(Tournaments.Shared.Models.Player)
  nameWithType: ResourcePlayer.ResourcePlayer(Player)
  nameWithType.vb: ResourcePlayer.New(Player)
- uid: Tournaments.Shared.Hateoas.ResourcePlayer.#ctor*
  name: ResourcePlayer
  href: Tournaments.Shared.Hateoas.ResourcePlayer.html#Tournaments_Shared_Hateoas_ResourcePlayer__ctor_
  commentId: Overload:Tournaments.Shared.Hateoas.ResourcePlayer.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Tournaments.Shared.Hateoas.ResourcePlayer.ResourcePlayer
  fullName.vb: Tournaments.Shared.Hateoas.ResourcePlayer.New
  nameWithType: ResourcePlayer.ResourcePlayer
  nameWithType.vb: ResourcePlayer.New
- uid: Tournaments.Shared.Hateoas.ResourceRegistration
  name: ResourceRegistration
  href: Tournaments.Shared.Hateoas.ResourceRegistration.html
  commentId: T:Tournaments.Shared.Hateoas.ResourceRegistration
  fullName: Tournaments.Shared.Hateoas.ResourceRegistration
  nameWithType: ResourceRegistration
- uid: Tournaments.Shared.Hateoas.ResourceRegistration.#ctor
  name: ResourceRegistration()
  href: Tournaments.Shared.Hateoas.ResourceRegistration.html#Tournaments_Shared_Hateoas_ResourceRegistration__ctor
  commentId: M:Tournaments.Shared.Hateoas.ResourceRegistration.#ctor
  name.vb: New()
  fullName: Tournaments.Shared.Hateoas.ResourceRegistration.ResourceRegistration()
  fullName.vb: Tournaments.Shared.Hateoas.ResourceRegistration.New()
  nameWithType: ResourceRegistration.ResourceRegistration()
  nameWithType.vb: ResourceRegistration.New()
- uid: Tournaments.Shared.Hateoas.ResourceRegistration.#ctor(Tournaments.Shared.Models.Registration)
  name: ResourceRegistration(Registration)
  href: Tournaments.Shared.Hateoas.ResourceRegistration.html#Tournaments_Shared_Hateoas_ResourceRegistration__ctor_Tournaments_Shared_Models_Registration_
  commentId: M:Tournaments.Shared.Hateoas.ResourceRegistration.#ctor(Tournaments.Shared.Models.Registration)
  name.vb: New(Registration)
  fullName: Tournaments.Shared.Hateoas.ResourceRegistration.ResourceRegistration(Tournaments.Shared.Models.Registration)
  fullName.vb: Tournaments.Shared.Hateoas.ResourceRegistration.New(Tournaments.Shared.Models.Registration)
  nameWithType: ResourceRegistration.ResourceRegistration(Registration)
  nameWithType.vb: ResourceRegistration.New(Registration)
- uid: Tournaments.Shared.Hateoas.ResourceRegistration.#ctor*
  name: ResourceRegistration
  href: Tournaments.Shared.Hateoas.ResourceRegistration.html#Tournaments_Shared_Hateoas_ResourceRegistration__ctor_
  commentId: Overload:Tournaments.Shared.Hateoas.ResourceRegistration.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Tournaments.Shared.Hateoas.ResourceRegistration.ResourceRegistration
  fullName.vb: Tournaments.Shared.Hateoas.ResourceRegistration.New
  nameWithType: ResourceRegistration.ResourceRegistration
  nameWithType.vb: ResourceRegistration.New
- uid: Tournaments.Shared.Hateoas.ResourceTournament
  name: ResourceTournament
  href: Tournaments.Shared.Hateoas.ResourceTournament.html
  commentId: T:Tournaments.Shared.Hateoas.ResourceTournament
  fullName: Tournaments.Shared.Hateoas.ResourceTournament
  nameWithType: ResourceTournament
- uid: Tournaments.Shared.Hateoas.ResourceTournament.#ctor
  name: ResourceTournament()
  href: Tournaments.Shared.Hateoas.ResourceTournament.html#Tournaments_Shared_Hateoas_ResourceTournament__ctor
  commentId: M:Tournaments.Shared.Hateoas.ResourceTournament.#ctor
  name.vb: New()
  fullName: Tournaments.Shared.Hateoas.ResourceTournament.ResourceTournament()
  fullName.vb: Tournaments.Shared.Hateoas.ResourceTournament.New()
  nameWithType: ResourceTournament.ResourceTournament()
  nameWithType.vb: ResourceTournament.New()
- uid: Tournaments.Shared.Hateoas.ResourceTournament.#ctor(Tournaments.Shared.Models.Tournament)
  name: ResourceTournament(Tournament)
  href: Tournaments.Shared.Hateoas.ResourceTournament.html#Tournaments_Shared_Hateoas_ResourceTournament__ctor_Tournaments_Shared_Models_Tournament_
  commentId: M:Tournaments.Shared.Hateoas.ResourceTournament.#ctor(Tournaments.Shared.Models.Tournament)
  name.vb: New(Tournament)
  fullName: Tournaments.Shared.Hateoas.ResourceTournament.ResourceTournament(Tournaments.Shared.Models.Tournament)
  fullName.vb: Tournaments.Shared.Hateoas.ResourceTournament.New(Tournaments.Shared.Models.Tournament)
  nameWithType: ResourceTournament.ResourceTournament(Tournament)
  nameWithType.vb: ResourceTournament.New(Tournament)
- uid: Tournaments.Shared.Hateoas.ResourceTournament.#ctor*
  name: ResourceTournament
  href: Tournaments.Shared.Hateoas.ResourceTournament.html#Tournaments_Shared_Hateoas_ResourceTournament__ctor_
  commentId: Overload:Tournaments.Shared.Hateoas.ResourceTournament.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Tournaments.Shared.Hateoas.ResourceTournament.ResourceTournament
  fullName.vb: Tournaments.Shared.Hateoas.ResourceTournament.New
  nameWithType: ResourceTournament.ResourceTournament
  nameWithType.vb: ResourceTournament.New
- uid: Tournaments.Shared.Hateoas.Resource`1
  name: Resource<T>
  href: Tournaments.Shared.Hateoas.Resource-1.html
  commentId: T:Tournaments.Shared.Hateoas.Resource`1
  name.vb: Resource(Of T)
  fullName: Tournaments.Shared.Hateoas.Resource<T>
  fullName.vb: Tournaments.Shared.Hateoas.Resource(Of T)
  nameWithType: Resource<T>
  nameWithType.vb: Resource(Of T)
- uid: Tournaments.Shared.Hateoas.Resource`1.#ctor
  name: Resource()
  href: Tournaments.Shared.Hateoas.Resource-1.html#Tournaments_Shared_Hateoas_Resource_1__ctor
  commentId: M:Tournaments.Shared.Hateoas.Resource`1.#ctor
  name.vb: New()
  fullName: Tournaments.Shared.Hateoas.Resource<T>.Resource()
  fullName.vb: Tournaments.Shared.Hateoas.Resource(Of T).New()
  nameWithType: Resource<T>.Resource()
  nameWithType.vb: Resource(Of T).New()
- uid: Tournaments.Shared.Hateoas.Resource`1.#ctor(`0)
  name: Resource(T)
  href: Tournaments.Shared.Hateoas.Resource-1.html#Tournaments_Shared_Hateoas_Resource_1__ctor__0_
  commentId: M:Tournaments.Shared.Hateoas.Resource`1.#ctor(`0)
  name.vb: New(T)
  fullName: Tournaments.Shared.Hateoas.Resource<T>.Resource(T)
  fullName.vb: Tournaments.Shared.Hateoas.Resource(Of T).New(T)
  nameWithType: Resource<T>.Resource(T)
  nameWithType.vb: Resource(Of T).New(T)
- uid: Tournaments.Shared.Hateoas.Resource`1.#ctor*
  name: Resource
  href: Tournaments.Shared.Hateoas.Resource-1.html#Tournaments_Shared_Hateoas_Resource_1__ctor_
  commentId: Overload:Tournaments.Shared.Hateoas.Resource`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Tournaments.Shared.Hateoas.Resource<T>.Resource
  fullName.vb: Tournaments.Shared.Hateoas.Resource(Of T).New
  nameWithType: Resource<T>.Resource
  nameWithType.vb: Resource(Of T).New
- uid: Tournaments.Shared.Hateoas.Resource`1.Data
  name: Data
  href: Tournaments.Shared.Hateoas.Resource-1.html#Tournaments_Shared_Hateoas_Resource_1_Data
  commentId: P:Tournaments.Shared.Hateoas.Resource`1.Data
  fullName: Tournaments.Shared.Hateoas.Resource<T>.Data
  fullName.vb: Tournaments.Shared.Hateoas.Resource(Of T).Data
  nameWithType: Resource<T>.Data
  nameWithType.vb: Resource(Of T).Data
- uid: Tournaments.Shared.Hateoas.Resource`1.Data*
  name: Data
  href: Tournaments.Shared.Hateoas.Resource-1.html#Tournaments_Shared_Hateoas_Resource_1_Data_
  commentId: Overload:Tournaments.Shared.Hateoas.Resource`1.Data
  isSpec: "True"
  fullName: Tournaments.Shared.Hateoas.Resource<T>.Data
  fullName.vb: Tournaments.Shared.Hateoas.Resource(Of T).Data
  nameWithType: Resource<T>.Data
  nameWithType.vb: Resource(Of T).Data
- uid: Tournaments.Shared.Hateoas.Resource`1.Links
  name: Links
  href: Tournaments.Shared.Hateoas.Resource-1.html#Tournaments_Shared_Hateoas_Resource_1_Links
  commentId: P:Tournaments.Shared.Hateoas.Resource`1.Links
  fullName: Tournaments.Shared.Hateoas.Resource<T>.Links
  fullName.vb: Tournaments.Shared.Hateoas.Resource(Of T).Links
  nameWithType: Resource<T>.Links
  nameWithType.vb: Resource(Of T).Links
- uid: Tournaments.Shared.Hateoas.Resource`1.Links*
  name: Links
  href: Tournaments.Shared.Hateoas.Resource-1.html#Tournaments_Shared_Hateoas_Resource_1_Links_
  commentId: Overload:Tournaments.Shared.Hateoas.Resource`1.Links
  isSpec: "True"
  fullName: Tournaments.Shared.Hateoas.Resource<T>.Links
  fullName.vb: Tournaments.Shared.Hateoas.Resource(Of T).Links
  nameWithType: Resource<T>.Links
  nameWithType.vb: Resource(Of T).Links
- uid: Tournaments.Shared.Models
  name: Tournaments.Shared.Models
  href: Tournaments.Shared.Models.html
  commentId: N:Tournaments.Shared.Models
  fullName: Tournaments.Shared.Models
  nameWithType: Tournaments.Shared.Models
- uid: Tournaments.Shared.Models.Player
  name: Player
  href: Tournaments.Shared.Models.Player.html
  commentId: T:Tournaments.Shared.Models.Player
  fullName: Tournaments.Shared.Models.Player
  nameWithType: Player
- uid: Tournaments.Shared.Models.Player.Age
  name: Age
  href: Tournaments.Shared.Models.Player.html#Tournaments_Shared_Models_Player_Age
  commentId: P:Tournaments.Shared.Models.Player.Age
  fullName: Tournaments.Shared.Models.Player.Age
  nameWithType: Player.Age
- uid: Tournaments.Shared.Models.Player.Age*
  name: Age
  href: Tournaments.Shared.Models.Player.html#Tournaments_Shared_Models_Player_Age_
  commentId: Overload:Tournaments.Shared.Models.Player.Age
  isSpec: "True"
  fullName: Tournaments.Shared.Models.Player.Age
  nameWithType: Player.Age
- uid: Tournaments.Shared.Models.Player.Gamertag
  name: Gamertag
  href: Tournaments.Shared.Models.Player.html#Tournaments_Shared_Models_Player_Gamertag
  commentId: P:Tournaments.Shared.Models.Player.Gamertag
  fullName: Tournaments.Shared.Models.Player.Gamertag
  nameWithType: Player.Gamertag
- uid: Tournaments.Shared.Models.Player.Gamertag*
  name: Gamertag
  href: Tournaments.Shared.Models.Player.html#Tournaments_Shared_Models_Player_Gamertag_
  commentId: Overload:Tournaments.Shared.Models.Player.Gamertag
  isSpec: "True"
  fullName: Tournaments.Shared.Models.Player.Gamertag
  nameWithType: Player.Gamertag
- uid: Tournaments.Shared.Models.Player.Name
  name: Name
  href: Tournaments.Shared.Models.Player.html#Tournaments_Shared_Models_Player_Name
  commentId: P:Tournaments.Shared.Models.Player.Name
  fullName: Tournaments.Shared.Models.Player.Name
  nameWithType: Player.Name
- uid: Tournaments.Shared.Models.Player.Name*
  name: Name
  href: Tournaments.Shared.Models.Player.html#Tournaments_Shared_Models_Player_Name_
  commentId: Overload:Tournaments.Shared.Models.Player.Name
  isSpec: "True"
  fullName: Tournaments.Shared.Models.Player.Name
  nameWithType: Player.Name
- uid: Tournaments.Shared.Models.Player.Registrations
  name: Registrations
  href: Tournaments.Shared.Models.Player.html#Tournaments_Shared_Models_Player_Registrations
  commentId: P:Tournaments.Shared.Models.Player.Registrations
  fullName: Tournaments.Shared.Models.Player.Registrations
  nameWithType: Player.Registrations
- uid: Tournaments.Shared.Models.Player.Registrations*
  name: Registrations
  href: Tournaments.Shared.Models.Player.html#Tournaments_Shared_Models_Player_Registrations_
  commentId: Overload:Tournaments.Shared.Models.Player.Registrations
  isSpec: "True"
  fullName: Tournaments.Shared.Models.Player.Registrations
  nameWithType: Player.Registrations
- uid: Tournaments.Shared.Models.Registration
  name: Registration
  href: Tournaments.Shared.Models.Registration.html
  commentId: T:Tournaments.Shared.Models.Registration
  fullName: Tournaments.Shared.Models.Registration
  nameWithType: Registration
- uid: Tournaments.Shared.Models.Registration.Id
  name: Id
  href: Tournaments.Shared.Models.Registration.html#Tournaments_Shared_Models_Registration_Id
  commentId: P:Tournaments.Shared.Models.Registration.Id
  fullName: Tournaments.Shared.Models.Registration.Id
  nameWithType: Registration.Id
- uid: Tournaments.Shared.Models.Registration.Id*
  name: Id
  href: Tournaments.Shared.Models.Registration.html#Tournaments_Shared_Models_Registration_Id_
  commentId: Overload:Tournaments.Shared.Models.Registration.Id
  isSpec: "True"
  fullName: Tournaments.Shared.Models.Registration.Id
  nameWithType: Registration.Id
- uid: Tournaments.Shared.Models.Registration.Player
  name: Player
  href: Tournaments.Shared.Models.Registration.html#Tournaments_Shared_Models_Registration_Player
  commentId: P:Tournaments.Shared.Models.Registration.Player
  fullName: Tournaments.Shared.Models.Registration.Player
  nameWithType: Registration.Player
- uid: Tournaments.Shared.Models.Registration.Player*
  name: Player
  href: Tournaments.Shared.Models.Registration.html#Tournaments_Shared_Models_Registration_Player_
  commentId: Overload:Tournaments.Shared.Models.Registration.Player
  isSpec: "True"
  fullName: Tournaments.Shared.Models.Registration.Player
  nameWithType: Registration.Player
- uid: Tournaments.Shared.Models.Registration.PlayerGamertag
  name: PlayerGamertag
  href: Tournaments.Shared.Models.Registration.html#Tournaments_Shared_Models_Registration_PlayerGamertag
  commentId: P:Tournaments.Shared.Models.Registration.PlayerGamertag
  fullName: Tournaments.Shared.Models.Registration.PlayerGamertag
  nameWithType: Registration.PlayerGamertag
- uid: Tournaments.Shared.Models.Registration.PlayerGamertag*
  name: PlayerGamertag
  href: Tournaments.Shared.Models.Registration.html#Tournaments_Shared_Models_Registration_PlayerGamertag_
  commentId: Overload:Tournaments.Shared.Models.Registration.PlayerGamertag
  isSpec: "True"
  fullName: Tournaments.Shared.Models.Registration.PlayerGamertag
  nameWithType: Registration.PlayerGamertag
- uid: Tournaments.Shared.Models.Registration.Tournament
  name: Tournament
  href: Tournaments.Shared.Models.Registration.html#Tournaments_Shared_Models_Registration_Tournament
  commentId: P:Tournaments.Shared.Models.Registration.Tournament
  fullName: Tournaments.Shared.Models.Registration.Tournament
  nameWithType: Registration.Tournament
- uid: Tournaments.Shared.Models.Registration.Tournament*
  name: Tournament
  href: Tournaments.Shared.Models.Registration.html#Tournaments_Shared_Models_Registration_Tournament_
  commentId: Overload:Tournaments.Shared.Models.Registration.Tournament
  isSpec: "True"
  fullName: Tournaments.Shared.Models.Registration.Tournament
  nameWithType: Registration.Tournament
- uid: Tournaments.Shared.Models.Registration.TournamentName
  name: TournamentName
  href: Tournaments.Shared.Models.Registration.html#Tournaments_Shared_Models_Registration_TournamentName
  commentId: P:Tournaments.Shared.Models.Registration.TournamentName
  fullName: Tournaments.Shared.Models.Registration.TournamentName
  nameWithType: Registration.TournamentName
- uid: Tournaments.Shared.Models.Registration.TournamentName*
  name: TournamentName
  href: Tournaments.Shared.Models.Registration.html#Tournaments_Shared_Models_Registration_TournamentName_
  commentId: Overload:Tournaments.Shared.Models.Registration.TournamentName
  isSpec: "True"
  fullName: Tournaments.Shared.Models.Registration.TournamentName
  nameWithType: Registration.TournamentName
- uid: Tournaments.Shared.Models.Tournament
  name: Tournament
  href: Tournaments.Shared.Models.Tournament.html
  commentId: T:Tournaments.Shared.Models.Tournament
  fullName: Tournaments.Shared.Models.Tournament
  nameWithType: Tournament
- uid: Tournaments.Shared.Models.Tournament.Name
  name: Name
  href: Tournaments.Shared.Models.Tournament.html#Tournaments_Shared_Models_Tournament_Name
  commentId: P:Tournaments.Shared.Models.Tournament.Name
  fullName: Tournaments.Shared.Models.Tournament.Name
  nameWithType: Tournament.Name
- uid: Tournaments.Shared.Models.Tournament.Name*
  name: Name
  href: Tournaments.Shared.Models.Tournament.html#Tournaments_Shared_Models_Tournament_Name_
  commentId: Overload:Tournaments.Shared.Models.Tournament.Name
  isSpec: "True"
  fullName: Tournaments.Shared.Models.Tournament.Name
  nameWithType: Tournament.Name
- uid: Tournaments.Shared.Models.Tournament.ParentTournament
  name: ParentTournament
  href: Tournaments.Shared.Models.Tournament.html#Tournaments_Shared_Models_Tournament_ParentTournament
  commentId: P:Tournaments.Shared.Models.Tournament.ParentTournament
  fullName: Tournaments.Shared.Models.Tournament.ParentTournament
  nameWithType: Tournament.ParentTournament
- uid: Tournaments.Shared.Models.Tournament.ParentTournament*
  name: ParentTournament
  href: Tournaments.Shared.Models.Tournament.html#Tournaments_Shared_Models_Tournament_ParentTournament_
  commentId: Overload:Tournaments.Shared.Models.Tournament.ParentTournament
  isSpec: "True"
  fullName: Tournaments.Shared.Models.Tournament.ParentTournament
  nameWithType: Tournament.ParentTournament
- uid: Tournaments.Shared.Models.Tournament.ParentTournamentName
  name: ParentTournamentName
  href: Tournaments.Shared.Models.Tournament.html#Tournaments_Shared_Models_Tournament_ParentTournamentName
  commentId: P:Tournaments.Shared.Models.Tournament.ParentTournamentName
  fullName: Tournaments.Shared.Models.Tournament.ParentTournamentName
  nameWithType: Tournament.ParentTournamentName
- uid: Tournaments.Shared.Models.Tournament.ParentTournamentName*
  name: ParentTournamentName
  href: Tournaments.Shared.Models.Tournament.html#Tournaments_Shared_Models_Tournament_ParentTournamentName_
  commentId: Overload:Tournaments.Shared.Models.Tournament.ParentTournamentName
  isSpec: "True"
  fullName: Tournaments.Shared.Models.Tournament.ParentTournamentName
  nameWithType: Tournament.ParentTournamentName
- uid: Tournaments.Shared.Models.Tournament.Registrations
  name: Registrations
  href: Tournaments.Shared.Models.Tournament.html#Tournaments_Shared_Models_Tournament_Registrations
  commentId: P:Tournaments.Shared.Models.Tournament.Registrations
  fullName: Tournaments.Shared.Models.Tournament.Registrations
  nameWithType: Tournament.Registrations
- uid: Tournaments.Shared.Models.Tournament.Registrations*
  name: Registrations
  href: Tournaments.Shared.Models.Tournament.html#Tournaments_Shared_Models_Tournament_Registrations_
  commentId: Overload:Tournaments.Shared.Models.Tournament.Registrations
  isSpec: "True"
  fullName: Tournaments.Shared.Models.Tournament.Registrations
  nameWithType: Tournament.Registrations
- uid: Tournaments.Shared.Models.Tournament.SubTournaments
  name: SubTournaments
  href: Tournaments.Shared.Models.Tournament.html#Tournaments_Shared_Models_Tournament_SubTournaments
  commentId: P:Tournaments.Shared.Models.Tournament.SubTournaments
  fullName: Tournaments.Shared.Models.Tournament.SubTournaments
  nameWithType: Tournament.SubTournaments
- uid: Tournaments.Shared.Models.Tournament.SubTournaments*
  name: SubTournaments
  href: Tournaments.Shared.Models.Tournament.html#Tournaments_Shared_Models_Tournament_SubTournaments_
  commentId: Overload:Tournaments.Shared.Models.Tournament.SubTournaments
  isSpec: "True"
  fullName: Tournaments.Shared.Models.Tournament.SubTournaments
  nameWithType: Tournament.SubTournaments
- uid: Tournaments.Web
  name: Tournaments.Web
  href: Tournaments.Web.html
  commentId: N:Tournaments.Web
  fullName: Tournaments.Web
  nameWithType: Tournaments.Web
- uid: Tournaments.Web.Program
  name: Program
  href: Tournaments.Web.Program.html
  commentId: T:Tournaments.Web.Program
  fullName: Tournaments.Web.Program
  nameWithType: Program
- uid: Tournaments.Web.Program.Main(System.String[])
  name: Main(string[])
  href: Tournaments.Web.Program.html#Tournaments_Web_Program_Main_System_String___
  commentId: M:Tournaments.Web.Program.Main(System.String[])
  name.vb: Main(String())
  fullName: Tournaments.Web.Program.Main(string[])
  fullName.vb: Tournaments.Web.Program.Main(String())
  nameWithType: Program.Main(string[])
  nameWithType.vb: Program.Main(String())
- uid: Tournaments.Web.Program.Main*
  name: Main
  href: Tournaments.Web.Program.html#Tournaments_Web_Program_Main_
  commentId: Overload:Tournaments.Web.Program.Main
  isSpec: "True"
  fullName: Tournaments.Web.Program.Main
  nameWithType: Program.Main
- uid: Tournaments.Web.Services
  name: Tournaments.Web.Services
  href: Tournaments.Web.Services.html
  commentId: N:Tournaments.Web.Services
  fullName: Tournaments.Web.Services
  nameWithType: Tournaments.Web.Services
- uid: Tournaments.Web.Services.ApiStatusService
  name: ApiStatusService
  href: Tournaments.Web.Services.ApiStatusService.html
  commentId: T:Tournaments.Web.Services.ApiStatusService
  fullName: Tournaments.Web.Services.ApiStatusService
  nameWithType: ApiStatusService
- uid: Tournaments.Web.Services.ApiStatusService.#ctor(System.Net.Http.HttpClient)
  name: ApiStatusService(HttpClient)
  href: Tournaments.Web.Services.ApiStatusService.html#Tournaments_Web_Services_ApiStatusService__ctor_System_Net_Http_HttpClient_
  commentId: M:Tournaments.Web.Services.ApiStatusService.#ctor(System.Net.Http.HttpClient)
  name.vb: New(HttpClient)
  fullName: Tournaments.Web.Services.ApiStatusService.ApiStatusService(System.Net.Http.HttpClient)
  fullName.vb: Tournaments.Web.Services.ApiStatusService.New(System.Net.Http.HttpClient)
  nameWithType: ApiStatusService.ApiStatusService(HttpClient)
  nameWithType.vb: ApiStatusService.New(HttpClient)
- uid: Tournaments.Web.Services.ApiStatusService.#ctor*
  name: ApiStatusService
  href: Tournaments.Web.Services.ApiStatusService.html#Tournaments_Web_Services_ApiStatusService__ctor_
  commentId: Overload:Tournaments.Web.Services.ApiStatusService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Tournaments.Web.Services.ApiStatusService.ApiStatusService
  fullName.vb: Tournaments.Web.Services.ApiStatusService.New
  nameWithType: ApiStatusService.ApiStatusService
  nameWithType.vb: ApiStatusService.New
- uid: Tournaments.Web.Services.ApiStatusService.GetDatabaseStatusAsync
  name: GetDatabaseStatusAsync()
  href: Tournaments.Web.Services.ApiStatusService.html#Tournaments_Web_Services_ApiStatusService_GetDatabaseStatusAsync
  commentId: M:Tournaments.Web.Services.ApiStatusService.GetDatabaseStatusAsync
  fullName: Tournaments.Web.Services.ApiStatusService.GetDatabaseStatusAsync()
  nameWithType: ApiStatusService.GetDatabaseStatusAsync()
- uid: Tournaments.Web.Services.ApiStatusService.GetDatabaseStatusAsync*
  name: GetDatabaseStatusAsync
  href: Tournaments.Web.Services.ApiStatusService.html#Tournaments_Web_Services_ApiStatusService_GetDatabaseStatusAsync_
  commentId: Overload:Tournaments.Web.Services.ApiStatusService.GetDatabaseStatusAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.ApiStatusService.GetDatabaseStatusAsync
  nameWithType: ApiStatusService.GetDatabaseStatusAsync
- uid: Tournaments.Web.Services.ApiStatusService.GetStatusAsync
  name: GetStatusAsync()
  href: Tournaments.Web.Services.ApiStatusService.html#Tournaments_Web_Services_ApiStatusService_GetStatusAsync
  commentId: M:Tournaments.Web.Services.ApiStatusService.GetStatusAsync
  fullName: Tournaments.Web.Services.ApiStatusService.GetStatusAsync()
  nameWithType: ApiStatusService.GetStatusAsync()
- uid: Tournaments.Web.Services.ApiStatusService.GetStatusAsync*
  name: GetStatusAsync
  href: Tournaments.Web.Services.ApiStatusService.html#Tournaments_Web_Services_ApiStatusService_GetStatusAsync_
  commentId: Overload:Tournaments.Web.Services.ApiStatusService.GetStatusAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.ApiStatusService.GetStatusAsync
  nameWithType: ApiStatusService.GetStatusAsync
- uid: Tournaments.Web.Services.ApiStatusService.ResetDatabaseAsync
  name: ResetDatabaseAsync()
  href: Tournaments.Web.Services.ApiStatusService.html#Tournaments_Web_Services_ApiStatusService_ResetDatabaseAsync
  commentId: M:Tournaments.Web.Services.ApiStatusService.ResetDatabaseAsync
  fullName: Tournaments.Web.Services.ApiStatusService.ResetDatabaseAsync()
  nameWithType: ApiStatusService.ResetDatabaseAsync()
- uid: Tournaments.Web.Services.ApiStatusService.ResetDatabaseAsync*
  name: ResetDatabaseAsync
  href: Tournaments.Web.Services.ApiStatusService.html#Tournaments_Web_Services_ApiStatusService_ResetDatabaseAsync_
  commentId: Overload:Tournaments.Web.Services.ApiStatusService.ResetDatabaseAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.ApiStatusService.ResetDatabaseAsync
  nameWithType: ApiStatusService.ResetDatabaseAsync
- uid: Tournaments.Web.Services.IApiStatusService
  name: IApiStatusService
  href: Tournaments.Web.Services.IApiStatusService.html
  commentId: T:Tournaments.Web.Services.IApiStatusService
  fullName: Tournaments.Web.Services.IApiStatusService
  nameWithType: IApiStatusService
- uid: Tournaments.Web.Services.IApiStatusService.GetDatabaseStatusAsync
  name: GetDatabaseStatusAsync()
  href: Tournaments.Web.Services.IApiStatusService.html#Tournaments_Web_Services_IApiStatusService_GetDatabaseStatusAsync
  commentId: M:Tournaments.Web.Services.IApiStatusService.GetDatabaseStatusAsync
  fullName: Tournaments.Web.Services.IApiStatusService.GetDatabaseStatusAsync()
  nameWithType: IApiStatusService.GetDatabaseStatusAsync()
- uid: Tournaments.Web.Services.IApiStatusService.GetDatabaseStatusAsync*
  name: GetDatabaseStatusAsync
  href: Tournaments.Web.Services.IApiStatusService.html#Tournaments_Web_Services_IApiStatusService_GetDatabaseStatusAsync_
  commentId: Overload:Tournaments.Web.Services.IApiStatusService.GetDatabaseStatusAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.IApiStatusService.GetDatabaseStatusAsync
  nameWithType: IApiStatusService.GetDatabaseStatusAsync
- uid: Tournaments.Web.Services.IApiStatusService.GetStatusAsync
  name: GetStatusAsync()
  href: Tournaments.Web.Services.IApiStatusService.html#Tournaments_Web_Services_IApiStatusService_GetStatusAsync
  commentId: M:Tournaments.Web.Services.IApiStatusService.GetStatusAsync
  fullName: Tournaments.Web.Services.IApiStatusService.GetStatusAsync()
  nameWithType: IApiStatusService.GetStatusAsync()
- uid: Tournaments.Web.Services.IApiStatusService.GetStatusAsync*
  name: GetStatusAsync
  href: Tournaments.Web.Services.IApiStatusService.html#Tournaments_Web_Services_IApiStatusService_GetStatusAsync_
  commentId: Overload:Tournaments.Web.Services.IApiStatusService.GetStatusAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.IApiStatusService.GetStatusAsync
  nameWithType: IApiStatusService.GetStatusAsync
- uid: Tournaments.Web.Services.IApiStatusService.ResetDatabaseAsync
  name: ResetDatabaseAsync()
  href: Tournaments.Web.Services.IApiStatusService.html#Tournaments_Web_Services_IApiStatusService_ResetDatabaseAsync
  commentId: M:Tournaments.Web.Services.IApiStatusService.ResetDatabaseAsync
  fullName: Tournaments.Web.Services.IApiStatusService.ResetDatabaseAsync()
  nameWithType: IApiStatusService.ResetDatabaseAsync()
- uid: Tournaments.Web.Services.IApiStatusService.ResetDatabaseAsync*
  name: ResetDatabaseAsync
  href: Tournaments.Web.Services.IApiStatusService.html#Tournaments_Web_Services_IApiStatusService_ResetDatabaseAsync_
  commentId: Overload:Tournaments.Web.Services.IApiStatusService.ResetDatabaseAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.IApiStatusService.ResetDatabaseAsync
  nameWithType: IApiStatusService.ResetDatabaseAsync
- uid: Tournaments.Web.Services.IPlayerService
  name: IPlayerService
  href: Tournaments.Web.Services.IPlayerService.html
  commentId: T:Tournaments.Web.Services.IPlayerService
  fullName: Tournaments.Web.Services.IPlayerService
  nameWithType: IPlayerService
- uid: Tournaments.Web.Services.IPlayerService.CreatePlayerAsync(Tournaments.Shared.Models.Player)
  name: CreatePlayerAsync(Player)
  href: Tournaments.Web.Services.IPlayerService.html#Tournaments_Web_Services_IPlayerService_CreatePlayerAsync_Tournaments_Shared_Models_Player_
  commentId: M:Tournaments.Web.Services.IPlayerService.CreatePlayerAsync(Tournaments.Shared.Models.Player)
  fullName: Tournaments.Web.Services.IPlayerService.CreatePlayerAsync(Tournaments.Shared.Models.Player)
  nameWithType: IPlayerService.CreatePlayerAsync(Player)
- uid: Tournaments.Web.Services.IPlayerService.CreatePlayerAsync*
  name: CreatePlayerAsync
  href: Tournaments.Web.Services.IPlayerService.html#Tournaments_Web_Services_IPlayerService_CreatePlayerAsync_
  commentId: Overload:Tournaments.Web.Services.IPlayerService.CreatePlayerAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.IPlayerService.CreatePlayerAsync
  nameWithType: IPlayerService.CreatePlayerAsync
- uid: Tournaments.Web.Services.IPlayerService.DeletePlayerAsync(System.String)
  name: DeletePlayerAsync(string)
  href: Tournaments.Web.Services.IPlayerService.html#Tournaments_Web_Services_IPlayerService_DeletePlayerAsync_System_String_
  commentId: M:Tournaments.Web.Services.IPlayerService.DeletePlayerAsync(System.String)
  name.vb: DeletePlayerAsync(String)
  fullName: Tournaments.Web.Services.IPlayerService.DeletePlayerAsync(string)
  fullName.vb: Tournaments.Web.Services.IPlayerService.DeletePlayerAsync(String)
  nameWithType: IPlayerService.DeletePlayerAsync(string)
  nameWithType.vb: IPlayerService.DeletePlayerAsync(String)
- uid: Tournaments.Web.Services.IPlayerService.DeletePlayerAsync*
  name: DeletePlayerAsync
  href: Tournaments.Web.Services.IPlayerService.html#Tournaments_Web_Services_IPlayerService_DeletePlayerAsync_
  commentId: Overload:Tournaments.Web.Services.IPlayerService.DeletePlayerAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.IPlayerService.DeletePlayerAsync
  nameWithType: IPlayerService.DeletePlayerAsync
- uid: Tournaments.Web.Services.IPlayerService.GetPlayerAsync(System.String)
  name: GetPlayerAsync(string)
  href: Tournaments.Web.Services.IPlayerService.html#Tournaments_Web_Services_IPlayerService_GetPlayerAsync_System_String_
  commentId: M:Tournaments.Web.Services.IPlayerService.GetPlayerAsync(System.String)
  name.vb: GetPlayerAsync(String)
  fullName: Tournaments.Web.Services.IPlayerService.GetPlayerAsync(string)
  fullName.vb: Tournaments.Web.Services.IPlayerService.GetPlayerAsync(String)
  nameWithType: IPlayerService.GetPlayerAsync(string)
  nameWithType.vb: IPlayerService.GetPlayerAsync(String)
- uid: Tournaments.Web.Services.IPlayerService.GetPlayerAsync*
  name: GetPlayerAsync
  href: Tournaments.Web.Services.IPlayerService.html#Tournaments_Web_Services_IPlayerService_GetPlayerAsync_
  commentId: Overload:Tournaments.Web.Services.IPlayerService.GetPlayerAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.IPlayerService.GetPlayerAsync
  nameWithType: IPlayerService.GetPlayerAsync
- uid: Tournaments.Web.Services.IPlayerService.GetPlayersAsync
  name: GetPlayersAsync()
  href: Tournaments.Web.Services.IPlayerService.html#Tournaments_Web_Services_IPlayerService_GetPlayersAsync
  commentId: M:Tournaments.Web.Services.IPlayerService.GetPlayersAsync
  fullName: Tournaments.Web.Services.IPlayerService.GetPlayersAsync()
  nameWithType: IPlayerService.GetPlayersAsync()
- uid: Tournaments.Web.Services.IPlayerService.GetPlayersAsync*
  name: GetPlayersAsync
  href: Tournaments.Web.Services.IPlayerService.html#Tournaments_Web_Services_IPlayerService_GetPlayersAsync_
  commentId: Overload:Tournaments.Web.Services.IPlayerService.GetPlayersAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.IPlayerService.GetPlayersAsync
  nameWithType: IPlayerService.GetPlayersAsync
- uid: Tournaments.Web.Services.IPlayerService.UpdatePlayerAsync(System.String,Tournaments.Shared.Models.Player)
  name: UpdatePlayerAsync(string, Player)
  href: Tournaments.Web.Services.IPlayerService.html#Tournaments_Web_Services_IPlayerService_UpdatePlayerAsync_System_String_Tournaments_Shared_Models_Player_
  commentId: M:Tournaments.Web.Services.IPlayerService.UpdatePlayerAsync(System.String,Tournaments.Shared.Models.Player)
  name.vb: UpdatePlayerAsync(String, Player)
  fullName: Tournaments.Web.Services.IPlayerService.UpdatePlayerAsync(string, Tournaments.Shared.Models.Player)
  fullName.vb: Tournaments.Web.Services.IPlayerService.UpdatePlayerAsync(String, Tournaments.Shared.Models.Player)
  nameWithType: IPlayerService.UpdatePlayerAsync(string, Player)
  nameWithType.vb: IPlayerService.UpdatePlayerAsync(String, Player)
- uid: Tournaments.Web.Services.IPlayerService.UpdatePlayerAsync*
  name: UpdatePlayerAsync
  href: Tournaments.Web.Services.IPlayerService.html#Tournaments_Web_Services_IPlayerService_UpdatePlayerAsync_
  commentId: Overload:Tournaments.Web.Services.IPlayerService.UpdatePlayerAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.IPlayerService.UpdatePlayerAsync
  nameWithType: IPlayerService.UpdatePlayerAsync
- uid: Tournaments.Web.Services.IRegistrationService
  name: IRegistrationService
  href: Tournaments.Web.Services.IRegistrationService.html
  commentId: T:Tournaments.Web.Services.IRegistrationService
  fullName: Tournaments.Web.Services.IRegistrationService
  nameWithType: IRegistrationService
- uid: Tournaments.Web.Services.IRegistrationService.GetPlayersForTournamentHierarchyAsync(System.Collections.Generic.IEnumerable{Tournaments.Shared.Models.Tournament})
  name: GetPlayersForTournamentHierarchyAsync(IEnumerable<Tournament>)
  href: Tournaments.Web.Services.IRegistrationService.html#Tournaments_Web_Services_IRegistrationService_GetPlayersForTournamentHierarchyAsync_System_Collections_Generic_IEnumerable_Tournaments_Shared_Models_Tournament__
  commentId: M:Tournaments.Web.Services.IRegistrationService.GetPlayersForTournamentHierarchyAsync(System.Collections.Generic.IEnumerable{Tournaments.Shared.Models.Tournament})
  name.vb: GetPlayersForTournamentHierarchyAsync(IEnumerable(Of Tournament))
  fullName: Tournaments.Web.Services.IRegistrationService.GetPlayersForTournamentHierarchyAsync(System.Collections.Generic.IEnumerable<Tournaments.Shared.Models.Tournament>)
  fullName.vb: Tournaments.Web.Services.IRegistrationService.GetPlayersForTournamentHierarchyAsync(System.Collections.Generic.IEnumerable(Of Tournaments.Shared.Models.Tournament))
  nameWithType: IRegistrationService.GetPlayersForTournamentHierarchyAsync(IEnumerable<Tournament>)
  nameWithType.vb: IRegistrationService.GetPlayersForTournamentHierarchyAsync(IEnumerable(Of Tournament))
- uid: Tournaments.Web.Services.IRegistrationService.GetPlayersForTournamentHierarchyAsync*
  name: GetPlayersForTournamentHierarchyAsync
  href: Tournaments.Web.Services.IRegistrationService.html#Tournaments_Web_Services_IRegistrationService_GetPlayersForTournamentHierarchyAsync_
  commentId: Overload:Tournaments.Web.Services.IRegistrationService.GetPlayersForTournamentHierarchyAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.IRegistrationService.GetPlayersForTournamentHierarchyAsync
  nameWithType: IRegistrationService.GetPlayersForTournamentHierarchyAsync
- uid: Tournaments.Web.Services.IRegistrationService.GetPlayersInTournamentAsync(System.String)
  name: GetPlayersInTournamentAsync(string)
  href: Tournaments.Web.Services.IRegistrationService.html#Tournaments_Web_Services_IRegistrationService_GetPlayersInTournamentAsync_System_String_
  commentId: M:Tournaments.Web.Services.IRegistrationService.GetPlayersInTournamentAsync(System.String)
  name.vb: GetPlayersInTournamentAsync(String)
  fullName: Tournaments.Web.Services.IRegistrationService.GetPlayersInTournamentAsync(string)
  fullName.vb: Tournaments.Web.Services.IRegistrationService.GetPlayersInTournamentAsync(String)
  nameWithType: IRegistrationService.GetPlayersInTournamentAsync(string)
  nameWithType.vb: IRegistrationService.GetPlayersInTournamentAsync(String)
- uid: Tournaments.Web.Services.IRegistrationService.GetPlayersInTournamentAsync*
  name: GetPlayersInTournamentAsync
  href: Tournaments.Web.Services.IRegistrationService.html#Tournaments_Web_Services_IRegistrationService_GetPlayersInTournamentAsync_
  commentId: Overload:Tournaments.Web.Services.IRegistrationService.GetPlayersInTournamentAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.IRegistrationService.GetPlayersInTournamentAsync
  nameWithType: IRegistrationService.GetPlayersInTournamentAsync
- uid: Tournaments.Web.Services.IRegistrationService.GetRegistrationAsync(System.String,System.String)
  name: GetRegistrationAsync(string, string)
  href: Tournaments.Web.Services.IRegistrationService.html#Tournaments_Web_Services_IRegistrationService_GetRegistrationAsync_System_String_System_String_
  commentId: M:Tournaments.Web.Services.IRegistrationService.GetRegistrationAsync(System.String,System.String)
  name.vb: GetRegistrationAsync(String, String)
  fullName: Tournaments.Web.Services.IRegistrationService.GetRegistrationAsync(string, string)
  fullName.vb: Tournaments.Web.Services.IRegistrationService.GetRegistrationAsync(String, String)
  nameWithType: IRegistrationService.GetRegistrationAsync(string, string)
  nameWithType.vb: IRegistrationService.GetRegistrationAsync(String, String)
- uid: Tournaments.Web.Services.IRegistrationService.GetRegistrationAsync*
  name: GetRegistrationAsync
  href: Tournaments.Web.Services.IRegistrationService.html#Tournaments_Web_Services_IRegistrationService_GetRegistrationAsync_
  commentId: Overload:Tournaments.Web.Services.IRegistrationService.GetRegistrationAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.IRegistrationService.GetRegistrationAsync
  nameWithType: IRegistrationService.GetRegistrationAsync
- uid: Tournaments.Web.Services.IRegistrationService.GetTournamentsForPlayerAsync(System.String)
  name: GetTournamentsForPlayerAsync(string)
  href: Tournaments.Web.Services.IRegistrationService.html#Tournaments_Web_Services_IRegistrationService_GetTournamentsForPlayerAsync_System_String_
  commentId: M:Tournaments.Web.Services.IRegistrationService.GetTournamentsForPlayerAsync(System.String)
  name.vb: GetTournamentsForPlayerAsync(String)
  fullName: Tournaments.Web.Services.IRegistrationService.GetTournamentsForPlayerAsync(string)
  fullName.vb: Tournaments.Web.Services.IRegistrationService.GetTournamentsForPlayerAsync(String)
  nameWithType: IRegistrationService.GetTournamentsForPlayerAsync(string)
  nameWithType.vb: IRegistrationService.GetTournamentsForPlayerAsync(String)
- uid: Tournaments.Web.Services.IRegistrationService.GetTournamentsForPlayerAsync*
  name: GetTournamentsForPlayerAsync
  href: Tournaments.Web.Services.IRegistrationService.html#Tournaments_Web_Services_IRegistrationService_GetTournamentsForPlayerAsync_
  commentId: Overload:Tournaments.Web.Services.IRegistrationService.GetTournamentsForPlayerAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.IRegistrationService.GetTournamentsForPlayerAsync
  nameWithType: IRegistrationService.GetTournamentsForPlayerAsync
- uid: Tournaments.Web.Services.IRegistrationService.RegisterPlayerAsync(System.String,System.String)
  name: RegisterPlayerAsync(string, string)
  href: Tournaments.Web.Services.IRegistrationService.html#Tournaments_Web_Services_IRegistrationService_RegisterPlayerAsync_System_String_System_String_
  commentId: M:Tournaments.Web.Services.IRegistrationService.RegisterPlayerAsync(System.String,System.String)
  name.vb: RegisterPlayerAsync(String, String)
  fullName: Tournaments.Web.Services.IRegistrationService.RegisterPlayerAsync(string, string)
  fullName.vb: Tournaments.Web.Services.IRegistrationService.RegisterPlayerAsync(String, String)
  nameWithType: IRegistrationService.RegisterPlayerAsync(string, string)
  nameWithType.vb: IRegistrationService.RegisterPlayerAsync(String, String)
- uid: Tournaments.Web.Services.IRegistrationService.RegisterPlayerAsync*
  name: RegisterPlayerAsync
  href: Tournaments.Web.Services.IRegistrationService.html#Tournaments_Web_Services_IRegistrationService_RegisterPlayerAsync_
  commentId: Overload:Tournaments.Web.Services.IRegistrationService.RegisterPlayerAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.IRegistrationService.RegisterPlayerAsync
  nameWithType: IRegistrationService.RegisterPlayerAsync
- uid: Tournaments.Web.Services.IRegistrationService.RemovePlayerFromTournamentAsync(System.String,System.String)
  name: RemovePlayerFromTournamentAsync(string, string)
  href: Tournaments.Web.Services.IRegistrationService.html#Tournaments_Web_Services_IRegistrationService_RemovePlayerFromTournamentAsync_System_String_System_String_
  commentId: M:Tournaments.Web.Services.IRegistrationService.RemovePlayerFromTournamentAsync(System.String,System.String)
  name.vb: RemovePlayerFromTournamentAsync(String, String)
  fullName: Tournaments.Web.Services.IRegistrationService.RemovePlayerFromTournamentAsync(string, string)
  fullName.vb: Tournaments.Web.Services.IRegistrationService.RemovePlayerFromTournamentAsync(String, String)
  nameWithType: IRegistrationService.RemovePlayerFromTournamentAsync(string, string)
  nameWithType.vb: IRegistrationService.RemovePlayerFromTournamentAsync(String, String)
- uid: Tournaments.Web.Services.IRegistrationService.RemovePlayerFromTournamentAsync*
  name: RemovePlayerFromTournamentAsync
  href: Tournaments.Web.Services.IRegistrationService.html#Tournaments_Web_Services_IRegistrationService_RemovePlayerFromTournamentAsync_
  commentId: Overload:Tournaments.Web.Services.IRegistrationService.RemovePlayerFromTournamentAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.IRegistrationService.RemovePlayerFromTournamentAsync
  nameWithType: IRegistrationService.RemovePlayerFromTournamentAsync
- uid: Tournaments.Web.Services.ITournamentService
  name: ITournamentService
  href: Tournaments.Web.Services.ITournamentService.html
  commentId: T:Tournaments.Web.Services.ITournamentService
  fullName: Tournaments.Web.Services.ITournamentService
  nameWithType: ITournamentService
- uid: Tournaments.Web.Services.ITournamentService.CreateTournamentAsync(Tournaments.Shared.Models.Tournament)
  name: CreateTournamentAsync(Tournament)
  href: Tournaments.Web.Services.ITournamentService.html#Tournaments_Web_Services_ITournamentService_CreateTournamentAsync_Tournaments_Shared_Models_Tournament_
  commentId: M:Tournaments.Web.Services.ITournamentService.CreateTournamentAsync(Tournaments.Shared.Models.Tournament)
  fullName: Tournaments.Web.Services.ITournamentService.CreateTournamentAsync(Tournaments.Shared.Models.Tournament)
  nameWithType: ITournamentService.CreateTournamentAsync(Tournament)
- uid: Tournaments.Web.Services.ITournamentService.CreateTournamentAsync*
  name: CreateTournamentAsync
  href: Tournaments.Web.Services.ITournamentService.html#Tournaments_Web_Services_ITournamentService_CreateTournamentAsync_
  commentId: Overload:Tournaments.Web.Services.ITournamentService.CreateTournamentAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.ITournamentService.CreateTournamentAsync
  nameWithType: ITournamentService.CreateTournamentAsync
- uid: Tournaments.Web.Services.ITournamentService.DeleteTournamentAsync(System.String)
  name: DeleteTournamentAsync(string)
  href: Tournaments.Web.Services.ITournamentService.html#Tournaments_Web_Services_ITournamentService_DeleteTournamentAsync_System_String_
  commentId: M:Tournaments.Web.Services.ITournamentService.DeleteTournamentAsync(System.String)
  name.vb: DeleteTournamentAsync(String)
  fullName: Tournaments.Web.Services.ITournamentService.DeleteTournamentAsync(string)
  fullName.vb: Tournaments.Web.Services.ITournamentService.DeleteTournamentAsync(String)
  nameWithType: ITournamentService.DeleteTournamentAsync(string)
  nameWithType.vb: ITournamentService.DeleteTournamentAsync(String)
- uid: Tournaments.Web.Services.ITournamentService.DeleteTournamentAsync*
  name: DeleteTournamentAsync
  href: Tournaments.Web.Services.ITournamentService.html#Tournaments_Web_Services_ITournamentService_DeleteTournamentAsync_
  commentId: Overload:Tournaments.Web.Services.ITournamentService.DeleteTournamentAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.ITournamentService.DeleteTournamentAsync
  nameWithType: ITournamentService.DeleteTournamentAsync
- uid: Tournaments.Web.Services.ITournamentService.GetAllTournamentsWithHierarchyAsync
  name: GetAllTournamentsWithHierarchyAsync()
  href: Tournaments.Web.Services.ITournamentService.html#Tournaments_Web_Services_ITournamentService_GetAllTournamentsWithHierarchyAsync
  commentId: M:Tournaments.Web.Services.ITournamentService.GetAllTournamentsWithHierarchyAsync
  fullName: Tournaments.Web.Services.ITournamentService.GetAllTournamentsWithHierarchyAsync()
  nameWithType: ITournamentService.GetAllTournamentsWithHierarchyAsync()
- uid: Tournaments.Web.Services.ITournamentService.GetAllTournamentsWithHierarchyAsync*
  name: GetAllTournamentsWithHierarchyAsync
  href: Tournaments.Web.Services.ITournamentService.html#Tournaments_Web_Services_ITournamentService_GetAllTournamentsWithHierarchyAsync_
  commentId: Overload:Tournaments.Web.Services.ITournamentService.GetAllTournamentsWithHierarchyAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.ITournamentService.GetAllTournamentsWithHierarchyAsync
  nameWithType: ITournamentService.GetAllTournamentsWithHierarchyAsync
- uid: Tournaments.Web.Services.ITournamentService.GetTournamentAsync(System.String,System.Boolean)
  name: GetTournamentAsync(string, bool)
  href: Tournaments.Web.Services.ITournamentService.html#Tournaments_Web_Services_ITournamentService_GetTournamentAsync_System_String_System_Boolean_
  commentId: M:Tournaments.Web.Services.ITournamentService.GetTournamentAsync(System.String,System.Boolean)
  name.vb: GetTournamentAsync(String, Boolean)
  fullName: Tournaments.Web.Services.ITournamentService.GetTournamentAsync(string, bool)
  fullName.vb: Tournaments.Web.Services.ITournamentService.GetTournamentAsync(String, Boolean)
  nameWithType: ITournamentService.GetTournamentAsync(string, bool)
  nameWithType.vb: ITournamentService.GetTournamentAsync(String, Boolean)
- uid: Tournaments.Web.Services.ITournamentService.GetTournamentAsync*
  name: GetTournamentAsync
  href: Tournaments.Web.Services.ITournamentService.html#Tournaments_Web_Services_ITournamentService_GetTournamentAsync_
  commentId: Overload:Tournaments.Web.Services.ITournamentService.GetTournamentAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.ITournamentService.GetTournamentAsync
  nameWithType: ITournamentService.GetTournamentAsync
- uid: Tournaments.Web.Services.ITournamentService.GetTournamentsAsync
  name: GetTournamentsAsync()
  href: Tournaments.Web.Services.ITournamentService.html#Tournaments_Web_Services_ITournamentService_GetTournamentsAsync
  commentId: M:Tournaments.Web.Services.ITournamentService.GetTournamentsAsync
  fullName: Tournaments.Web.Services.ITournamentService.GetTournamentsAsync()
  nameWithType: ITournamentService.GetTournamentsAsync()
- uid: Tournaments.Web.Services.ITournamentService.GetTournamentsAsync*
  name: GetTournamentsAsync
  href: Tournaments.Web.Services.ITournamentService.html#Tournaments_Web_Services_ITournamentService_GetTournamentsAsync_
  commentId: Overload:Tournaments.Web.Services.ITournamentService.GetTournamentsAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.ITournamentService.GetTournamentsAsync
  nameWithType: ITournamentService.GetTournamentsAsync
- uid: Tournaments.Web.Services.ITournamentService.UpdateTournamentAsync(System.String,Tournaments.Shared.Models.Tournament)
  name: UpdateTournamentAsync(string, Tournament)
  href: Tournaments.Web.Services.ITournamentService.html#Tournaments_Web_Services_ITournamentService_UpdateTournamentAsync_System_String_Tournaments_Shared_Models_Tournament_
  commentId: M:Tournaments.Web.Services.ITournamentService.UpdateTournamentAsync(System.String,Tournaments.Shared.Models.Tournament)
  name.vb: UpdateTournamentAsync(String, Tournament)
  fullName: Tournaments.Web.Services.ITournamentService.UpdateTournamentAsync(string, Tournaments.Shared.Models.Tournament)
  fullName.vb: Tournaments.Web.Services.ITournamentService.UpdateTournamentAsync(String, Tournaments.Shared.Models.Tournament)
  nameWithType: ITournamentService.UpdateTournamentAsync(string, Tournament)
  nameWithType.vb: ITournamentService.UpdateTournamentAsync(String, Tournament)
- uid: Tournaments.Web.Services.ITournamentService.UpdateTournamentAsync*
  name: UpdateTournamentAsync
  href: Tournaments.Web.Services.ITournamentService.html#Tournaments_Web_Services_ITournamentService_UpdateTournamentAsync_
  commentId: Overload:Tournaments.Web.Services.ITournamentService.UpdateTournamentAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.ITournamentService.UpdateTournamentAsync
  nameWithType: ITournamentService.UpdateTournamentAsync
- uid: Tournaments.Web.Services.PlayerService
  name: PlayerService
  href: Tournaments.Web.Services.PlayerService.html
  commentId: T:Tournaments.Web.Services.PlayerService
  fullName: Tournaments.Web.Services.PlayerService
  nameWithType: PlayerService
- uid: Tournaments.Web.Services.PlayerService.#ctor(System.Net.Http.HttpClient)
  name: PlayerService(HttpClient)
  href: Tournaments.Web.Services.PlayerService.html#Tournaments_Web_Services_PlayerService__ctor_System_Net_Http_HttpClient_
  commentId: M:Tournaments.Web.Services.PlayerService.#ctor(System.Net.Http.HttpClient)
  name.vb: New(HttpClient)
  fullName: Tournaments.Web.Services.PlayerService.PlayerService(System.Net.Http.HttpClient)
  fullName.vb: Tournaments.Web.Services.PlayerService.New(System.Net.Http.HttpClient)
  nameWithType: PlayerService.PlayerService(HttpClient)
  nameWithType.vb: PlayerService.New(HttpClient)
- uid: Tournaments.Web.Services.PlayerService.#ctor*
  name: PlayerService
  href: Tournaments.Web.Services.PlayerService.html#Tournaments_Web_Services_PlayerService__ctor_
  commentId: Overload:Tournaments.Web.Services.PlayerService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Tournaments.Web.Services.PlayerService.PlayerService
  fullName.vb: Tournaments.Web.Services.PlayerService.New
  nameWithType: PlayerService.PlayerService
  nameWithType.vb: PlayerService.New
- uid: Tournaments.Web.Services.PlayerService.CreatePlayerAsync(Tournaments.Shared.Models.Player)
  name: CreatePlayerAsync(Player)
  href: Tournaments.Web.Services.PlayerService.html#Tournaments_Web_Services_PlayerService_CreatePlayerAsync_Tournaments_Shared_Models_Player_
  commentId: M:Tournaments.Web.Services.PlayerService.CreatePlayerAsync(Tournaments.Shared.Models.Player)
  fullName: Tournaments.Web.Services.PlayerService.CreatePlayerAsync(Tournaments.Shared.Models.Player)
  nameWithType: PlayerService.CreatePlayerAsync(Player)
- uid: Tournaments.Web.Services.PlayerService.CreatePlayerAsync*
  name: CreatePlayerAsync
  href: Tournaments.Web.Services.PlayerService.html#Tournaments_Web_Services_PlayerService_CreatePlayerAsync_
  commentId: Overload:Tournaments.Web.Services.PlayerService.CreatePlayerAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.PlayerService.CreatePlayerAsync
  nameWithType: PlayerService.CreatePlayerAsync
- uid: Tournaments.Web.Services.PlayerService.DeletePlayerAsync(System.String)
  name: DeletePlayerAsync(string)
  href: Tournaments.Web.Services.PlayerService.html#Tournaments_Web_Services_PlayerService_DeletePlayerAsync_System_String_
  commentId: M:Tournaments.Web.Services.PlayerService.DeletePlayerAsync(System.String)
  name.vb: DeletePlayerAsync(String)
  fullName: Tournaments.Web.Services.PlayerService.DeletePlayerAsync(string)
  fullName.vb: Tournaments.Web.Services.PlayerService.DeletePlayerAsync(String)
  nameWithType: PlayerService.DeletePlayerAsync(string)
  nameWithType.vb: PlayerService.DeletePlayerAsync(String)
- uid: Tournaments.Web.Services.PlayerService.DeletePlayerAsync*
  name: DeletePlayerAsync
  href: Tournaments.Web.Services.PlayerService.html#Tournaments_Web_Services_PlayerService_DeletePlayerAsync_
  commentId: Overload:Tournaments.Web.Services.PlayerService.DeletePlayerAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.PlayerService.DeletePlayerAsync
  nameWithType: PlayerService.DeletePlayerAsync
- uid: Tournaments.Web.Services.PlayerService.GetPlayerAsync(System.String)
  name: GetPlayerAsync(string)
  href: Tournaments.Web.Services.PlayerService.html#Tournaments_Web_Services_PlayerService_GetPlayerAsync_System_String_
  commentId: M:Tournaments.Web.Services.PlayerService.GetPlayerAsync(System.String)
  name.vb: GetPlayerAsync(String)
  fullName: Tournaments.Web.Services.PlayerService.GetPlayerAsync(string)
  fullName.vb: Tournaments.Web.Services.PlayerService.GetPlayerAsync(String)
  nameWithType: PlayerService.GetPlayerAsync(string)
  nameWithType.vb: PlayerService.GetPlayerAsync(String)
- uid: Tournaments.Web.Services.PlayerService.GetPlayerAsync*
  name: GetPlayerAsync
  href: Tournaments.Web.Services.PlayerService.html#Tournaments_Web_Services_PlayerService_GetPlayerAsync_
  commentId: Overload:Tournaments.Web.Services.PlayerService.GetPlayerAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.PlayerService.GetPlayerAsync
  nameWithType: PlayerService.GetPlayerAsync
- uid: Tournaments.Web.Services.PlayerService.GetPlayersAsync
  name: GetPlayersAsync()
  href: Tournaments.Web.Services.PlayerService.html#Tournaments_Web_Services_PlayerService_GetPlayersAsync
  commentId: M:Tournaments.Web.Services.PlayerService.GetPlayersAsync
  fullName: Tournaments.Web.Services.PlayerService.GetPlayersAsync()
  nameWithType: PlayerService.GetPlayersAsync()
- uid: Tournaments.Web.Services.PlayerService.GetPlayersAsync*
  name: GetPlayersAsync
  href: Tournaments.Web.Services.PlayerService.html#Tournaments_Web_Services_PlayerService_GetPlayersAsync_
  commentId: Overload:Tournaments.Web.Services.PlayerService.GetPlayersAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.PlayerService.GetPlayersAsync
  nameWithType: PlayerService.GetPlayersAsync
- uid: Tournaments.Web.Services.PlayerService.UpdatePlayerAsync(System.String,Tournaments.Shared.Models.Player)
  name: UpdatePlayerAsync(string, Player)
  href: Tournaments.Web.Services.PlayerService.html#Tournaments_Web_Services_PlayerService_UpdatePlayerAsync_System_String_Tournaments_Shared_Models_Player_
  commentId: M:Tournaments.Web.Services.PlayerService.UpdatePlayerAsync(System.String,Tournaments.Shared.Models.Player)
  name.vb: UpdatePlayerAsync(String, Player)
  fullName: Tournaments.Web.Services.PlayerService.UpdatePlayerAsync(string, Tournaments.Shared.Models.Player)
  fullName.vb: Tournaments.Web.Services.PlayerService.UpdatePlayerAsync(String, Tournaments.Shared.Models.Player)
  nameWithType: PlayerService.UpdatePlayerAsync(string, Player)
  nameWithType.vb: PlayerService.UpdatePlayerAsync(String, Player)
- uid: Tournaments.Web.Services.PlayerService.UpdatePlayerAsync*
  name: UpdatePlayerAsync
  href: Tournaments.Web.Services.PlayerService.html#Tournaments_Web_Services_PlayerService_UpdatePlayerAsync_
  commentId: Overload:Tournaments.Web.Services.PlayerService.UpdatePlayerAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.PlayerService.UpdatePlayerAsync
  nameWithType: PlayerService.UpdatePlayerAsync
- uid: Tournaments.Web.Services.RegistrationService
  name: RegistrationService
  href: Tournaments.Web.Services.RegistrationService.html
  commentId: T:Tournaments.Web.Services.RegistrationService
  fullName: Tournaments.Web.Services.RegistrationService
  nameWithType: RegistrationService
- uid: Tournaments.Web.Services.RegistrationService.#ctor(System.Net.Http.HttpClient)
  name: RegistrationService(HttpClient)
  href: Tournaments.Web.Services.RegistrationService.html#Tournaments_Web_Services_RegistrationService__ctor_System_Net_Http_HttpClient_
  commentId: M:Tournaments.Web.Services.RegistrationService.#ctor(System.Net.Http.HttpClient)
  name.vb: New(HttpClient)
  fullName: Tournaments.Web.Services.RegistrationService.RegistrationService(System.Net.Http.HttpClient)
  fullName.vb: Tournaments.Web.Services.RegistrationService.New(System.Net.Http.HttpClient)
  nameWithType: RegistrationService.RegistrationService(HttpClient)
  nameWithType.vb: RegistrationService.New(HttpClient)
- uid: Tournaments.Web.Services.RegistrationService.#ctor*
  name: RegistrationService
  href: Tournaments.Web.Services.RegistrationService.html#Tournaments_Web_Services_RegistrationService__ctor_
  commentId: Overload:Tournaments.Web.Services.RegistrationService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Tournaments.Web.Services.RegistrationService.RegistrationService
  fullName.vb: Tournaments.Web.Services.RegistrationService.New
  nameWithType: RegistrationService.RegistrationService
  nameWithType.vb: RegistrationService.New
- uid: Tournaments.Web.Services.RegistrationService.GetPlayersForTournamentHierarchyAsync(System.Collections.Generic.IEnumerable{Tournaments.Shared.Models.Tournament})
  name: GetPlayersForTournamentHierarchyAsync(IEnumerable<Tournament>)
  href: Tournaments.Web.Services.RegistrationService.html#Tournaments_Web_Services_RegistrationService_GetPlayersForTournamentHierarchyAsync_System_Collections_Generic_IEnumerable_Tournaments_Shared_Models_Tournament__
  commentId: M:Tournaments.Web.Services.RegistrationService.GetPlayersForTournamentHierarchyAsync(System.Collections.Generic.IEnumerable{Tournaments.Shared.Models.Tournament})
  name.vb: GetPlayersForTournamentHierarchyAsync(IEnumerable(Of Tournament))
  fullName: Tournaments.Web.Services.RegistrationService.GetPlayersForTournamentHierarchyAsync(System.Collections.Generic.IEnumerable<Tournaments.Shared.Models.Tournament>)
  fullName.vb: Tournaments.Web.Services.RegistrationService.GetPlayersForTournamentHierarchyAsync(System.Collections.Generic.IEnumerable(Of Tournaments.Shared.Models.Tournament))
  nameWithType: RegistrationService.GetPlayersForTournamentHierarchyAsync(IEnumerable<Tournament>)
  nameWithType.vb: RegistrationService.GetPlayersForTournamentHierarchyAsync(IEnumerable(Of Tournament))
- uid: Tournaments.Web.Services.RegistrationService.GetPlayersForTournamentHierarchyAsync*
  name: GetPlayersForTournamentHierarchyAsync
  href: Tournaments.Web.Services.RegistrationService.html#Tournaments_Web_Services_RegistrationService_GetPlayersForTournamentHierarchyAsync_
  commentId: Overload:Tournaments.Web.Services.RegistrationService.GetPlayersForTournamentHierarchyAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.RegistrationService.GetPlayersForTournamentHierarchyAsync
  nameWithType: RegistrationService.GetPlayersForTournamentHierarchyAsync
- uid: Tournaments.Web.Services.RegistrationService.GetPlayersInTournamentAsync(System.String)
  name: GetPlayersInTournamentAsync(string)
  href: Tournaments.Web.Services.RegistrationService.html#Tournaments_Web_Services_RegistrationService_GetPlayersInTournamentAsync_System_String_
  commentId: M:Tournaments.Web.Services.RegistrationService.GetPlayersInTournamentAsync(System.String)
  name.vb: GetPlayersInTournamentAsync(String)
  fullName: Tournaments.Web.Services.RegistrationService.GetPlayersInTournamentAsync(string)
  fullName.vb: Tournaments.Web.Services.RegistrationService.GetPlayersInTournamentAsync(String)
  nameWithType: RegistrationService.GetPlayersInTournamentAsync(string)
  nameWithType.vb: RegistrationService.GetPlayersInTournamentAsync(String)
- uid: Tournaments.Web.Services.RegistrationService.GetPlayersInTournamentAsync*
  name: GetPlayersInTournamentAsync
  href: Tournaments.Web.Services.RegistrationService.html#Tournaments_Web_Services_RegistrationService_GetPlayersInTournamentAsync_
  commentId: Overload:Tournaments.Web.Services.RegistrationService.GetPlayersInTournamentAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.RegistrationService.GetPlayersInTournamentAsync
  nameWithType: RegistrationService.GetPlayersInTournamentAsync
- uid: Tournaments.Web.Services.RegistrationService.GetRegistrationAsync(System.String,System.String)
  name: GetRegistrationAsync(string, string)
  href: Tournaments.Web.Services.RegistrationService.html#Tournaments_Web_Services_RegistrationService_GetRegistrationAsync_System_String_System_String_
  commentId: M:Tournaments.Web.Services.RegistrationService.GetRegistrationAsync(System.String,System.String)
  name.vb: GetRegistrationAsync(String, String)
  fullName: Tournaments.Web.Services.RegistrationService.GetRegistrationAsync(string, string)
  fullName.vb: Tournaments.Web.Services.RegistrationService.GetRegistrationAsync(String, String)
  nameWithType: RegistrationService.GetRegistrationAsync(string, string)
  nameWithType.vb: RegistrationService.GetRegistrationAsync(String, String)
- uid: Tournaments.Web.Services.RegistrationService.GetRegistrationAsync*
  name: GetRegistrationAsync
  href: Tournaments.Web.Services.RegistrationService.html#Tournaments_Web_Services_RegistrationService_GetRegistrationAsync_
  commentId: Overload:Tournaments.Web.Services.RegistrationService.GetRegistrationAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.RegistrationService.GetRegistrationAsync
  nameWithType: RegistrationService.GetRegistrationAsync
- uid: Tournaments.Web.Services.RegistrationService.GetTournamentsForPlayerAsync(System.String)
  name: GetTournamentsForPlayerAsync(string)
  href: Tournaments.Web.Services.RegistrationService.html#Tournaments_Web_Services_RegistrationService_GetTournamentsForPlayerAsync_System_String_
  commentId: M:Tournaments.Web.Services.RegistrationService.GetTournamentsForPlayerAsync(System.String)
  name.vb: GetTournamentsForPlayerAsync(String)
  fullName: Tournaments.Web.Services.RegistrationService.GetTournamentsForPlayerAsync(string)
  fullName.vb: Tournaments.Web.Services.RegistrationService.GetTournamentsForPlayerAsync(String)
  nameWithType: RegistrationService.GetTournamentsForPlayerAsync(string)
  nameWithType.vb: RegistrationService.GetTournamentsForPlayerAsync(String)
- uid: Tournaments.Web.Services.RegistrationService.GetTournamentsForPlayerAsync*
  name: GetTournamentsForPlayerAsync
  href: Tournaments.Web.Services.RegistrationService.html#Tournaments_Web_Services_RegistrationService_GetTournamentsForPlayerAsync_
  commentId: Overload:Tournaments.Web.Services.RegistrationService.GetTournamentsForPlayerAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.RegistrationService.GetTournamentsForPlayerAsync
  nameWithType: RegistrationService.GetTournamentsForPlayerAsync
- uid: Tournaments.Web.Services.RegistrationService.RegisterPlayerAsync(System.String,System.String)
  name: RegisterPlayerAsync(string, string)
  href: Tournaments.Web.Services.RegistrationService.html#Tournaments_Web_Services_RegistrationService_RegisterPlayerAsync_System_String_System_String_
  commentId: M:Tournaments.Web.Services.RegistrationService.RegisterPlayerAsync(System.String,System.String)
  name.vb: RegisterPlayerAsync(String, String)
  fullName: Tournaments.Web.Services.RegistrationService.RegisterPlayerAsync(string, string)
  fullName.vb: Tournaments.Web.Services.RegistrationService.RegisterPlayerAsync(String, String)
  nameWithType: RegistrationService.RegisterPlayerAsync(string, string)
  nameWithType.vb: RegistrationService.RegisterPlayerAsync(String, String)
- uid: Tournaments.Web.Services.RegistrationService.RegisterPlayerAsync*
  name: RegisterPlayerAsync
  href: Tournaments.Web.Services.RegistrationService.html#Tournaments_Web_Services_RegistrationService_RegisterPlayerAsync_
  commentId: Overload:Tournaments.Web.Services.RegistrationService.RegisterPlayerAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.RegistrationService.RegisterPlayerAsync
  nameWithType: RegistrationService.RegisterPlayerAsync
- uid: Tournaments.Web.Services.RegistrationService.RemovePlayerFromTournamentAsync(System.String,System.String)
  name: RemovePlayerFromTournamentAsync(string, string)
  href: Tournaments.Web.Services.RegistrationService.html#Tournaments_Web_Services_RegistrationService_RemovePlayerFromTournamentAsync_System_String_System_String_
  commentId: M:Tournaments.Web.Services.RegistrationService.RemovePlayerFromTournamentAsync(System.String,System.String)
  name.vb: RemovePlayerFromTournamentAsync(String, String)
  fullName: Tournaments.Web.Services.RegistrationService.RemovePlayerFromTournamentAsync(string, string)
  fullName.vb: Tournaments.Web.Services.RegistrationService.RemovePlayerFromTournamentAsync(String, String)
  nameWithType: RegistrationService.RemovePlayerFromTournamentAsync(string, string)
  nameWithType.vb: RegistrationService.RemovePlayerFromTournamentAsync(String, String)
- uid: Tournaments.Web.Services.RegistrationService.RemovePlayerFromTournamentAsync*
  name: RemovePlayerFromTournamentAsync
  href: Tournaments.Web.Services.RegistrationService.html#Tournaments_Web_Services_RegistrationService_RemovePlayerFromTournamentAsync_
  commentId: Overload:Tournaments.Web.Services.RegistrationService.RemovePlayerFromTournamentAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.RegistrationService.RemovePlayerFromTournamentAsync
  nameWithType: RegistrationService.RemovePlayerFromTournamentAsync
- uid: Tournaments.Web.Services.TournamentService
  name: TournamentService
  href: Tournaments.Web.Services.TournamentService.html
  commentId: T:Tournaments.Web.Services.TournamentService
  fullName: Tournaments.Web.Services.TournamentService
  nameWithType: TournamentService
- uid: Tournaments.Web.Services.TournamentService.#ctor(System.Net.Http.HttpClient)
  name: TournamentService(HttpClient)
  href: Tournaments.Web.Services.TournamentService.html#Tournaments_Web_Services_TournamentService__ctor_System_Net_Http_HttpClient_
  commentId: M:Tournaments.Web.Services.TournamentService.#ctor(System.Net.Http.HttpClient)
  name.vb: New(HttpClient)
  fullName: Tournaments.Web.Services.TournamentService.TournamentService(System.Net.Http.HttpClient)
  fullName.vb: Tournaments.Web.Services.TournamentService.New(System.Net.Http.HttpClient)
  nameWithType: TournamentService.TournamentService(HttpClient)
  nameWithType.vb: TournamentService.New(HttpClient)
- uid: Tournaments.Web.Services.TournamentService.#ctor*
  name: TournamentService
  href: Tournaments.Web.Services.TournamentService.html#Tournaments_Web_Services_TournamentService__ctor_
  commentId: Overload:Tournaments.Web.Services.TournamentService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Tournaments.Web.Services.TournamentService.TournamentService
  fullName.vb: Tournaments.Web.Services.TournamentService.New
  nameWithType: TournamentService.TournamentService
  nameWithType.vb: TournamentService.New
- uid: Tournaments.Web.Services.TournamentService.CreateTournamentAsync(Tournaments.Shared.Models.Tournament)
  name: CreateTournamentAsync(Tournament)
  href: Tournaments.Web.Services.TournamentService.html#Tournaments_Web_Services_TournamentService_CreateTournamentAsync_Tournaments_Shared_Models_Tournament_
  commentId: M:Tournaments.Web.Services.TournamentService.CreateTournamentAsync(Tournaments.Shared.Models.Tournament)
  fullName: Tournaments.Web.Services.TournamentService.CreateTournamentAsync(Tournaments.Shared.Models.Tournament)
  nameWithType: TournamentService.CreateTournamentAsync(Tournament)
- uid: Tournaments.Web.Services.TournamentService.CreateTournamentAsync*
  name: CreateTournamentAsync
  href: Tournaments.Web.Services.TournamentService.html#Tournaments_Web_Services_TournamentService_CreateTournamentAsync_
  commentId: Overload:Tournaments.Web.Services.TournamentService.CreateTournamentAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.TournamentService.CreateTournamentAsync
  nameWithType: TournamentService.CreateTournamentAsync
- uid: Tournaments.Web.Services.TournamentService.DeleteTournamentAsync(System.String)
  name: DeleteTournamentAsync(string)
  href: Tournaments.Web.Services.TournamentService.html#Tournaments_Web_Services_TournamentService_DeleteTournamentAsync_System_String_
  commentId: M:Tournaments.Web.Services.TournamentService.DeleteTournamentAsync(System.String)
  name.vb: DeleteTournamentAsync(String)
  fullName: Tournaments.Web.Services.TournamentService.DeleteTournamentAsync(string)
  fullName.vb: Tournaments.Web.Services.TournamentService.DeleteTournamentAsync(String)
  nameWithType: TournamentService.DeleteTournamentAsync(string)
  nameWithType.vb: TournamentService.DeleteTournamentAsync(String)
- uid: Tournaments.Web.Services.TournamentService.DeleteTournamentAsync*
  name: DeleteTournamentAsync
  href: Tournaments.Web.Services.TournamentService.html#Tournaments_Web_Services_TournamentService_DeleteTournamentAsync_
  commentId: Overload:Tournaments.Web.Services.TournamentService.DeleteTournamentAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.TournamentService.DeleteTournamentAsync
  nameWithType: TournamentService.DeleteTournamentAsync
- uid: Tournaments.Web.Services.TournamentService.GetAllTournamentsWithHierarchyAsync
  name: GetAllTournamentsWithHierarchyAsync()
  href: Tournaments.Web.Services.TournamentService.html#Tournaments_Web_Services_TournamentService_GetAllTournamentsWithHierarchyAsync
  commentId: M:Tournaments.Web.Services.TournamentService.GetAllTournamentsWithHierarchyAsync
  fullName: Tournaments.Web.Services.TournamentService.GetAllTournamentsWithHierarchyAsync()
  nameWithType: TournamentService.GetAllTournamentsWithHierarchyAsync()
- uid: Tournaments.Web.Services.TournamentService.GetAllTournamentsWithHierarchyAsync*
  name: GetAllTournamentsWithHierarchyAsync
  href: Tournaments.Web.Services.TournamentService.html#Tournaments_Web_Services_TournamentService_GetAllTournamentsWithHierarchyAsync_
  commentId: Overload:Tournaments.Web.Services.TournamentService.GetAllTournamentsWithHierarchyAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.TournamentService.GetAllTournamentsWithHierarchyAsync
  nameWithType: TournamentService.GetAllTournamentsWithHierarchyAsync
- uid: Tournaments.Web.Services.TournamentService.GetTournamentAsync(System.String,System.Boolean)
  name: GetTournamentAsync(string, bool)
  href: Tournaments.Web.Services.TournamentService.html#Tournaments_Web_Services_TournamentService_GetTournamentAsync_System_String_System_Boolean_
  commentId: M:Tournaments.Web.Services.TournamentService.GetTournamentAsync(System.String,System.Boolean)
  name.vb: GetTournamentAsync(String, Boolean)
  fullName: Tournaments.Web.Services.TournamentService.GetTournamentAsync(string, bool)
  fullName.vb: Tournaments.Web.Services.TournamentService.GetTournamentAsync(String, Boolean)
  nameWithType: TournamentService.GetTournamentAsync(string, bool)
  nameWithType.vb: TournamentService.GetTournamentAsync(String, Boolean)
- uid: Tournaments.Web.Services.TournamentService.GetTournamentAsync*
  name: GetTournamentAsync
  href: Tournaments.Web.Services.TournamentService.html#Tournaments_Web_Services_TournamentService_GetTournamentAsync_
  commentId: Overload:Tournaments.Web.Services.TournamentService.GetTournamentAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.TournamentService.GetTournamentAsync
  nameWithType: TournamentService.GetTournamentAsync
- uid: Tournaments.Web.Services.TournamentService.GetTournamentsAsync
  name: GetTournamentsAsync()
  href: Tournaments.Web.Services.TournamentService.html#Tournaments_Web_Services_TournamentService_GetTournamentsAsync
  commentId: M:Tournaments.Web.Services.TournamentService.GetTournamentsAsync
  fullName: Tournaments.Web.Services.TournamentService.GetTournamentsAsync()
  nameWithType: TournamentService.GetTournamentsAsync()
- uid: Tournaments.Web.Services.TournamentService.GetTournamentsAsync*
  name: GetTournamentsAsync
  href: Tournaments.Web.Services.TournamentService.html#Tournaments_Web_Services_TournamentService_GetTournamentsAsync_
  commentId: Overload:Tournaments.Web.Services.TournamentService.GetTournamentsAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.TournamentService.GetTournamentsAsync
  nameWithType: TournamentService.GetTournamentsAsync
- uid: Tournaments.Web.Services.TournamentService.UpdateTournamentAsync(System.String,Tournaments.Shared.Models.Tournament)
  name: UpdateTournamentAsync(string, Tournament)
  href: Tournaments.Web.Services.TournamentService.html#Tournaments_Web_Services_TournamentService_UpdateTournamentAsync_System_String_Tournaments_Shared_Models_Tournament_
  commentId: M:Tournaments.Web.Services.TournamentService.UpdateTournamentAsync(System.String,Tournaments.Shared.Models.Tournament)
  name.vb: UpdateTournamentAsync(String, Tournament)
  fullName: Tournaments.Web.Services.TournamentService.UpdateTournamentAsync(string, Tournaments.Shared.Models.Tournament)
  fullName.vb: Tournaments.Web.Services.TournamentService.UpdateTournamentAsync(String, Tournaments.Shared.Models.Tournament)
  nameWithType: TournamentService.UpdateTournamentAsync(string, Tournament)
  nameWithType.vb: TournamentService.UpdateTournamentAsync(String, Tournament)
- uid: Tournaments.Web.Services.TournamentService.UpdateTournamentAsync*
  name: UpdateTournamentAsync
  href: Tournaments.Web.Services.TournamentService.html#Tournaments_Web_Services_TournamentService_UpdateTournamentAsync_
  commentId: Overload:Tournaments.Web.Services.TournamentService.UpdateTournamentAsync
  isSpec: "True"
  fullName: Tournaments.Web.Services.TournamentService.UpdateTournamentAsync
  nameWithType: TournamentService.UpdateTournamentAsync
